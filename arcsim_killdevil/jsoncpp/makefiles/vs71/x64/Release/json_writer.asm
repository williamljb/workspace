; Listing generated by Microsoft (R) Optimizing Compiler Version 15.00.21022.08 

include listing.inc


PUBLIC	??_R4Writer@Json@@6B@				; Json::Writer::`RTTI Complete Object Locator'
PUBLIC	?write@FastWriter@Json@@UEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBVValue@2@@Z ; Json::FastWriter::write
PUBLIC	??_R4FastWriter@Json@@6B@			; Json::FastWriter::`RTTI Complete Object Locator'
PUBLIC	??_R3FastWriter@Json@@8				; Json::FastWriter::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2FastWriter@Json@@8				; Json::FastWriter::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@FastWriter@Json@@8		; Json::FastWriter::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVFastWriter@Json@@@8			; Json::FastWriter `RTTI Type Descriptor'
PUBLIC	?write@StyledWriter@Json@@UEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBVValue@2@@Z ; Json::StyledWriter::write
PUBLIC	?hex@std@@YAAEAVios_base@1@AEAV21@@Z		; std::hex
PUBLIC	?uppercase@std@@YAAEAVios_base@1@AEAV21@@Z	; std::uppercase
PUBLIC	??0?$_Fillobj@D@std@@QEAA@D@Z			; std::_Fillobj<char>::_Fillobj<char>
PUBLIC	??$setfill@D@std@@YA?AU?$_Fillobj@D@0@D@Z	; std::setfill<char>
PUBLIC	??$?6DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBU?$_Fillobj@D@0@@Z ; std::operator<<<char,std::char_traits<char> >
PUBLIC	??$?6DU?$char_traits@D@std@@_J@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBU?$_Smanip@_J@0@@Z ; std::operator<<<char,std::char_traits<char>,__int64>
PUBLIC	??1FastWriter@Json@@UEAA@XZ			; Json::FastWriter::~FastWriter
PUBLIC	??_GFastWriter@Json@@UEAAPEAXI@Z		; Json::FastWriter::`scalar deleting destructor'
PUBLIC	??_GWriter@Json@@UEAAPEAXI@Z			; Json::Writer::`scalar deleting destructor'
PUBLIC	??0Writer@Json@@QEAA@XZ				; Json::Writer::Writer
PUBLIC	??D?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBAAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@XZ ; std::_Vector_const_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator*
PUBLIC	??D?$_Vector_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBAAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@XZ ; std::_Vector_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator*
PUBLIC	??E?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAAEAV01@XZ ; std::_Vector_const_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator++
PUBLIC	??E?$_Vector_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAAEAV01@XZ ; std::_Vector_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator++
PUBLIC	?empty@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBA_NXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::empty
PUBLIC	??A?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@_K@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator[]
PUBLIC	?_Make_iter@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBA?AV?$_Vector_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Make_iter
PUBLIC	??8?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBA_NAEBV01@@Z ; std::_Vector_const_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator==
PUBLIC	??9?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBA_NAEBV01@@Z ; std::_Vector_const_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator!=
PUBLIC	??$_Copy_opt@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAV12@Uforward_iterator_tag@2@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PEAV10@00Uforward_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Copy_opt<std::basic_string<char,std::char_traits<char>,std::allocator<char> > * __ptr64,std::basic_string<char,std::char_traits<char>,std::allocator<char> > * __ptr64,std::forward_iterator_tag>
PUBLIC	??$_Copy_opt@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAV12@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PEAV10@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Copy_opt<std::basic_string<char,std::char_traits<char>,std::allocator<char> > * __ptr64,std::basic_string<char,std::char_traits<char>,std::allocator<char> > * __ptr64>
PUBLIC	??$unchecked_copy@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAV12@@stdext@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAV12@00@Z ; stdext::unchecked_copy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > * __ptr64,std::basic_string<char,std::char_traits<char>,std::allocator<char> > * __ptr64>
PUBLIC	?erase@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA?AV?$_Vector_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@0@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::erase
PUBLIC	?clear@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::clear
PUBLIC	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@D@Z ; std::operator<<<std::char_traits<char> >
PUBLIC	??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base
PUBLIC	??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry
PUBLIC	??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
PUBLIC	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
PUBLIC	??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool
PUBLIC	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
PUBLIC	??1StyledStreamWriter@Json@@QEAA@XZ		; Json::StyledStreamWriter::~StyledStreamWriter
PUBLIC	??_C@_06ECBCCLMB@?$CF?$CD?416g?$AA@		; `string'
PUBLIC	??_C@_07FKPPGBGM@?$CC?2?$AI?$AM?6?$AN?7?$AA@	; `string'
PUBLIC	??_C@_01BJJEKLCA@?$CC?$AA@			; `string'
PUBLIC	??_C@_02MCKKLHBJ@?2?$CC?$AA@			; `string'
PUBLIC	??_C@_02HDBGODGB@?2?2?$AA@			; `string'
PUBLIC	??_C@_02DCNDPIBM@?2b?$AA@			; `string'
PUBLIC	??_C@_02FGLPDNBI@?2f?$AA@			; `string'
PUBLIC	??_C@_02JOGGLHBA@?2n?$AA@			; `string'
PUBLIC	??_C@_02HIBBOKEN@?2r?$AA@			; `string'
PUBLIC	??_C@_02COELENML@?2t?$AA@			; `string'
PUBLIC	??_C@_02DHFAHMIK@?2u?$AA@			; `string'
PUBLIC	??_C@_01EEMJAFIK@?6?$AA@			; `string'
PUBLIC	??_C@_04MLLLIHIP@null?$AA@			; `string'
PUBLIC	??_C@_01OHGJGJJP@?$FL?$AA@			; `string'
PUBLIC	??_C@_01IHBHIGKO@?0?$AA@			; `string'
PUBLIC	??_C@_01LBDDMOBJ@?$FN?$AA@			; `string'
PUBLIC	??_C@_01HCONENDN@?$HL?$AA@			; `string'
PUBLIC	??_C@_02LMMGGCAJ@?3?5?$AA@			; `string'
PUBLIC	??_C@_01JLIPDDHJ@?3?$AA@			; `string'
PUBLIC	??_C@_01CELHOKLL@?$HN?$AA@			; `string'
PUBLIC	??_C@_02MCILKGOH@?$HL?$HN?$AA@			; `string'
PUBLIC	??_C@_03MCPBMLDJ@?5?3?5?$AA@			; `string'
PUBLIC	??_C@_02GPECMEKF@?$FL?$FN?$AA@			; `string'
PUBLIC	??_C@_02PFNDMDBO@?$FL?5?$AA@			; `string'
PUBLIC	??_C@_02KEGNLNML@?0?5?$AA@			; `string'
PUBLIC	??_C@_02DHOGEDBE@?5?$FN?$AA@			; `string'
PUBLIC	??_C@_01CLKCMJKC@?5?$AA@			; `string'
PUBLIC	??_C@_01GPOEFGEJ@?7?$AA@			; `string'
PUBLIC	??_7FastWriter@Json@@6B@			; Json::FastWriter::`vftable'
PUBLIC	??_7Writer@Json@@6B@				; Json::Writer::`vftable'
EXTRN	__imp_sprintf_s:PROC
EXTRN	__imp_strpbrk:PROC
EXTRN	__imp_?setf@ios_base@std@@QEAAHHH@Z:PROC
EXTRN	__imp_?setf@ios_base@std@@QEAAHH@Z:PROC
EXTRN	__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAVios_base@1@AEAV21@@Z@Z:PROC
EXTRN	__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@H@Z:PROC
EXTRN	__imp_??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@PEBD@Z:PROC
EXTRN	__imp_??0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z:PROC
EXTRN	__imp_?str@?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ:PROC
EXTRN	__imp_??_D?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ:PROC
EXTRN	__imp_?setw@std@@YA?AU?$_Smanip@_J@1@_J@Z:PROC
EXTRN	__imp_?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAADD@Z:PROC
EXTRN	??_EFastWriter@Json@@UEAAPEAXI@Z:PROC		; Json::FastWriter::`vector deleting destructor'
EXTRN	??_EWriter@Json@@UEAAPEAXI@Z:PROC		; Json::Writer::`vector deleting destructor'
EXTRN	__imp_??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAD_K@Z:PROC
EXTRN	__imp_?empty@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_NXZ:PROC
EXTRN	__imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@_KD@Z:PROC
EXTRN	__imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@PEBD@Z:PROC
EXTRN	__imp_??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@PEBD@Z:PROC
EXTRN	__imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z:PROC
EXTRN	__imp_?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ:PROC
EXTRN	__imp_?resize@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K@Z:PROC
EXTRN	__imp_??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PEBDAEBV10@@Z:PROC
EXTRN	__imp_??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z:PROC
EXTRN	__imp_?length@?$char_traits@D@std@@SA_KPEBD@Z:PROC
EXTRN	__imp_?eq_int_type@?$char_traits@D@std@@SA_NAEBH0@Z:PROC
EXTRN	__imp_?eof@?$char_traits@D@std@@SAHXZ:PROC
EXTRN	__imp_?flags@ios_base@std@@QEBAHXZ:PROC
EXTRN	__imp_?width@ios_base@std@@QEBA_JXZ:PROC
EXTRN	__imp_?width@ios_base@std@@QEAA_J_J@Z:PROC
EXTRN	__imp_?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHD@Z:PROC
EXTRN	__imp_?sputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAA_JPEBD_J@Z:PROC
EXTRN	__imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z:PROC
EXTRN	__imp_?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADXZ:PROC
EXTRN	__imp_?good@ios_base@std@@QEBA_NXZ:PROC
EXTRN	__imp_?tie@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_ostream@DU?$char_traits@D@std@@@2@XZ:PROC
EXTRN	__imp_?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ:PROC
EXTRN	__imp_?_Lock@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAXXZ:PROC
EXTRN	__imp_?uncaught_exception@std@@YA_NXZ:PROC
EXTRN	__imp_?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ:PROC
EXTRN	__imp_?_Unlock@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAXXZ:PROC
EXTRN	__imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ:PROC
EXTRN	__imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@D@Z:PROC
EXTRN	__imp_?reserve@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K@Z:PROC
;	COMDAT ??_7Writer@Json@@6B@
CONST	SEGMENT
??_7Writer@Json@@6B@ DQ FLAT:??_R4Writer@Json@@6B@	; Json::Writer::`vftable'
	DQ	FLAT:??_EWriter@Json@@UEAAPEAXI@Z
	DQ	FLAT:_purecall
CONST	ENDS
;	COMDAT ??_R4Writer@Json@@6B@
rdata$r	SEGMENT
??_R4Writer@Json@@6B@ DD 01H				; Json::Writer::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVWriter@Json@@@8
	DD	imagerel ??_R3Writer@Json@@8
	DD	imagerel ??_R4Writer@Json@@6B@
rdata$r	ENDS
;	COMDAT ??_7FastWriter@Json@@6B@
CONST	SEGMENT
??_7FastWriter@Json@@6B@ DQ FLAT:??_R4FastWriter@Json@@6B@ ; Json::FastWriter::`vftable'
	DQ	FLAT:??_EFastWriter@Json@@UEAAPEAXI@Z
	DQ	FLAT:?write@FastWriter@Json@@UEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBVValue@2@@Z
CONST	ENDS
;	COMDAT ??_R4FastWriter@Json@@6B@
rdata$r	SEGMENT
??_R4FastWriter@Json@@6B@ DD 01H			; Json::FastWriter::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVFastWriter@Json@@@8
	DD	imagerel ??_R3FastWriter@Json@@8
	DD	imagerel ??_R4FastWriter@Json@@6B@
rdata$r	ENDS
;	COMDAT ??_R3FastWriter@Json@@8
rdata$r	SEGMENT
??_R3FastWriter@Json@@8 DD 00H				; Json::FastWriter::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	imagerel ??_R2FastWriter@Json@@8
rdata$r	ENDS
;	COMDAT ??_R2FastWriter@Json@@8
rdata$r	SEGMENT
??_R2FastWriter@Json@@8 DD imagerel ??_R1A@?0A@EA@FastWriter@Json@@8 ; Json::FastWriter::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@Writer@Json@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@FastWriter@Json@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@FastWriter@Json@@8 DD imagerel ??_R0?AVFastWriter@Json@@@8 ; Json::FastWriter::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3FastWriter@Json@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVFastWriter@Json@@@8
_DATA	SEGMENT
??_R0?AVFastWriter@Json@@@8 DQ FLAT:??_7type_info@@6B@	; Json::FastWriter `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVFastWriter@Json@@', 00H
_DATA	ENDS
;	COMDAT ??_C@_01GPOEFGEJ@?7?$AA@
CONST	SEGMENT
??_C@_01GPOEFGEJ@?7?$AA@ DB 09H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01CLKCMJKC@?5?$AA@
CONST	SEGMENT
??_C@_01CLKCMJKC@?5?$AA@ DB ' ', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02DHOGEDBE@?5?$FN?$AA@
CONST	SEGMENT
??_C@_02DHOGEDBE@?5?$FN?$AA@ DB ' ]', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_02KEGNLNML@?0?5?$AA@
CONST	SEGMENT
??_C@_02KEGNLNML@?0?5?$AA@ DB ', ', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02PFNDMDBO@?$FL?5?$AA@
CONST	SEGMENT
??_C@_02PFNDMDBO@?$FL?5?$AA@ DB '[ ', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_02GPECMEKF@?$FL?$FN?$AA@
CONST	SEGMENT
??_C@_02GPECMEKF@?$FL?$FN?$AA@ DB '[]', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03MCPBMLDJ@?5?3?5?$AA@
CONST	SEGMENT
??_C@_03MCPBMLDJ@?5?3?5?$AA@ DB ' : ', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_02MCILKGOH@?$HL?$HN?$AA@
CONST	SEGMENT
??_C@_02MCILKGOH@?$HL?$HN?$AA@ DB '{}', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_01CELHOKLL@?$HN?$AA@
CONST	SEGMENT
??_C@_01CELHOKLL@?$HN?$AA@ DB '}', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01JLIPDDHJ@?3?$AA@
CONST	SEGMENT
??_C@_01JLIPDDHJ@?3?$AA@ DB ':', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02LMMGGCAJ@?3?5?$AA@
CONST	SEGMENT
??_C@_02LMMGGCAJ@?3?5?$AA@ DB ': ', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01HCONENDN@?$HL?$AA@
CONST	SEGMENT
??_C@_01HCONENDN@?$HL?$AA@ DB '{', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01LBDDMOBJ@?$FN?$AA@
CONST	SEGMENT
??_C@_01LBDDMOBJ@?$FN?$AA@ DB ']', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01IHBHIGKO@?0?$AA@
CONST	SEGMENT
??_C@_01IHBHIGKO@?0?$AA@ DB ',', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01OHGJGJJP@?$FL?$AA@
CONST	SEGMENT
??_C@_01OHGJGJJP@?$FL?$AA@ DB '[', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04MLLLIHIP@null?$AA@
CONST	SEGMENT
??_C@_04MLLLIHIP@null?$AA@ DB 'null', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_01EEMJAFIK@?6?$AA@
CONST	SEGMENT
??_C@_01EEMJAFIK@?6?$AA@ DB 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02DHFAHMIK@?2u?$AA@
CONST	SEGMENT
??_C@_02DHFAHMIK@?2u?$AA@ DB '\u', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02COELENML@?2t?$AA@
CONST	SEGMENT
??_C@_02COELENML@?2t?$AA@ DB '\t', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02HIBBOKEN@?2r?$AA@
CONST	SEGMENT
??_C@_02HIBBOKEN@?2r?$AA@ DB '\r', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02JOGGLHBA@?2n?$AA@
CONST	SEGMENT
??_C@_02JOGGLHBA@?2n?$AA@ DB '\n', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02FGLPDNBI@?2f?$AA@
CONST	SEGMENT
??_C@_02FGLPDNBI@?2f?$AA@ DB '\f', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02DCNDPIBM@?2b?$AA@
CONST	SEGMENT
??_C@_02DCNDPIBM@?2b?$AA@ DB '\b', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02HDBGODGB@?2?2?$AA@
CONST	SEGMENT
??_C@_02HDBGODGB@?2?2?$AA@ DB '\\', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02MCKKLHBJ@?2?$CC?$AA@
CONST	SEGMENT
??_C@_02MCKKLHBJ@?2?$CC?$AA@ DB '\"', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_01BJJEKLCA@?$CC?$AA@
CONST	SEGMENT
??_C@_01BJJEKLCA@?$CC?$AA@ DB '"', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_07FKPPGBGM@?$CC?2?$AI?$AM?6?$AN?7?$AA@
CONST	SEGMENT
??_C@_07FKPPGBGM@?$CC?2?$AI?$AM?6?$AN?7?$AA@ DB '"\', 08H, 0cH, 0aH, 0dH, 09H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_06ECBCCLMB@?$CF?$CD?416g?$AA@
CONST	SEGMENT
??_C@_06ECBCCLMB@?$CF?$CD?416g?$AA@ DB '%#.16g', 00H	; `string'
_bad_alloc_Message DQ FLAT:??_C@_0P@GHFPNOJB@bad?5allocation?$AA@
;	COMDAT pdata
; File d:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
pdata	SEGMENT
$pdata$??$_Copy_opt@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAV12@Uforward_iterator_tag@2@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PEAV10@00Uforward_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z DD imagerel $LN6
	DD	imagerel $LN6+94
	DD	imagerel $unwind$??$_Copy_opt@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAV12@Uforward_iterator_tag@2@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PEAV10@00Uforward_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Copy_opt@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAV12@Uforward_iterator_tag@2@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PEAV10@00Uforward_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z DD 011801H
	DD	04218H
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT ??$_Copy_opt@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAV12@Uforward_iterator_tag@2@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PEAV10@00Uforward_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
_First$ = 48
_Last$ = 56
_Dest$ = 64
__formal$ = 72
__formal$ = 80
__formal$ = 88
??$_Copy_opt@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAV12@Uforward_iterator_tag@2@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PEAV10@00Uforward_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Copy_opt<std::basic_string<char,std::char_traits<char>,std::allocator<char> > * __ptr64,std::basic_string<char,std::char_traits<char>,std::allocator<char> > * __ptr64,std::forward_iterator_tag>, COMDAT

; 2469 : 	{	// copy [_First, _Last) to [_Dest, ...), arbitrary iterators

$LN6:
	mov	BYTE PTR [rsp+32], r9b
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 2470 : 	_DEBUG_RANGE(_First, _Last);
; 2471 : 	for (; _First != _Last; ++_Dest, ++_First)

	jmp	SHORT $LN3@Copy_opt
$LN2@Copy_opt:
	mov	rax, QWORD PTR _Dest$[rsp]
	add	rax, 40					; 00000028H
	mov	QWORD PTR _Dest$[rsp], rax
	mov	rax, QWORD PTR _First$[rsp]
	add	rax, 40					; 00000028H
	mov	QWORD PTR _First$[rsp], rax
$LN3@Copy_opt:
	mov	rax, QWORD PTR _Last$[rsp]
	cmp	QWORD PTR _First$[rsp], rax
	je	SHORT $LN1@Copy_opt

; 2472 : 		*_Dest = *_First;

	mov	rdx, QWORD PTR _First$[rsp]
	mov	rcx, QWORD PTR _Dest$[rsp]
	call	QWORD PTR __imp_??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z
	jmp	SHORT $LN2@Copy_opt
$LN1@Copy_opt:

; 2473 : 	return (_Dest);

	mov	rax, QWORD PTR _Dest$[rsp]

; 2474 : 	}

	add	rsp, 40					; 00000028H
	ret	0
??$_Copy_opt@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAV12@Uforward_iterator_tag@2@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PEAV10@00Uforward_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Copy_opt<std::basic_string<char,std::char_traits<char>,std::allocator<char> > * __ptr64,std::basic_string<char,std::char_traits<char>,std::allocator<char> > * __ptr64,std::forward_iterator_tag>
; Function compile flags: /Odtp
; File d:\program files (x86)\microsoft visual studio 9.0\vc\include\iomanip
_TEXT	ENDS
;	COMDAT ??0?$_Fillobj@D@std@@QEAA@D@Z
_TEXT	SEGMENT
this$ = 8
_Ch$ = 16
??0?$_Fillobj@D@std@@QEAA@D@Z PROC			; std::_Fillobj<char>::_Fillobj<char>, COMDAT

; 20   : 		{	// construct from fill character

	mov	BYTE PTR [rsp+16], dl
	mov	QWORD PTR [rsp+8], rcx
	mov	rcx, QWORD PTR this$[rsp]
	movzx	eax, BYTE PTR _Ch$[rsp]
	mov	BYTE PTR [rcx], al

; 21   : 		}

	mov	rax, QWORD PTR this$[rsp]
	ret	0
??0?$_Fillobj@D@std@@QEAA@D@Z ENDP			; std::_Fillobj<char>::_Fillobj<char>
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?6DU?$char_traits@D@std@@_J@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBU?$_Smanip@_J@0@@Z DD imagerel $LN5
	DD	imagerel $LN5+89
	DD	imagerel $unwind$??$?6DU?$char_traits@D@std@@_J@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBU?$_Smanip@_J@0@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?6DU?$char_traits@D@std@@_J@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBU?$_Smanip@_J@0@@Z DD 010e01H
	DD	0620eH
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT ??$?6DU?$char_traits@D@std@@_J@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBU?$_Smanip@_J@0@@Z
_TEXT	SEGMENT
tv77 = 32
_Ostr$ = 64
_Manip$ = 72
??$?6DU?$char_traits@D@std@@_J@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBU?$_Smanip@_J@0@@Z PROC ; std::operator<<<char,std::char_traits<char>,__int64>, COMDAT

; 81   : 	{	// insert by calling function with output stream and argument

$LN5:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H

; 82   : 	(*_Manip._Pfun)(_Ostr, _Manip._Manarg);

	cmp	QWORD PTR _Ostr$[rsp], 0
	jne	SHORT $LN3@operator
	mov	QWORD PTR tv77[rsp], 0
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	rax, QWORD PTR _Ostr$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rcx, DWORD PTR [rax+4]
	mov	rax, QWORD PTR _Ostr$[rsp]
	add	rax, rcx
	mov	QWORD PTR tv77[rsp], rax
$LN4@operator:
	mov	rdx, QWORD PTR _Manip$[rsp]
	mov	rdx, QWORD PTR [rdx+8]
	mov	rcx, QWORD PTR tv77[rsp]
	mov	rax, QWORD PTR _Manip$[rsp]
	call	QWORD PTR [rax]

; 83   : 	return (_Ostr);

	mov	rax, QWORD PTR _Ostr$[rsp]

; 84   : 	}

	add	rsp, 56					; 00000038H
	ret	0
??$?6DU?$char_traits@D@std@@_J@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBU?$_Smanip@_J@0@@Z ENDP ; std::operator<<<char,std::char_traits<char>,__int64>
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?6DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBU?$_Fillobj@D@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+58
	DD	imagerel $unwind$??$?6DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBU?$_Fillobj@D@0@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?6DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBU?$_Fillobj@D@0@@Z DD 010e01H
	DD	0420eH
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT ??$?6DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBU?$_Fillobj@D@0@@Z
_TEXT	SEGMENT
_Ostr$ = 48
_Manip$ = 56
??$?6DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBU?$_Fillobj@D@0@@Z PROC ; std::operator<<<char,std::char_traits<char> >, COMDAT

; 48   : 	{	// set fill character in output stream

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 49   : 	_Ostr.fill(_Manip._Fill);

	mov	rax, QWORD PTR _Ostr$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rsp]
	add	rcx, rax
	mov	rax, QWORD PTR _Manip$[rsp]
	movzx	edx, BYTE PTR [rax]
	call	QWORD PTR __imp_?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAADD@Z

; 50   : 	return (_Ostr);

	mov	rax, QWORD PTR _Ostr$[rsp]

; 51   : 	}

	add	rsp, 40					; 00000028H
	ret	0
??$?6DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBU?$_Fillobj@D@0@@Z ENDP ; std::operator<<<char,std::char_traits<char> >
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$setfill@D@std@@YA?AU?$_Fillobj@D@0@D@Z DD imagerel $LN3
	DD	imagerel $LN3+38
	DD	imagerel $unwind$??$setfill@D@std@@YA?AU?$_Fillobj@D@0@D@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$setfill@D@std@@YA?AU?$_Fillobj@D@0@D@Z DD 010d01H
	DD	0420dH
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT ??$setfill@D@std@@YA?AU?$_Fillobj@D@0@D@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 48
_Ch$ = 56
??$setfill@D@std@@YA?AU?$_Fillobj@D@0@D@Z PROC		; std::setfill<char>, COMDAT

; 29   : 	{	// return a _Fillobj manipulator

$LN3:
	mov	BYTE PTR [rsp+16], dl
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 30   : 	return (_Fillobj<_Elem>(_Ch));

	movzx	edx, BYTE PTR _Ch$[rsp]
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	??0?$_Fillobj@D@std@@QEAA@D@Z		; std::_Fillobj<char>::_Fillobj<char>
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 31   : 	}

	add	rsp, 40					; 00000028H
	ret	0
??$setfill@D@std@@YA?AU?$_Fillobj@D@0@D@Z ENDP		; std::setfill<char>
_TEXT	ENDS
;	COMDAT pdata
; File d:\program files (x86)\microsoft visual studio 9.0\vc\include\ostream
pdata	SEGMENT
$pdata$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+86
	DD	imagerel $unwind$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DD 010901H
	DD	04209H
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT ??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ PROC ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base, COMDAT

; 81   : 			{	// destroy after unlocking

$LN4:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 82   : 			if (_Myostr.rdbuf() != 0)

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rax, QWORD PTR [rax]
	movsxd	rcx, DWORD PTR [rax+4]
	mov	rax, QWORD PTR this$[rsp]
	add	rcx, QWORD PTR [rax]
	call	QWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
	test	rax, rax
	je	SHORT $LN1@Sentry_bas

; 83   : 				_Myostr.rdbuf()->_Unlock();

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rax, QWORD PTR [rax]
	movsxd	rcx, DWORD PTR [rax+4]
	mov	rax, QWORD PTR this$[rsp]
	add	rcx, QWORD PTR [rax]
	call	QWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
	mov	rcx, rax
	call	QWORD PTR __imp_?_Unlock@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAXXZ
$LN1@Sentry_bas:

; 84   : 			}

	add	rsp, 40					; 00000028H
	ret	0
??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ENDP ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z DD imagerel $LN4
	DD	imagerel $LN4+109
	DD	imagerel $unwind$??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z DD 010e01H
	DD	0420eH
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT ??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
_TEXT	SEGMENT
this$ = 48
_Ostr$ = 56
??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z PROC ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base, COMDAT

; 75   : 			{	// lock the stream buffer, if there

$LN4:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	mov	rcx, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR _Ostr$[rsp]
	mov	QWORD PTR [rcx], rax

; 76   : 			if (_Myostr.rdbuf() != 0)

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rax, QWORD PTR [rax]
	movsxd	rcx, DWORD PTR [rax+4]
	mov	rax, QWORD PTR this$[rsp]
	add	rcx, QWORD PTR [rax]
	call	QWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
	test	rax, rax
	je	SHORT $LN1@Sentry_bas@2

; 77   : 				_Myostr.rdbuf()->_Lock();

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rax, QWORD PTR [rax]
	movsxd	rcx, DWORD PTR [rax+4]
	mov	rax, QWORD PTR this$[rsp]
	add	rcx, QWORD PTR [rax]
	call	QWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
	mov	rcx, rax
	call	QWORD PTR __imp_?_Lock@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAXXZ
$LN1@Sentry_bas@2:

; 78   : 			}

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 40					; 00000028H
	ret	0
??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z ENDP ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ
_TEXT	SEGMENT
this$ = 8
??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ PROC ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool, COMDAT

; 115  : 			{	// test if stream state okay

	mov	QWORD PTR [rsp+8], rcx

; 116  : 			return (_Ok);

	mov	rax, QWORD PTR this$[rsp]
	mov	al, BYTE PTR [rax+8]

; 117  : 			}

	ret	0
??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ ENDP ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool
_TEXT	ENDS
EXTRN	__CxxFrameHandler3:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DD imagerel $LN5
	DD	imagerel $LN5+61
	DD	imagerel $unwind$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ@4HA+24
	DD	imagerel $unwind$?dtor$0@?0???1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DD imagerel ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
	DD	0ffffffffH
	DD	imagerel ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ+18
	DD	00H
	DD	imagerel ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ+46
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DD 011211H
	DD	06209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
	DD	020H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ@4HA
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
$T66632 = 32
this$ = 64
??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ PROC ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry, COMDAT

; 102  : 			{	// destroy the object

$LN5:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
	mov	QWORD PTR $T66632[rsp], -2

; 103  : 
; 104  :  #if _HAS_EXCEPTIONS
; 105  : 			if (!_XSTD uncaught_exception())

	call	QWORD PTR __imp_?uncaught_exception@std@@YA_NXZ
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN1@sentry

; 106  : 				this->_Myostr._Osfx();

	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx]
	call	QWORD PTR __imp_?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ
	npad	1
$LN1@sentry:

; 107  : 			}

	mov	rcx, QWORD PTR this$[rsp]
	call	??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
	add	rsp, 56					; 00000038H
	ret	0
??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ENDP ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T66632 = 32
this$ = 64
?dtor$0@?0???1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ@4HA PROC ; `std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ@4HA ENDP ; `std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry'::`1'::dtor$0
text$x	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z DD imagerel $LN5
	DD	imagerel $LN5+187
	DD	imagerel $unwind$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA DD imagerel ?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA
	DD	imagerel ?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA+24
	DD	imagerel $unwind$?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z DD imagerel ??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
	DD	0ffffffffH
	DD	imagerel ??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z+39
	DD	00H
	DD	imagerel ??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z+177
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z DD 011711H
	DD	0620eH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
	DD	020H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT ??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
_TEXT	SEGMENT
$T66656 = 32
this$ = 64
_Ostr$ = 72
??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z PROC ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry, COMDAT

; 95   : 			{	// construct locking and testing stream

$LN5:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
	mov	QWORD PTR $T66656[rsp], -2
	mov	rdx, QWORD PTR _Ostr$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base
	npad	1

; 96   : 			if (_Ostr.good() && _Ostr.tie() != 0)

	mov	rax, QWORD PTR _Ostr$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rsp]
	add	rcx, rax
	call	QWORD PTR __imp_?good@ios_base@std@@QEBA_NXZ
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN1@sentry@2
	mov	rax, QWORD PTR _Ostr$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rsp]
	add	rcx, rax
	call	QWORD PTR __imp_?tie@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_ostream@DU?$char_traits@D@std@@@2@XZ
	test	rax, rax
	je	SHORT $LN1@sentry@2

; 97   : 				_Ostr.tie()->flush();

	mov	rax, QWORD PTR _Ostr$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rsp]
	add	rcx, rax
	call	QWORD PTR __imp_?tie@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_ostream@DU?$char_traits@D@std@@@2@XZ
	mov	rcx, rax
	call	QWORD PTR __imp_?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ
$LN1@sentry@2:

; 98   : 			_Ok = _Ostr.good();	// store test only after flushing tie

	mov	rax, QWORD PTR _Ostr$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rsp]
	add	rcx, rax
	call	QWORD PTR __imp_?good@ios_base@std@@QEBA_NXZ
	movzx	r11d, al
	mov	rax, QWORD PTR this$[rsp]
	mov	BYTE PTR [rax+8], r11b

; 99   : 			}

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 56					; 00000038H
	ret	0
??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z ENDP ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T66656 = 32
this$ = 64
_Ostr$ = 72
?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA PROC ; `std::basic_ostream<char,std::char_traits<char> >::sentry::sentry'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA ENDP ; `std::basic_ostream<char,std::char_traits<char> >::sentry::sentry'::`1'::dtor$0
text$x	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?normalizeEOL@StyledWriter@Json@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV34@@Z ; Json::StyledWriter::normalizeEOL
EXTRN	__GSHandlerCheck_EH:PROC
EXTRN	__security_cookie:QWORD
;	COMDAT pdata
; File d:\adaptivecloth\jsoncpp\src\lib_json\json_writer.cpp
pdata	SEGMENT
$pdata$?normalizeEOL@StyledWriter@Json@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV34@@Z DD imagerel $LN11
	DD	imagerel $LN11+327
	DD	imagerel $unwind$?normalizeEOL@StyledWriter@Json@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV34@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??normalizeEOL@StyledWriter@Json@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV34@@Z@4HA DD imagerel ?dtor$0@?0??normalizeEOL@StyledWriter@Json@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV34@@Z@4HA
	DD	imagerel ?dtor$0@?0??normalizeEOL@StyledWriter@Json@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV34@@Z@4HA+25
	DD	imagerel $unwind$?dtor$0@?0??normalizeEOL@StyledWriter@Json@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV34@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0??normalizeEOL@StyledWriter@Json@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV34@@Z@4HA DD imagerel ?dtor$1@?0??normalizeEOL@StyledWriter@Json@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV34@@Z@4HA
	DD	imagerel ?dtor$1@?0??normalizeEOL@StyledWriter@Json@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV34@@Z@4HA+42
	DD	imagerel $unwind$?dtor$1@?0??normalizeEOL@StyledWriter@Json@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV34@@Z@4HA
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?normalizeEOL@StyledWriter@Json@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV34@@Z DD imagerel ?normalizeEOL@StyledWriter@Json@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV34@@Z
	DD	0ffffffffH
	DD	imagerel ?normalizeEOL@StyledWriter@Json@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV34@@Z+61
	DD	01H
	DD	imagerel ?normalizeEOL@StyledWriter@Json@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV34@@Z+286
	DD	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0??normalizeEOL@StyledWriter@Json@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV34@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??normalizeEOL@StyledWriter@Json@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV34@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?normalizeEOL@StyledWriter@Json@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV34@@Z DD 022919H
	DD	0110111H
	DD	imagerel __GSHandlerCheck_EH
	DD	imagerel $cppxdata$?normalizeEOL@StyledWriter@Json@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV34@@Z
	DD	07aH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?normalizeEOL@StyledWriter@Json@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV34@@Z DD 019930522H
	DD	02H
	DD	imagerel $stateUnwindMap$?normalizeEOL@StyledWriter@Json@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV34@@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$?normalizeEOL@StyledWriter@Json@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV34@@Z
	DD	070H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?normalizeEOL@StyledWriter@Json@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV34@@Z DD 0ffffffffH
	DD	imagerel ?dtor$1@?0??normalizeEOL@StyledWriter@Json@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV34@@Z@4HA
	DD	00H
	DD	imagerel ?dtor$0@?0??normalizeEOL@StyledWriter@Json@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV34@@Z@4HA
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT ?normalizeEOL@StyledWriter@Json@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV34@@Z
_TEXT	SEGMENT
current$ = 32
begin$ = 40
end$ = 48
normalized$ = 64
c$50815 = 104
$T66681 = 108
$T66684 = 112
__$ArrayPad$ = 120
__$ReturnUdt$ = 144
text$ = 152
?normalizeEOL@StyledWriter@Json@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV34@@Z PROC ; Json::StyledWriter::normalizeEOL, COMDAT

; 519  : {

$LN11:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 136				; 00000088H
	mov	QWORD PTR $T66684[rsp], -2
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
	mov	DWORD PTR $T66681[rsp], 0

; 520  :    std::string normalized;

	lea	rcx, QWORD PTR normalized$[rsp]
	call	QWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	npad	1

; 521  :    normalized.reserve( text.length() );

	mov	rcx, QWORD PTR text$[rsp]
	call	QWORD PTR __imp_?length@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ
	mov	rdx, rax
	lea	rcx, QWORD PTR normalized$[rsp]
	call	QWORD PTR __imp_?reserve@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K@Z

; 522  :    const char *begin = text.c_str();

	mov	rcx, QWORD PTR text$[rsp]
	call	QWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ
	mov	QWORD PTR begin$[rsp], rax

; 523  :    const char *end = begin + text.length();

	mov	rcx, QWORD PTR text$[rsp]
	call	QWORD PTR __imp_?length@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ
	mov	r11, rax
	mov	rax, QWORD PTR begin$[rsp]
	add	rax, r11
	mov	QWORD PTR end$[rsp], rax

; 524  :    const char *current = begin;

	mov	rax, QWORD PTR begin$[rsp]
	mov	QWORD PTR current$[rsp], rax
$LN5@normalizeE:

; 525  :    while ( current != end )

	mov	rax, QWORD PTR end$[rsp]
	cmp	QWORD PTR current$[rsp], rax
	je	SHORT $LN4@normalizeE

; 526  :    {
; 527  :       char c = *current++;

	mov	rax, QWORD PTR current$[rsp]
	movzx	eax, BYTE PTR [rax]
	mov	BYTE PTR c$50815[rsp], al
	mov	rax, QWORD PTR current$[rsp]
	add	rax, 1
	mov	QWORD PTR current$[rsp], rax

; 528  :       if ( c == '\r' ) // mac or dos EOL

	movsx	eax, BYTE PTR c$50815[rsp]
	cmp	eax, 13
	jne	SHORT $LN3@normalizeE

; 529  :       {
; 530  :          if ( *current == '\n' ) // convert dos EOL

	mov	rax, QWORD PTR current$[rsp]
	movsx	eax, BYTE PTR [rax]
	cmp	eax, 10
	jne	SHORT $LN2@normalizeE

; 531  :             ++current;

	mov	rax, QWORD PTR current$[rsp]
	add	rax, 1
	mov	QWORD PTR current$[rsp], rax
$LN2@normalizeE:

; 532  :          normalized += '\n';

	mov	dl, 10
	lea	rcx, QWORD PTR normalized$[rsp]
	call	QWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@D@Z

; 533  :       }
; 534  :       else // handle unix EOL & other char

	jmp	SHORT $LN1@normalizeE
$LN3@normalizeE:

; 535  :          normalized += c;

	movzx	edx, BYTE PTR c$50815[rsp]
	lea	rcx, QWORD PTR normalized$[rsp]
	call	QWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@D@Z
$LN1@normalizeE:

; 536  :    }

	jmp	SHORT $LN5@normalizeE
$LN4@normalizeE:

; 537  :    return normalized;

	lea	rdx, QWORD PTR normalized$[rsp]
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	QWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z
	mov	eax, DWORD PTR $T66681[rsp]
	or	eax, 1
	mov	DWORD PTR $T66681[rsp], eax
	lea	rcx, QWORD PTR normalized$[rsp]
	call	QWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 538  : }

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 136				; 00000088H
	ret	0
	int	3
?normalizeEOL@StyledWriter@Json@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV34@@Z ENDP ; Json::StyledWriter::normalizeEOL
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
current$ = 32
begin$ = 40
end$ = 48
normalized$ = 64
c$50815 = 104
$T66681 = 108
$T66684 = 112
__$ArrayPad$ = 120
__$ReturnUdt$ = 144
text$ = 152
?dtor$0@?0??normalizeEOL@StyledWriter@Json@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV34@@Z@4HA PROC ; `Json::StyledWriter::normalizeEOL'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	lea	rcx, QWORD PTR normalized$[rbp]
	call	QWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0??normalizeEOL@StyledWriter@Json@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV34@@Z@4HA ENDP ; `Json::StyledWriter::normalizeEOL'::`1'::dtor$0
; Function compile flags: /Odtp
current$ = 32
begin$ = 40
end$ = 48
normalized$ = 64
c$50815 = 104
$T66681 = 108
$T66684 = 112
__$ArrayPad$ = 120
__$ReturnUdt$ = 144
text$ = 152
?dtor$1@?0??normalizeEOL@StyledWriter@Json@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV34@@Z@4HA PROC ; `Json::StyledWriter::normalizeEOL'::`1'::dtor$1
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	eax, DWORD PTR $T66681[rbp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN10@dtor$1
	and	DWORD PTR $T66681[rbp], -2
	mov	rcx, QWORD PTR __$ReturnUdt$[rbp]
	call	QWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
$LN10@dtor$1:
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$1@?0??normalizeEOL@StyledWriter@Json@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV34@@Z@4HA ENDP ; `Json::StyledWriter::normalizeEOL'::`1'::dtor$1
text$x	ENDS
PUBLIC	?unindent@StyledWriter@Json@@AEAAXXZ		; Json::StyledWriter::unindent
;	COMDAT pdata
pdata	SEGMENT
$pdata$?unindent@StyledWriter@Json@@AEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+62
	DD	imagerel $unwind$?unindent@StyledWriter@Json@@AEAAXXZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?unindent@StyledWriter@Json@@AEAAXXZ DD 010901H
	DD	04209H
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT ?unindent@StyledWriter@Json@@AEAAXXZ
_TEXT	SEGMENT
this$ = 48
?unindent@StyledWriter@Json@@AEAAXXZ PROC		; Json::StyledWriter::unindent, COMDAT

; 477  : {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 478  :    assert( int(indentString_.size()) >= indentSize_ );
; 479  :    indentString_.resize( indentString_.size() - indentSize_ );

	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 96					; 00000060H
	call	QWORD PTR __imp_?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ
	mov	rdx, rax
	mov	rax, QWORD PTR this$[rsp]
	movsxd	rax, DWORD PTR [rax+140]
	sub	rdx, rax
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 96					; 00000060H
	call	QWORD PTR __imp_?resize@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K@Z

; 480  : }

	add	rsp, 40					; 00000028H
	ret	0
?unindent@StyledWriter@Json@@AEAAXXZ ENDP		; Json::StyledWriter::unindent
_TEXT	ENDS
PUBLIC	?indent@StyledWriter@Json@@AEAAXXZ		; Json::StyledWriter::indent
;	COMDAT pdata
pdata	SEGMENT
$pdata$?indent@StyledWriter@Json@@AEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+96
	DD	imagerel $unwind$?indent@StyledWriter@Json@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??indent@StyledWriter@Json@@AEAAXXZ@4HA DD imagerel ?dtor$0@?0??indent@StyledWriter@Json@@AEAAXXZ@4HA
	DD	imagerel ?dtor$0@?0??indent@StyledWriter@Json@@AEAAXXZ@4HA+25
	DD	imagerel $unwind$?dtor$0@?0??indent@StyledWriter@Json@@AEAAXXZ@4HA
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?indent@StyledWriter@Json@@AEAAXXZ DD imagerel ?indent@StyledWriter@Json@@AEAAXXZ
	DD	0ffffffffH
	DD	imagerel ?indent@StyledWriter@Json@@AEAAXXZ+59
	DD	00H
	DD	imagerel ?indent@StyledWriter@Json@@AEAAXXZ+80
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??indent@StyledWriter@Json@@AEAAXXZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?indent@StyledWriter@Json@@AEAAXXZ DD 011211H
	DD	0c209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?indent@StyledWriter@Json@@AEAAXXZ
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?indent@StyledWriter@Json@@AEAAXXZ DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$?indent@StyledWriter@Json@@AEAAXXZ
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$?indent@StyledWriter@Json@@AEAAXXZ
	DD	048H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?indent@StyledWriter@Json@@AEAAXXZ DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??indent@StyledWriter@Json@@AEAAXXZ@4HA
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT ?indent@StyledWriter@Json@@AEAAXXZ
_TEXT	SEGMENT
$T66715 = 32
$T66721 = 72
tv77 = 80
tv76 = 88
this$ = 112
?indent@StyledWriter@Json@@AEAAXXZ PROC			; Json::StyledWriter::indent, COMDAT

; 470  : {

$LN4:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 104				; 00000068H
	mov	QWORD PTR $T66721[rsp], -2

; 471  :    indentString_ += std::string( indentSize_, ' ' );

	mov	rax, QWORD PTR this$[rsp]
	movsxd	rdx, DWORD PTR [rax+140]
	mov	r8b, 32					; 00000020H
	lea	rcx, QWORD PTR $T66715[rsp]
	call	QWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@_KD@Z
	mov	QWORD PTR tv77[rsp], rax
	mov	rax, QWORD PTR tv77[rsp]
	mov	QWORD PTR tv76[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 96					; 00000060H
	mov	rdx, QWORD PTR tv76[rsp]
	call	QWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z
	npad	1
	lea	rcx, QWORD PTR $T66715[rsp]
	call	QWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ

; 472  : }

	add	rsp, 104				; 00000068H
	ret	0
?indent@StyledWriter@Json@@AEAAXXZ ENDP			; Json::StyledWriter::indent
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T66715 = 32
$T66721 = 72
tv77 = 80
tv76 = 88
this$ = 112
?dtor$0@?0??indent@StyledWriter@Json@@AEAAXXZ@4HA PROC	; `Json::StyledWriter::indent'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	lea	rcx, QWORD PTR $T66715[rbp]
	call	QWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0??indent@StyledWriter@Json@@AEAAXXZ@4HA ENDP	; `Json::StyledWriter::indent'::`1'::dtor$0
text$x	ENDS
PUBLIC	?writeIndent@StyledWriter@Json@@AEAAXXZ		; Json::StyledWriter::writeIndent
;	COMDAT pdata
pdata	SEGMENT
$pdata$?writeIndent@StyledWriter@Json@@AEAAXXZ DD imagerel $LN6
	DD	imagerel $LN6+143
	DD	imagerel $unwind$?writeIndent@StyledWriter@Json@@AEAAXXZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?writeIndent@StyledWriter@Json@@AEAAXXZ DD 010901H
	DD	06209H
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT ?writeIndent@StyledWriter@Json@@AEAAXXZ
_TEXT	SEGMENT
last$50676 = 32
this$ = 64
?writeIndent@StyledWriter@Json@@AEAAXXZ PROC		; Json::StyledWriter::writeIndent, COMDAT

; 447  : {

$LN6:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H

; 448  :    if ( !document_.empty() )

	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 56					; 00000038H
	call	QWORD PTR __imp_?empty@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_NXZ
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN3@writeInden

; 449  :    {
; 450  :       char last = document_[document_.length()-1];

	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 56					; 00000038H
	call	QWORD PTR __imp_?length@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ
	mov	rdx, rax
	sub	rdx, 1
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 56					; 00000038H
	call	QWORD PTR __imp_??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAD_K@Z
	movzx	eax, BYTE PTR [rax]
	mov	BYTE PTR last$50676[rsp], al

; 451  :       if ( last == ' ' )     // already indented

	movsx	eax, BYTE PTR last$50676[rsp]
	cmp	eax, 32					; 00000020H
	jne	SHORT $LN2@writeInden

; 452  :          return;

	jmp	SHORT $LN4@writeInden
$LN2@writeInden:

; 453  :       if ( last != '\n' )    // Comments may add new-line

	movsx	eax, BYTE PTR last$50676[rsp]
	cmp	eax, 10
	je	SHORT $LN1@writeInden

; 454  :          document_ += '\n';

	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 56					; 00000038H
	mov	dl, 10
	call	QWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@D@Z
$LN1@writeInden:
$LN3@writeInden:

; 455  :    }
; 456  :    document_ += indentString_;

	mov	rdx, QWORD PTR this$[rsp]
	add	rdx, 96					; 00000060H
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 56					; 00000038H
	call	QWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z
$LN4@writeInden:

; 457  : }

	add	rsp, 56					; 00000038H
	ret	0
?writeIndent@StyledWriter@Json@@AEAAXXZ ENDP		; Json::StyledWriter::writeIndent
_TEXT	ENDS
PUBLIC	??1Writer@Json@@UEAA@XZ				; Json::Writer::~Writer
; Function compile flags: /Odtp
;	COMDAT ??1Writer@Json@@UEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1Writer@Json@@UEAA@XZ PROC				; Json::Writer::~Writer, COMDAT

; 177  : {

	mov	QWORD PTR [rsp+8], rcx
	mov	rcx, QWORD PTR this$[rsp]
	lea	rax, OFFSET FLAT:??_7Writer@Json@@6B@
	mov	QWORD PTR [rcx], rax

; 178  : }

	ret	0
??1Writer@Json@@UEAA@XZ ENDP				; Json::Writer::~Writer
_TEXT	ENDS
PUBLIC	?valueToString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z ; Json::valueToString
;	COMDAT pdata
pdata	SEGMENT
$pdata$?valueToString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z DD imagerel $LN7
	DD	imagerel $LN7+93
	DD	imagerel $unwind$?valueToString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?valueToString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z DD 010d01H
	DD	0620dH
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT ?valueToString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z
_TEXT	SEGMENT
$T66754 = 32
tv68 = 40
__$ReturnUdt$ = 64
value$ = 72
?valueToString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z PROC ; Json::valueToString, COMDAT

; 107  : {

$LN7:
	mov	BYTE PTR [rsp+16], dl
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
	mov	DWORD PTR $T66754[rsp], 0

; 108  :    return value ? "true" : "false";

	movzx	eax, BYTE PTR value$[rsp]
	test	eax, eax
	je	SHORT $LN3@valueToStr
	lea	rax, OFFSET FLAT:??_C@_04LOAJBDKD@true?$AA@
	mov	QWORD PTR tv68[rsp], rax
	jmp	SHORT $LN4@valueToStr
$LN3@valueToStr:
	lea	rax, OFFSET FLAT:??_C@_05LAPONLG@false?$AA@
	mov	QWORD PTR tv68[rsp], rax
$LN4@valueToStr:
	mov	rdx, QWORD PTR tv68[rsp]
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	QWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@PEBD@Z
	mov	eax, DWORD PTR $T66754[rsp]
	or	eax, 1
	mov	DWORD PTR $T66754[rsp], eax
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 109  : }

	add	rsp, 56					; 00000038H
	ret	0
?valueToString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z ENDP ; Json::valueToString
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?valueToString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@N@Z ; Json::valueToString
EXTRN	__GSHandlerCheck:PROC
EXTRN	_fltused:DWORD
;	COMDAT pdata
pdata	SEGMENT
$pdata$?valueToString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@N@Z DD imagerel $LN15
	DD	imagerel $LN15+433
	DD	imagerel $unwind$?valueToString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@N@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?valueToString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@N@Z DD 021f19H
	DD	0700cd210H
	DD	imagerel __GSHandlerCheck
	DD	060H
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT ?valueToString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@N@Z
_TEXT	SEGMENT
last_nonzero$ = 32
ch$ = 40
buffer$ = 56
$T66768 = 88
tv84 = 92
__$ArrayPad$ = 96
__$ReturnUdt$ = 128
value$ = 136
?valueToString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@N@Z PROC ; Json::valueToString, COMDAT

; 67   : {

$LN15:
	movsdx	QWORD PTR [rsp+16], xmm1
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 112				; 00000070H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
	mov	DWORD PTR $T66768[rsp], 0

; 68   :    char buffer[32];
; 69   : #if defined(_MSC_VER) && defined(__STDC_SECURE_LIB__) // Use secure version with visual studio 2005 to avoid warning. 
; 70   :    sprintf_s(buffer, sizeof(buffer), "%#.16g", value); 

	movsdx	xmm3, QWORD PTR value$[rsp]
	movd	r9, xmm3
	lea	r8, OFFSET FLAT:??_C@_06ECBCCLMB@?$CF?$CD?416g?$AA@
	mov	edx, 32					; 00000020H
	lea	rcx, QWORD PTR buffer$[rsp]
	call	QWORD PTR __imp_sprintf_s

; 71   : #else	
; 72   :    sprintf(buffer, "%#.16g", value); 
; 73   : #endif
; 74   :    char* ch = buffer + strlen(buffer) - 1;

	xor	eax, eax
	mov	rcx, -1
	lea	rdi, QWORD PTR buffer$[rsp]
	repne scasb
	not	rcx
	sub	rcx, 1
	lea	rax, QWORD PTR buffer$[rsp+rcx-1]
	mov	QWORD PTR ch$[rsp], rax

; 75   :    if (*ch != '0') return buffer; // nothing to truncate, so save time

	mov	rax, QWORD PTR ch$[rsp]
	movsx	eax, BYTE PTR [rax]
	cmp	eax, 48					; 00000030H
	je	SHORT $LN9@valueToStr@2
	lea	rdx, QWORD PTR buffer$[rsp]
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	QWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@PEBD@Z
	mov	eax, DWORD PTR $T66768[rsp]
	or	eax, 1
	mov	DWORD PTR $T66768[rsp], eax
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	jmp	$LN11@valueToStr@2
$LN9@valueToStr@2:

; 76   :    while(ch > buffer && *ch == '0'){

	lea	rax, QWORD PTR buffer$[rsp]
	cmp	QWORD PTR ch$[rsp], rax
	jbe	SHORT $LN8@valueToStr@2
	mov	rax, QWORD PTR ch$[rsp]
	movsx	eax, BYTE PTR [rax]
	cmp	eax, 48					; 00000030H
	jne	SHORT $LN8@valueToStr@2

; 77   :      --ch;

	mov	rax, QWORD PTR ch$[rsp]
	sub	rax, 1
	mov	QWORD PTR ch$[rsp], rax

; 78   :    }

	jmp	SHORT $LN9@valueToStr@2
$LN8@valueToStr@2:

; 79   :    char* last_nonzero = ch;

	mov	rax, QWORD PTR ch$[rsp]
	mov	QWORD PTR last_nonzero$[rsp], rax
$LN7@valueToStr@2:

; 80   :    while(ch >= buffer){

	lea	rax, QWORD PTR buffer$[rsp]
	cmp	QWORD PTR ch$[rsp], rax
	jb	$LN6@valueToStr@2

; 81   :      switch(*ch){

	mov	rax, QWORD PTR ch$[rsp]
	mov	al, BYTE PTR [rax]
	mov	BYTE PTR tv84[rsp], al
	cmp	BYTE PTR tv84[rsp], 46			; 0000002eH
	je	SHORT $LN2@valueToStr@2
	cmp	BYTE PTR tv84[rsp], 47			; 0000002fH
	jle	SHORT $LN1@valueToStr@2
	cmp	BYTE PTR tv84[rsp], 57			; 00000039H
	jle	SHORT $LN3@valueToStr@2
	jmp	SHORT $LN1@valueToStr@2
$LN3@valueToStr@2:

; 82   :      case '0':
; 83   :      case '1':
; 84   :      case '2':
; 85   :      case '3':
; 86   :      case '4':
; 87   :      case '5':
; 88   :      case '6':
; 89   :      case '7':
; 90   :      case '8':
; 91   :      case '9':
; 92   :        --ch;

	mov	rax, QWORD PTR ch$[rsp]
	sub	rax, 1
	mov	QWORD PTR ch$[rsp], rax

; 93   :        continue;

	jmp	SHORT $LN7@valueToStr@2
$LN2@valueToStr@2:

; 94   :      case '.':
; 95   :        // Truncate zeroes to save bytes in output, but keep one.
; 96   :        *(last_nonzero+2) = '\0';

	mov	rax, QWORD PTR last_nonzero$[rsp]
	mov	BYTE PTR [rax+2], 0

; 97   :        return buffer;

	lea	rdx, QWORD PTR buffer$[rsp]
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	QWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@PEBD@Z
	mov	eax, DWORD PTR $T66768[rsp]
	or	eax, 1
	mov	DWORD PTR $T66768[rsp], eax
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	jmp	SHORT $LN11@valueToStr@2
$LN1@valueToStr@2:

; 98   :      default:
; 99   :        return buffer;

	lea	rdx, QWORD PTR buffer$[rsp]
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	QWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@PEBD@Z
	mov	eax, DWORD PTR $T66768[rsp]
	or	eax, 1
	mov	DWORD PTR $T66768[rsp], eax
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	jmp	SHORT $LN11@valueToStr@2

; 100  :      }
; 101  :    }

	jmp	$LN7@valueToStr@2
$LN6@valueToStr@2:

; 102  :    return buffer;

	lea	rdx, QWORD PTR buffer$[rsp]
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	QWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@PEBD@Z
	mov	eax, DWORD PTR $T66768[rsp]
	or	eax, 1
	mov	DWORD PTR $T66768[rsp], eax
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
$LN11@valueToStr@2:

; 103  : }

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 112				; 00000070H
	pop	rdi
	ret	0
?valueToString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@N@Z ENDP ; Json::valueToString
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT ?uintToString@Json@@YAXIAEAPEAD@Z
_TEXT	SEGMENT
value$ = 8
current$ = 16
?uintToString@Json@@YAXIAEAPEAD@Z PROC			; Json::uintToString, COMDAT

; 32   : {

	mov	QWORD PTR [rsp+16], rdx
	mov	DWORD PTR [rsp+8], ecx

; 33   :    *--current = 0;

	mov	rcx, QWORD PTR current$[rsp]
	mov	rcx, QWORD PTR [rcx]
	sub	rcx, 1
	mov	rax, QWORD PTR current$[rsp]
	mov	QWORD PTR [rax], rcx
	mov	rax, QWORD PTR current$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	BYTE PTR [rax], 0
$LN3@uintToStri:

; 34   :    do
; 35   :    {
; 36   :       *--current = (value % 10) + '0';

	mov	rcx, QWORD PTR current$[rsp]
	mov	rcx, QWORD PTR [rcx]
	sub	rcx, 1
	mov	rax, QWORD PTR current$[rsp]
	mov	QWORD PTR [rax], rcx
	mov	r8, QWORD PTR current$[rsp]
	mov	r8, QWORD PTR [r8]
	xor	edx, edx
	mov	eax, DWORD PTR value$[rsp]
	mov	ecx, 10
	div	ecx
	mov	eax, edx
	add	eax, 48					; 00000030H
	mov	BYTE PTR [r8], al

; 37   :       value /= 10;

	xor	edx, edx
	mov	eax, DWORD PTR value$[rsp]
	mov	ecx, 10
	div	ecx
	mov	DWORD PTR value$[rsp], eax

; 38   :    }
; 39   :    while ( value != 0 );

	cmp	DWORD PTR value$[rsp], 0
	jne	SHORT $LN3@uintToStri

; 40   : }

	fatret	0
?uintToString@Json@@YAXIAEAPEAD@Z ENDP			; Json::uintToString
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?isControlCharacter@Json@@YA_ND@Z DD imagerel ?isControlCharacter@Json@@YA_ND@Z
	DD	imagerel ?isControlCharacter@Json@@YA_ND@Z+51
	DD	imagerel $unwind$?isControlCharacter@Json@@YA_ND@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?isControlCharacter@Json@@YA_ND@Z DD 010801H
	DD	02208H
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT ?isControlCharacter@Json@@YA_ND@Z
_TEXT	SEGMENT
tv68 = 0
ch$ = 32
?isControlCharacter@Json@@YA_ND@Z PROC			; Json::isControlCharacter, COMDAT

; 17   : {

	mov	BYTE PTR [rsp+8], cl
	sub	rsp, 24

; 18   :    return ch > 0 && ch <= 0x1F;

	movsx	eax, BYTE PTR ch$[rsp]
	test	eax, eax
	jle	SHORT $LN3@isControlC
	movsx	eax, BYTE PTR ch$[rsp]
	cmp	eax, 31
	jg	SHORT $LN3@isControlC
	mov	DWORD PTR tv68[rsp], 1
	jmp	SHORT $LN4@isControlC
$LN3@isControlC:
	mov	DWORD PTR tv68[rsp], 0
$LN4@isControlC:
	mov	al, BYTE PTR tv68[rsp]

; 19   : }

	add	rsp, 24
	ret	0
?isControlCharacter@Json@@YA_ND@Z ENDP			; Json::isControlCharacter
_TEXT	ENDS
;	COMDAT pdata
; File d:\adaptivecloth\jsoncpp\include\json\writer.h
pdata	SEGMENT
$pdata$??1FastWriter@Json@@UEAA@XZ DD imagerel $LN5
	DD	imagerel $LN5+64
	DD	imagerel $unwind$??1FastWriter@Json@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1FastWriter@Json@@UEAA@XZ@4HA DD imagerel ?dtor$0@?0???1FastWriter@Json@@UEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1FastWriter@Json@@UEAA@XZ@4HA+24
	DD	imagerel $unwind$?dtor$0@?0???1FastWriter@Json@@UEAA@XZ@4HA
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1FastWriter@Json@@UEAA@XZ DD imagerel ??1FastWriter@Json@@UEAA@XZ
	DD	0ffffffffH
	DD	imagerel ??1FastWriter@Json@@UEAA@XZ+33
	DD	00H
	DD	imagerel ??1FastWriter@Json@@UEAA@XZ+49
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1FastWriter@Json@@UEAA@XZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1FastWriter@Json@@UEAA@XZ DD 011211H
	DD	06209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??1FastWriter@Json@@UEAA@XZ
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??1FastWriter@Json@@UEAA@XZ DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??1FastWriter@Json@@UEAA@XZ
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??1FastWriter@Json@@UEAA@XZ
	DD	020H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1FastWriter@Json@@UEAA@XZ DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???1FastWriter@Json@@UEAA@XZ@4HA
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT ??1FastWriter@Json@@UEAA@XZ
_TEXT	SEGMENT
$T66796 = 32
this$ = 64
??1FastWriter@Json@@UEAA@XZ PROC			; Json::FastWriter::~FastWriter, COMDAT

; 33   :       virtual ~FastWriter(){}

$LN5:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
	mov	QWORD PTR $T66796[rsp], -2
	mov	rcx, QWORD PTR this$[rsp]
	lea	rax, OFFSET FLAT:??_7FastWriter@Json@@6B@
	mov	QWORD PTR [rcx], rax
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 8
	call	QWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	npad	1
	mov	rcx, QWORD PTR this$[rsp]
	call	??1Writer@Json@@UEAA@XZ			; Json::Writer::~Writer
	add	rsp, 56					; 00000038H
	ret	0
??1FastWriter@Json@@UEAA@XZ ENDP			; Json::FastWriter::~FastWriter
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T66796 = 32
this$ = 64
?dtor$0@?0???1FastWriter@Json@@UEAA@XZ@4HA PROC		; `Json::FastWriter::~FastWriter'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1Writer@Json@@UEAA@XZ			; Json::Writer::~Writer
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???1FastWriter@Json@@UEAA@XZ@4HA ENDP		; `Json::FastWriter::~FastWriter'::`1'::dtor$0
text$x	ENDS
;	COMDAT pdata
; File d:\program files (x86)\microsoft visual studio 9.0\vc\include\ios
pdata	SEGMENT
$pdata$?uppercase@std@@YAAEAVios_base@1@AEAV21@@Z DD imagerel $LN3
	DD	imagerel $LN3+35
	DD	imagerel $unwind$?uppercase@std@@YAAEAVios_base@1@AEAV21@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?uppercase@std@@YAAEAVios_base@1@AEAV21@@Z DD 010901H
	DD	04209H
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT ?uppercase@std@@YAAEAVios_base@1@AEAV21@@Z
_TEXT	SEGMENT
_Iosbase$ = 48
?uppercase@std@@YAAEAVios_base@1@AEAV21@@Z PROC		; std::uppercase, COMDAT

; 307  : 	{	// set uppercase

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 308  : 	_Iosbase.setf(ios_base::uppercase);

	mov	edx, 4
	mov	rcx, QWORD PTR _Iosbase$[rsp]
	call	QWORD PTR __imp_?setf@ios_base@std@@QEAAHH@Z

; 309  : 	return (_Iosbase);

	mov	rax, QWORD PTR _Iosbase$[rsp]

; 310  : 	}

	add	rsp, 40					; 00000028H
	ret	0
?uppercase@std@@YAAEAVios_base@1@AEAV21@@Z ENDP		; std::uppercase
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?hex@std@@YAAEAVios_base@1@AEAV21@@Z DD imagerel $LN3
	DD	imagerel $LN3+41
	DD	imagerel $unwind$?hex@std@@YAAEAVios_base@1@AEAV21@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?hex@std@@YAAEAVios_base@1@AEAV21@@Z DD 010901H
	DD	04209H
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT ?hex@std@@YAAEAVios_base@1@AEAV21@@Z
_TEXT	SEGMENT
_Iosbase$ = 48
?hex@std@@YAAEAVios_base@1@AEAV21@@Z PROC		; std::hex, COMDAT

; 190  : 	{	// set basefield to hex

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 191  : 	_Iosbase.setf(ios_base::hex, ios_base::basefield);

	mov	r8d, 3584				; 00000e00H
	mov	edx, 2048				; 00000800H
	mov	rcx, QWORD PTR _Iosbase$[rsp]
	call	QWORD PTR __imp_?setf@ios_base@std@@QEAAHHH@Z

; 192  : 	return (_Iosbase);

	mov	rax, QWORD PTR _Iosbase$[rsp]

; 193  : 	}

	add	rsp, 40					; 00000028H
	ret	0
?hex@std@@YAAEAVios_base@1@AEAV21@@Z ENDP		; std::hex
;	COMDAT pdata
; File d:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
pdata	SEGMENT
$pdata$??$_Copy_opt@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAV12@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PEAV10@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+159
	DD	imagerel $unwind$??$_Copy_opt@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAV12@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PEAV10@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Copy_opt@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAV12@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PEAV10@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z DD 021901H
	DD	070157219H
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT ??$_Copy_opt@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAV12@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PEAV10@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z
_TEXT	SEGMENT
_Result$ = 48
$T67526 = 56
$T67527 = 57
$T67528 = 58
_First$ = 80
_Last$ = 88
_Dest$ = 96
__formal$ = 104
__formal$ = 112
__formal$ = 120
??$_Copy_opt@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAV12@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PEAV10@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z PROC ; std::_Copy_opt<std::basic_string<char,std::char_traits<char>,std::allocator<char> > * __ptr64,std::basic_string<char,std::char_traits<char>,std::allocator<char> > * __ptr64>, COMDAT

; 2481 : 	{	// copy [_First, _Last) to [_Dest, ...), random_access iterators

$LN3:
	mov	BYTE PTR [rsp+32], r9b
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 64					; 00000040H

; 2482 : 	// if _OutIt is range checked, this will make sure there is enough space for the copy
; 2483 : 	_OutIt _Result = _Dest + (_Last - _First);

	mov	rcx, QWORD PTR _First$[rsp]
	mov	rax, QWORD PTR _Last$[rsp]
	sub	rax, rcx
	cdq
	mov	ecx, 40					; 00000028H
	idiv	rcx
	mov	rcx, rax
	imul	rcx, 40					; 00000028H
	mov	rax, QWORD PTR _Dest$[rsp]
	add	rax, rcx
	mov	QWORD PTR _Result$[rsp], rax

; 2484 : 	_Copy_opt(_First, _Last, _CHECKED_BASE(_Dest), 
; 2485 : 		forward_iterator_tag(), _Nonscalar_ptr_iterator_tag(), _Range_checked_iterator_tag());

	lea	rdi, QWORD PTR $T67526[rsp]
	xor	eax, eax
	mov	ecx, 1
	rep stosb
	lea	rdi, QWORD PTR $T67527[rsp]
	xor	eax, eax
	mov	ecx, 1
	rep stosb
	lea	rcx, QWORD PTR _Dest$[rsp]
	call	??$_Checked_base@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAPEAV10@@Z ; std::_Checked_base<std::basic_string<char,std::char_traits<char>,std::allocator<char> > * __ptr64>
	mov	r8, rax
	movzx	eax, BYTE PTR $T67526[rsp]
	mov	BYTE PTR [rsp+40], al
	movzx	eax, BYTE PTR $T67527[rsp]
	mov	BYTE PTR [rsp+32], al
	movzx	r9d, BYTE PTR $T67528[rsp]
	mov	rdx, QWORD PTR _Last$[rsp]
	mov	rcx, QWORD PTR _First$[rsp]
	call	??$_Copy_opt@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAV12@Uforward_iterator_tag@2@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PEAV10@00Uforward_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Copy_opt<std::basic_string<char,std::char_traits<char>,std::allocator<char> > * __ptr64,std::basic_string<char,std::char_traits<char>,std::allocator<char> > * __ptr64,std::forward_iterator_tag>

; 2486 : 	return _Result;

	mov	rax, QWORD PTR _Result$[rsp]

; 2487 : 	}

	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
??$_Copy_opt@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAV12@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PEAV10@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ENDP ; std::_Copy_opt<std::basic_string<char,std::char_traits<char>,std::allocator<char> > * __ptr64,std::basic_string<char,std::char_traits<char>,std::allocator<char> > * __ptr64>
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$unchecked_copy@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAV12@@stdext@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAV12@00@Z DD imagerel $LN3
	DD	imagerel $LN3+145
	DD	imagerel $unwind$??$unchecked_copy@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAV12@@stdext@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAV12@00@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$unchecked_copy@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAV12@@stdext@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAV12@00@Z DD 031501H
	DD	070118215H
	DD	03010H
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT ??$unchecked_copy@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAV12@@stdext@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAV12@00@Z
_TEXT	SEGMENT
$T67536 = 48
$T67537 = 49
$T67538 = 50
_First$ = 96
_Last$ = 104
_Dest$ = 112
??$unchecked_copy@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAV12@@stdext@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAV12@00@Z PROC ; stdext::unchecked_copy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > * __ptr64,std::basic_string<char,std::char_traits<char>,std::allocator<char> > * __ptr64>, COMDAT

; 3604 : 	{	// copy [_First, _Last) to [_Dest, ...)

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbx
	push	rdi
	sub	rsp, 72					; 00000048H

; 3605 : 		return (_STD _Copy_opt(_CHECKED_BASE(_First), _CHECKED_BASE(_Last), _Dest,
; 3606 : 			_STD _Iter_random(_First, _Dest), _STD _Ptr_cat(_First, _Dest), _STD _Range_checked_iterator_tag()));

	lea	rdi, QWORD PTR $T67536[rsp]
	xor	eax, eax
	mov	ecx, 1
	rep stosb
	lea	rdx, QWORD PTR _Dest$[rsp]
	lea	rcx, QWORD PTR _First$[rsp]
	call	??$_Ptr_cat@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAV12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AEAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::_Ptr_cat<std::basic_string<char,std::char_traits<char>,std::allocator<char> > * __ptr64,std::basic_string<char,std::char_traits<char>,std::allocator<char> > * __ptr64>
	mov	BYTE PTR $T67537[rsp], al
	lea	r8, QWORD PTR _Dest$[rsp]
	lea	rdx, QWORD PTR _First$[rsp]
	lea	rcx, QWORD PTR $T67538[rsp]
	call	??$_Iter_random@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAV12@@std@@YA?AUrandom_access_iterator_tag@0@AEBQEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::_Iter_random<std::basic_string<char,std::char_traits<char>,std::allocator<char> > * __ptr64,std::basic_string<char,std::char_traits<char>,std::allocator<char> > * __ptr64>
	mov	rbx, rax
	lea	rcx, QWORD PTR _Last$[rsp]
	call	??$_Checked_base@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAPEAV10@@Z ; std::_Checked_base<std::basic_string<char,std::char_traits<char>,std::allocator<char> > * __ptr64>
	mov	rdi, rax
	lea	rcx, QWORD PTR _First$[rsp]
	call	??$_Checked_base@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAPEAV10@@Z ; std::_Checked_base<std::basic_string<char,std::char_traits<char>,std::allocator<char> > * __ptr64>
	mov	rcx, rax
	movzx	eax, BYTE PTR $T67536[rsp]
	mov	BYTE PTR [rsp+40], al
	movzx	eax, BYTE PTR $T67537[rsp]
	mov	BYTE PTR [rsp+32], al
	movzx	r9d, BYTE PTR [rbx]
	mov	r8, QWORD PTR _Dest$[rsp]
	mov	rdx, rdi
	call	??$_Copy_opt@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAV12@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PEAV10@00Urandom_access_iterator_tag@0@U_Nonscalar_ptr_iterator_tag@0@U_Range_checked_iterator_tag@0@@Z ; std::_Copy_opt<std::basic_string<char,std::char_traits<char>,std::allocator<char> > * __ptr64,std::basic_string<char,std::char_traits<char>,std::allocator<char> > * __ptr64>

; 3607 : 	}

	add	rsp, 72					; 00000048H
	pop	rdi
	pop	rbx
	ret	0
??$unchecked_copy@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAV12@@stdext@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAV12@00@Z ENDP ; stdext::unchecked_copy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > * __ptr64,std::basic_string<char,std::char_traits<char>,std::allocator<char> > * __ptr64>
_TEXT	ENDS
;	COMDAT pdata
; File d:\program files (x86)\microsoft visual studio 9.0\vc\include\ostream
pdata	SEGMENT
$pdata$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z DD imagerel $LN25
	DD	imagerel $LN25+963
	DD	imagerel $unwind$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA DD imagerel ?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA
	DD	imagerel ?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA+24
	DD	imagerel $unwind$?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA DD imagerel ?catch$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA
	DD	imagerel ?catch$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA+68
	DD	imagerel $unwind$?catch$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z DD imagerel ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
	DD	0ffffffffH
	DD	imagerel ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z+211
	DD	00H
	DD	imagerel ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z+244
	DD	01H
	DD	imagerel ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z+888
	DD	00H
	DD	imagerel ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z+940
	DD	0ffffffffH
	DD	imagerel ?catch$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA
	DD	00H
	DD	imagerel ?catch$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA+13
	DD	02H
	DD	imagerel ?catch$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA+52
	DD	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA DD 020a19H
	DD	05006320aH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z DD 021a19H
	DD	0190111H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z DD 019930522H
	DD	03H
	DD	imagerel $stateUnwindMap$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
	DD	01H
	DD	imagerel $tryMap$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
	DD	08H
	DD	imagerel $ip2state$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
	DD	060H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$tryMap$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z DD 01H
	DD	01H
	DD	02H
	DD	01H
	DD	imagerel $handlerMap$0$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$0$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z DD 040H
	DD	00H
	DD	00H
	DD	imagerel ?catch$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA
	DD	038H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA
	DD	00H
	DD	00H
	DD	00H
	DD	00H
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
_TEXT	SEGMENT
_State$ = 32
_Count$ = 40
_Pad$ = 48
_Ok$ = 56
$T67548 = 72
$T67549 = 76
$T67550 = 80
$T67551 = 84
$T67552 = 88
$T67562 = 96
tv137 = 104
tv139 = 112
tv294 = 116
tv295 = 120
tv296 = 128
tv297 = 132
tv298 = 136
tv299 = 144
tv300 = 152
tv301 = 160
tv302 = 168
tv303 = 176
tv304 = 180
tv305 = 184
_Ostr$ = 208
_Val$ = 216
??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z PROC ; std::operator<<<std::char_traits<char> >, COMDAT

; 741  : 	{	// insert NTBS into char stream

$LN25:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 200				; 000000c8H
	mov	QWORD PTR $T67562[rsp], -2

; 742  : 	typedef char _Elem;
; 743  : 	typedef basic_ostream<_Elem, _Traits> _Myos;
; 744  : 	ios_base::iostate _State = ios_base::goodbit;

	mov	DWORD PTR _State$[rsp], 0

; 745  : 	streamsize _Count = (streamsize)_Traits::length(_Val);	// may overflow

	mov	rcx, QWORD PTR _Val$[rsp]
	call	QWORD PTR __imp_?length@?$char_traits@D@std@@SA_KPEBD@Z
	mov	QWORD PTR _Count$[rsp], rax

; 746  : 	streamsize _Pad = _Ostr.width() <= 0 || _Ostr.width() <= _Count
; 747  : 		? 0 : _Ostr.width() - _Count;

	mov	rax, QWORD PTR _Ostr$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rsp]
	add	rcx, rax
	call	QWORD PTR __imp_?width@ios_base@std@@QEBA_JXZ
	test	rax, rax
	jle	SHORT $LN17@operator@4
	mov	rax, QWORD PTR _Ostr$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rsp]
	add	rcx, rax
	call	QWORD PTR __imp_?width@ios_base@std@@QEBA_JXZ
	cmp	rax, QWORD PTR _Count$[rsp]
	jle	SHORT $LN17@operator@4
	mov	rax, QWORD PTR _Ostr$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rsp]
	add	rcx, rax
	call	QWORD PTR __imp_?width@ios_base@std@@QEBA_JXZ
	sub	rax, QWORD PTR _Count$[rsp]
	mov	QWORD PTR tv137[rsp], rax
	jmp	SHORT $LN18@operator@4
$LN17@operator@4:
	mov	QWORD PTR tv137[rsp], 0
$LN18@operator@4:
	mov	rax, QWORD PTR tv137[rsp]
	mov	QWORD PTR _Pad$[rsp], rax

; 748  : 	const typename _Myos::sentry _Ok(_Ostr);

	mov	rdx, QWORD PTR _Ostr$[rsp]
	lea	rcx, QWORD PTR _Ok$[rsp]
	call	??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry
	npad	1

; 749  : 
; 750  : 	if (!_Ok)

	lea	rcx, QWORD PTR _Ok$[rsp]
	call	??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN14@operator@4

; 751  : 		_State |= ios_base::badbit;

	mov	eax, DWORD PTR _State$[rsp]
	or	eax, 4
	mov	DWORD PTR _State$[rsp], eax

; 752  : 	else

	jmp	$LN23@operator@4
$LN14@operator@4:

; 753  : 		{	// state okay, insert
; 754  : 		_TRY_IO_BEGIN
; 755  : 		if ((_Ostr.flags() & ios_base::adjustfield) != ios_base::left)

	mov	rax, QWORD PTR _Ostr$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rsp]
	add	rcx, rax
	call	QWORD PTR __imp_?flags@ios_base@std@@QEBAHXZ
	mov	DWORD PTR tv139[rsp], eax
	mov	eax, DWORD PTR tv139[rsp]
	and	eax, 448				; 000001c0H
	cmp	eax, 64					; 00000040H
	je	$LN11@operator@4

; 756  : 			for (; 0 < _Pad; --_Pad)	// pad on left

	jmp	SHORT $LN10@operator@4
$LN9@operator@4:
	mov	rax, QWORD PTR _Pad$[rsp]
	sub	rax, 1
	mov	QWORD PTR _Pad$[rsp], rax
$LN10@operator@4:
	cmp	QWORD PTR _Pad$[rsp], 0
	jle	$LN11@operator@4

; 757  : 				if (_Traits::eq_int_type(_Traits::eof(),
; 758  : 					_Ostr.rdbuf()->sputc(_Ostr.fill())))

	mov	rax, QWORD PTR _Ostr$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rsp]
	add	rcx, rax
	call	QWORD PTR __imp_?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADXZ
	mov	BYTE PTR tv294[rsp], al
	mov	rax, QWORD PTR _Ostr$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rsp]
	add	rcx, rax
	call	QWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
	mov	QWORD PTR tv295[rsp], rax
	movzx	edx, BYTE PTR tv294[rsp]
	mov	rcx, QWORD PTR tv295[rsp]
	call	QWORD PTR __imp_?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHD@Z
	mov	DWORD PTR tv296[rsp], eax
	mov	eax, DWORD PTR tv296[rsp]
	mov	DWORD PTR $T67548[rsp], eax
	call	QWORD PTR __imp_?eof@?$char_traits@D@std@@SAHXZ
	mov	DWORD PTR tv297[rsp], eax
	mov	eax, DWORD PTR tv297[rsp]
	mov	DWORD PTR $T67549[rsp], eax
	lea	rdx, QWORD PTR $T67548[rsp]
	lea	rcx, QWORD PTR $T67549[rsp]
	call	QWORD PTR __imp_?eq_int_type@?$char_traits@D@std@@SA_NAEBH0@Z
	mov	BYTE PTR tv298[rsp], al
	movzx	eax, BYTE PTR tv298[rsp]
	test	eax, eax
	je	SHORT $LN7@operator@4

; 759  : 					{	// insertion failed, quit
; 760  : 					_State |= ios_base::badbit;

	mov	eax, DWORD PTR _State$[rsp]
	or	eax, 4
	mov	DWORD PTR _State$[rsp], eax

; 761  : 					break;

	jmp	SHORT $LN11@operator@4
$LN7@operator@4:

; 762  : 					}
; 763  : 
; 764  : 		if (_State == ios_base::goodbit

	jmp	$LN9@operator@4
$LN11@operator@4:

; 765  : 			&& _Ostr.rdbuf()->sputn(_Val, _Count) != _Count)

	cmp	DWORD PTR _State$[rsp], 0
	jne	SHORT $LN6@operator@4
	mov	rax, QWORD PTR _Ostr$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rsp]
	add	rcx, rax
	call	QWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
	mov	QWORD PTR tv299[rsp], rax
	mov	r8, QWORD PTR _Count$[rsp]
	mov	rdx, QWORD PTR _Val$[rsp]
	mov	rcx, QWORD PTR tv299[rsp]
	call	QWORD PTR __imp_?sputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAA_JPEBD_J@Z
	mov	QWORD PTR tv300[rsp], rax
	mov	rax, QWORD PTR _Count$[rsp]
	cmp	QWORD PTR tv300[rsp], rax
	je	SHORT $LN6@operator@4

; 766  : 			_State |= ios_base::badbit;

	mov	eax, DWORD PTR _State$[rsp]
	or	eax, 4
	mov	DWORD PTR _State$[rsp], eax
$LN6@operator@4:

; 767  : 
; 768  : 		if (_State == ios_base::goodbit)

	cmp	DWORD PTR _State$[rsp], 0
	jne	$LN5@operator@4

; 769  : 			for (; 0 < _Pad; --_Pad)	// pad on right

	jmp	SHORT $LN4@operator@4
$LN3@operator@4:
	mov	rax, QWORD PTR _Pad$[rsp]
	sub	rax, 1
	mov	QWORD PTR _Pad$[rsp], rax
$LN4@operator@4:
	cmp	QWORD PTR _Pad$[rsp], 0
	jle	$LN5@operator@4

; 770  : 				if (_Traits::eq_int_type(_Traits::eof(),
; 771  : 					_Ostr.rdbuf()->sputc(_Ostr.fill())))

	mov	rax, QWORD PTR _Ostr$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rsp]
	add	rcx, rax
	call	QWORD PTR __imp_?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADXZ
	mov	BYTE PTR tv301[rsp], al
	mov	rax, QWORD PTR _Ostr$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rsp]
	add	rcx, rax
	call	QWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
	mov	QWORD PTR tv302[rsp], rax
	movzx	edx, BYTE PTR tv301[rsp]
	mov	rcx, QWORD PTR tv302[rsp]
	call	QWORD PTR __imp_?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHD@Z
	mov	DWORD PTR tv303[rsp], eax
	mov	eax, DWORD PTR tv303[rsp]
	mov	DWORD PTR $T67550[rsp], eax
	call	QWORD PTR __imp_?eof@?$char_traits@D@std@@SAHXZ
	mov	DWORD PTR tv304[rsp], eax
	mov	eax, DWORD PTR tv304[rsp]
	mov	DWORD PTR $T67551[rsp], eax
	lea	rdx, QWORD PTR $T67550[rsp]
	lea	rcx, QWORD PTR $T67551[rsp]
	call	QWORD PTR __imp_?eq_int_type@?$char_traits@D@std@@SA_NAEBH0@Z
	mov	BYTE PTR tv305[rsp], al
	movzx	eax, BYTE PTR tv305[rsp]
	test	eax, eax
	je	SHORT $LN1@operator@4

; 772  : 					{	// insertion failed, quit
; 773  : 					_State |= ios_base::badbit;

	mov	eax, DWORD PTR _State$[rsp]
	or	eax, 4
	mov	DWORD PTR _State$[rsp], eax

; 774  : 					break;

	jmp	SHORT $LN5@operator@4
$LN1@operator@4:

; 775  : 					}

	jmp	$LN3@operator@4
$LN5@operator@4:

; 776  : 		_Ostr.width(0);

	mov	rax, QWORD PTR _Ostr$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rsp]
	add	rcx, rax
	xor	edx, edx
	call	QWORD PTR __imp_?width@ios_base@std@@QEAA_J_J@Z
	npad	1
$LN23@operator@4:

; 777  : 		_CATCH_IO_(_Ostr)
; 778  : 		}
; 779  : 
; 780  : 	_Ostr.setstate(_State);

	mov	rax, QWORD PTR _Ostr$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rsp]
	add	rcx, rax
	xor	r8d, r8d
	mov	edx, DWORD PTR _State$[rsp]
	call	QWORD PTR __imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z

; 781  : 	return (_Ostr);

	mov	rax, QWORD PTR _Ostr$[rsp]
	mov	QWORD PTR $T67552[rsp], rax
	lea	rcx, QWORD PTR _Ok$[rsp]
	call	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
	mov	rax, QWORD PTR $T67552[rsp]

; 782  : 	}

	add	rsp, 200				; 000000c8H
	ret	0
??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ENDP ; std::operator<<<std::char_traits<char> >
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_State$ = 32
_Count$ = 40
_Pad$ = 48
_Ok$ = 56
$T67548 = 72
$T67549 = 76
$T67550 = 80
$T67551 = 84
$T67552 = 88
$T67562 = 96
tv137 = 104
tv139 = 112
tv294 = 116
tv295 = 120
tv296 = 128
tv297 = 132
tv298 = 136
tv299 = 144
tv300 = 152
tv301 = 160
tv302 = 168
tv303 = 176
tv304 = 180
tv305 = 184
_Ostr$ = 208
_Val$ = 216
?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA PROC ; `std::operator<<<std::char_traits<char> >'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	lea	rcx, QWORD PTR _Ok$[rbp]
	call	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA ENDP ; `std::operator<<<std::char_traits<char> >'::`1'::dtor$0
; Function compile flags: /Odtp
_State$ = 32
_Count$ = 40
_Pad$ = 48
_Ok$ = 56
$T67548 = 72
$T67549 = 76
$T67550 = 80
$T67551 = 84
$T67552 = 88
$T67562 = 96
tv137 = 104
tv139 = 112
tv294 = 116
tv295 = 120
tv296 = 128
tv297 = 132
tv298 = 136
tv299 = 144
tv300 = 152
tv301 = 160
tv302 = 168
tv303 = 176
tv304 = 180
tv305 = 184
_Ostr$ = 208
_Val$ = 216
?catch$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA PROC ; `std::operator<<<std::char_traits<char> >'::`1'::catch$0

; 777  : 		_CATCH_IO_(_Ostr)

	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
__catch$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z$0:
	mov	rax, QWORD PTR _Ostr$[rbp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rbp]
	add	rcx, rax
	mov	r8b, 1
	mov	edx, 4
	call	QWORD PTR __imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z
	npad	1
	lea	rax, $LN23@catch$0
	jmp	SHORT $LN24@catch$0
$LN24@catch$0:
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
	int	3
?catch$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA ENDP ; `std::operator<<<std::char_traits<char> >'::`1'::catch$0
text$x	ENDS
;	COMDAT pdata
; File d:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
pdata	SEGMENT
$pdata$??8?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBA_NAEBV01@@Z DD imagerel $LN7
	DD	imagerel $LN7+106
	DD	imagerel $unwind$??8?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBA_NAEBV01@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??8?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBA_NAEBV01@@Z DD 010e01H
	DD	0620eH
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT ??8?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBA_NAEBV01@@Z
_TEXT	SEGMENT
tv88 = 32
this$ = 64
_Right$ = 72
??8?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBA_NAEBV01@@Z PROC ; std::_Vector_const_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator==, COMDAT

; 203  : 		{	// test for iterator equality

$LN7:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H

; 204  : 
; 205  :  #if _HAS_ITERATOR_DEBUGGING
; 206  : 		_Compat(_Right);
; 207  :  #else
; 208  : 		_SCL_SECURE_VALIDATE(this->_Has_container() && this->_Same_container(_Right));

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Has_container@_Iterator_base_aux@std@@QEBA_NXZ ; std::_Iterator_base_aux::_Has_container
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN1@operator@5
	mov	rdx, QWORD PTR _Right$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Same_container@_Iterator_base_aux@std@@QEBA_NAEBV12@@Z ; std::_Iterator_base_aux::_Same_container
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN2@operator@5
$LN1@operator@5:
	call	QWORD PTR __imp__invalid_parameter_noinfo
$LN2@operator@5:

; 209  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 210  : 
; 211  : 		return (_Myptr == _Right._Myptr);

	mov	rcx, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR _Right$[rsp]
	mov	rax, QWORD PTR [rax+8]
	cmp	QWORD PTR [rcx+8], rax
	jne	SHORT $LN5@operator@5
	mov	DWORD PTR tv88[rsp], 1
	jmp	SHORT $LN6@operator@5
$LN5@operator@5:
	mov	DWORD PTR tv88[rsp], 0
$LN6@operator@5:
	mov	al, BYTE PTR tv88[rsp]

; 212  : 		}

	add	rsp, 56					; 00000038H
	ret	0
??8?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBA_NAEBV01@@Z ENDP ; std::_Vector_const_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator==
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@_K@Z DD imagerel $LN4
	DD	imagerel $LN4+60
	DD	imagerel $unwind$??A?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@_K@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@_K@Z DD 010e01H
	DD	0420eH
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT ??A?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@_K@Z
_TEXT	SEGMENT
this$ = 48
_Pos$ = 56
??A?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@_K@Z PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator[], COMDAT

; 774  : 		{	// subscript mutable sequence

$LN4:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 775  : 
; 776  :  #if _HAS_ITERATOR_DEBUGGING
; 777  : 		if (size() <= _Pos)
; 778  : 			{
; 779  : 			_DEBUG_ERROR("vector subscript out of range");
; 780  : 			_SCL_SECURE_OUT_OF_RANGE;
; 781  : 			}
; 782  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 783  : 		_SCL_SECURE_VALIDATE_RANGE(_Pos < size());

	mov	rcx, QWORD PTR this$[rsp]
	call	?size@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBA_KXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::size
	cmp	QWORD PTR _Pos$[rsp], rax
	jb	SHORT $LN1@operator@6
	call	QWORD PTR __imp__invalid_parameter_noinfo
$LN1@operator@6:

; 784  : 
; 785  : 		return (*(_Myfirst + _Pos));

	mov	rax, QWORD PTR _Pos$[rsp]
	imul	rax, 40					; 00000028H
	mov	rcx, QWORD PTR this$[rsp]
	add	rax, QWORD PTR [rcx+24]

; 786  : 		}

	add	rsp, 40					; 00000028H
	ret	0
??A?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@_K@Z ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator[]
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?empty@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBA_NXZ DD imagerel $LN5
	DD	imagerel $LN5+51
	DD	imagerel $unwind$?empty@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBA_NXZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?empty@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBA_NXZ DD 010901H
	DD	06209H
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT ?empty@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBA_NXZ
_TEXT	SEGMENT
tv67 = 32
this$ = 64
?empty@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBA_NXZ PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::empty, COMDAT

; 735  : 		{	// test if sequence is empty

$LN5:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H

; 736  : 		return (size() == 0);

	mov	rcx, QWORD PTR this$[rsp]
	call	?size@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBA_KXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::size
	test	rax, rax
	jne	SHORT $LN3@empty
	mov	DWORD PTR tv67[rsp], 1
	jmp	SHORT $LN4@empty
$LN3@empty:
	mov	DWORD PTR tv67[rsp], 0
$LN4@empty:
	mov	al, BYTE PTR tv67[rsp]

; 737  : 		}

	add	rsp, 56					; 00000038H
	ret	0
?empty@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBA_NXZ ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::empty
_TEXT	ENDS
PUBLIC	?hasCommentForValue@StyledWriter@Json@@AEAA_NAEBVValue@2@@Z ; Json::StyledWriter::hasCommentForValue
;	COMDAT pdata
; File d:\adaptivecloth\jsoncpp\src\lib_json\json_writer.cpp
pdata	SEGMENT
$pdata$?hasCommentForValue@StyledWriter@Json@@AEAA_NAEBVValue@2@@Z DD imagerel $LN5
	DD	imagerel $LN5+104
	DD	imagerel $unwind$?hasCommentForValue@StyledWriter@Json@@AEAA_NAEBVValue@2@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?hasCommentForValue@StyledWriter@Json@@AEAA_NAEBVValue@2@@Z DD 010e01H
	DD	0620eH
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT ?hasCommentForValue@StyledWriter@Json@@AEAA_NAEBVValue@2@@Z
_TEXT	SEGMENT
tv79 = 32
this$ = 64
value$ = 72
?hasCommentForValue@StyledWriter@Json@@AEAA_NAEBVValue@2@@Z PROC ; Json::StyledWriter::hasCommentForValue, COMDAT

; 510  : {

$LN5:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H

; 511  :    return value.hasComment( commentBefore )
; 512  :           ||  value.hasComment( commentAfterOnSameLine )
; 513  :           ||  value.hasComment( commentAfter );

	xor	edx, edx
	mov	rcx, QWORD PTR value$[rsp]
	call	?hasComment@Value@Json@@QEBA_NW4CommentPlacement@2@@Z ; Json::Value::hasComment
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN3@hasComment@2
	mov	edx, 1
	mov	rcx, QWORD PTR value$[rsp]
	call	?hasComment@Value@Json@@QEBA_NW4CommentPlacement@2@@Z ; Json::Value::hasComment
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN3@hasComment@2
	mov	edx, 2
	mov	rcx, QWORD PTR value$[rsp]
	call	?hasComment@Value@Json@@QEBA_NW4CommentPlacement@2@@Z ; Json::Value::hasComment
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN3@hasComment@2
	mov	DWORD PTR tv79[rsp], 0
	jmp	SHORT $LN4@hasComment@2
$LN3@hasComment@2:
	mov	DWORD PTR tv79[rsp], 1
$LN4@hasComment@2:
	mov	al, BYTE PTR tv79[rsp]

; 514  : }

	add	rsp, 56					; 00000038H
	ret	0
?hasCommentForValue@StyledWriter@Json@@AEAA_NAEBVValue@2@@Z ENDP ; Json::StyledWriter::hasCommentForValue
_TEXT	ENDS
PUBLIC	?writeWithIndent@StyledWriter@Json@@AEAAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; Json::StyledWriter::writeWithIndent
;	COMDAT pdata
pdata	SEGMENT
$pdata$?writeWithIndent@StyledWriter@Json@@AEAAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD imagerel $LN3
	DD	imagerel $LN3+49
	DD	imagerel $unwind$?writeWithIndent@StyledWriter@Json@@AEAAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?writeWithIndent@StyledWriter@Json@@AEAAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 010e01H
	DD	0420eH
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT ?writeWithIndent@StyledWriter@Json@@AEAAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
this$ = 48
value$ = 56
?writeWithIndent@StyledWriter@Json@@AEAAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; Json::StyledWriter::writeWithIndent, COMDAT

; 462  : {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 463  :    writeIndent();

	mov	rcx, QWORD PTR this$[rsp]
	call	?writeIndent@StyledWriter@Json@@AEAAXXZ	; Json::StyledWriter::writeIndent

; 464  :    document_ += value;

	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 56					; 00000038H
	mov	rdx, QWORD PTR value$[rsp]
	call	QWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z

; 465  : }

	add	rsp, 40					; 00000028H
	ret	0
?writeWithIndent@StyledWriter@Json@@AEAAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; Json::StyledWriter::writeWithIndent
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_GWriter@Json@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+54
	DD	imagerel $unwind$??_GWriter@Json@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_GWriter@Json@@UEAAPEAXI@Z DD 010d01H
	DD	0420dH
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT ??_GWriter@Json@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_GWriter@Json@@UEAAPEAXI@Z PROC			; Json::Writer::`scalar deleting destructor', COMDAT
$LN4:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	mov	rcx, QWORD PTR this$[rsp]
	call	??1Writer@Json@@UEAA@XZ			; Json::Writer::~Writer
	mov	eax, DWORD PTR __flags$[rsp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN1@scalar@3
	mov	rcx, QWORD PTR this$[rsp]
	call	??3@YAXPEAX@Z				; operator delete
$LN1@scalar@3:
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 40					; 00000028H
	ret	0
??_GWriter@Json@@UEAAPEAXI@Z ENDP			; Json::Writer::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?valueToString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z ; Json::valueToString
;	COMDAT pdata
pdata	SEGMENT
$pdata$?valueToString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z DD imagerel $LN5
	DD	imagerel $LN5+110
	DD	imagerel $unwind$?valueToString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?valueToString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z DD 011c19H
	DD	0c20dH
	DD	imagerel __GSHandlerCheck
	DD	058H
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT ?valueToString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z
_TEXT	SEGMENT
current$ = 32
buffer$ = 48
$T67643 = 80
__$ArrayPad$ = 88
__$ReturnUdt$ = 112
value$ = 120
?valueToString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z PROC ; Json::valueToString, COMDAT

; 58   : {

$LN5:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 104				; 00000068H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
	mov	DWORD PTR $T67643[rsp], 0

; 59   :    char buffer[32];
; 60   :    char *current = buffer + sizeof(buffer);

	lea	rax, QWORD PTR buffer$[rsp+32]
	mov	QWORD PTR current$[rsp], rax

; 61   :    uintToString( value, current );

	lea	rdx, QWORD PTR current$[rsp]
	mov	ecx, DWORD PTR value$[rsp]
	call	?uintToString@Json@@YAXIAEAPEAD@Z	; Json::uintToString

; 62   :    assert( current >= buffer );
; 63   :    return current;

	mov	rdx, QWORD PTR current$[rsp]
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	QWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@PEBD@Z
	mov	eax, DWORD PTR $T67643[rsp]
	or	eax, 1
	mov	DWORD PTR $T67643[rsp], eax
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 64   : }

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 104				; 00000068H
	ret	0
?valueToString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z ENDP ; Json::valueToString
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?valueToString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z ; Json::valueToString
;	COMDAT pdata
pdata	SEGMENT
$pdata$?valueToString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z DD imagerel $LN9
	DD	imagerel $LN9+212
	DD	imagerel $unwind$?valueToString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?valueToString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z DD 011c19H
	DD	0e20dH
	DD	imagerel __GSHandlerCheck
	DD	060H
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT ?valueToString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z
_TEXT	SEGMENT
current$ = 32
isNegative$ = 40
buffer$ = 56
$T67659 = 88
tv66 = 92
__$ArrayPad$ = 96
__$ReturnUdt$ = 128
value$ = 136
?valueToString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z PROC ; Json::valueToString, COMDAT

; 43   : {

$LN9:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 120				; 00000078H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
	mov	DWORD PTR $T67659[rsp], 0

; 44   :    char buffer[32];
; 45   :    char *current = buffer + sizeof(buffer);

	lea	rax, QWORD PTR buffer$[rsp+32]
	mov	QWORD PTR current$[rsp], rax

; 46   :    bool isNegative = value < 0;

	cmp	DWORD PTR value$[rsp], 0
	jge	SHORT $LN5@valueToStr@3
	mov	DWORD PTR tv66[rsp], 1
	jmp	SHORT $LN6@valueToStr@3
$LN5@valueToStr@3:
	mov	DWORD PTR tv66[rsp], 0
$LN6@valueToStr@3:
	movzx	eax, BYTE PTR tv66[rsp]
	mov	BYTE PTR isNegative$[rsp], al

; 47   :    if ( isNegative )

	movzx	eax, BYTE PTR isNegative$[rsp]
	test	eax, eax
	je	SHORT $LN2@valueToStr@3

; 48   :       value = -value;

	mov	eax, DWORD PTR value$[rsp]
	neg	eax
	mov	DWORD PTR value$[rsp], eax
$LN2@valueToStr@3:

; 49   :    uintToString( UInt(value), current );

	lea	rdx, QWORD PTR current$[rsp]
	mov	ecx, DWORD PTR value$[rsp]
	call	?uintToString@Json@@YAXIAEAPEAD@Z	; Json::uintToString

; 50   :    if ( isNegative )

	movzx	eax, BYTE PTR isNegative$[rsp]
	test	eax, eax
	je	SHORT $LN1@valueToStr@3

; 51   :       *--current = '-';

	mov	rax, QWORD PTR current$[rsp]
	sub	rax, 1
	mov	QWORD PTR current$[rsp], rax
	mov	rax, QWORD PTR current$[rsp]
	mov	BYTE PTR [rax], 45			; 0000002dH
$LN1@valueToStr@3:

; 52   :    assert( current >= buffer );
; 53   :    return current;

	mov	rdx, QWORD PTR current$[rsp]
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	QWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@PEBD@Z
	mov	eax, DWORD PTR $T67659[rsp]
	or	eax, 1
	mov	DWORD PTR $T67659[rsp], eax
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 54   : }

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 120				; 00000078H
	ret	0
?valueToString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z ENDP ; Json::valueToString
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?containsControlCharacter@Json@@YA_NPEBD@Z DD imagerel ?containsControlCharacter@Json@@YA_NPEBD@Z
	DD	imagerel ?containsControlCharacter@Json@@YA_NPEBD@Z+77
	DD	imagerel $unwind$?containsControlCharacter@Json@@YA_NPEBD@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?containsControlCharacter@Json@@YA_NPEBD@Z DD 010901H
	DD	06209H
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT ?containsControlCharacter@Json@@YA_NPEBD@Z
_TEXT	SEGMENT
tv68 = 32
str$ = 64
?containsControlCharacter@Json@@YA_NPEBD@Z PROC		; Json::containsControlCharacter, COMDAT

; 22   : {

	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
$LN3@containsCo:

; 23   :    while ( *str ) 

	mov	rax, QWORD PTR str$[rsp]
	movsx	eax, BYTE PTR [rax]
	test	eax, eax
	je	SHORT $LN2@containsCo

; 24   :    {
; 25   :       if ( isControlCharacter( *(str++) ) )

	mov	rax, QWORD PTR str$[rsp]
	movzx	eax, BYTE PTR [rax]
	mov	BYTE PTR tv68[rsp], al
	movzx	ecx, BYTE PTR tv68[rsp]
	call	?isControlCharacter@Json@@YA_ND@Z	; Json::isControlCharacter
	movzx	ecx, al
	mov	rax, QWORD PTR str$[rsp]
	add	rax, 1
	mov	QWORD PTR str$[rsp], rax
	test	ecx, ecx
	je	SHORT $LN1@containsCo

; 26   :          return true;

	mov	al, 1
	jmp	SHORT $LN4@containsCo
$LN1@containsCo:

; 27   :    }

	jmp	SHORT $LN3@containsCo
$LN2@containsCo:

; 28   :    return false;

	xor	al, al
$LN4@containsCo:

; 29   : }

	add	rsp, 56					; 00000038H
	ret	0
?containsControlCharacter@Json@@YA_NPEBD@Z ENDP		; Json::containsControlCharacter
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_GFastWriter@Json@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+54
	DD	imagerel $unwind$??_GFastWriter@Json@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_GFastWriter@Json@@UEAAPEAXI@Z DD 010d01H
	DD	0420dH
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT ??_GFastWriter@Json@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_GFastWriter@Json@@UEAAPEAXI@Z PROC			; Json::FastWriter::`scalar deleting destructor', COMDAT
$LN4:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	mov	rcx, QWORD PTR this$[rsp]
	call	??1FastWriter@Json@@UEAA@XZ		; Json::FastWriter::~FastWriter
	mov	eax, DWORD PTR __flags$[rsp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN1@scalar@4
	mov	rcx, QWORD PTR this$[rsp]
	call	??3@YAXPEAX@Z				; operator delete
$LN1@scalar@4:
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 40					; 00000028H
	ret	0
??_GFastWriter@Json@@UEAAPEAXI@Z ENDP			; Json::FastWriter::`scalar deleting destructor'
;	COMDAT pdata
; File d:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
pdata	SEGMENT
$pdata$??E?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAAEAV01@XZ DD imagerel $LN5
	DD	imagerel $LN5+95
	DD	imagerel $unwind$??E?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAAEAV01@XZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??E?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAAEAV01@XZ DD 010901H
	DD	04209H
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT ??E?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAAEAV01@XZ
_TEXT	SEGMENT
this$ = 48
??E?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAAEAV01@XZ PROC ; std::_Vector_const_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator++, COMDAT

; 115  : 		{	// preincrement

$LN5:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 116  : 		_SCL_SECURE_VALIDATE(this->_Has_container());

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Has_container@_Iterator_base_aux@std@@QEBA_NXZ ; std::_Iterator_base_aux::_Has_container
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN2@operator@9
	call	QWORD PTR __imp__invalid_parameter_noinfo
$LN2@operator@9:

; 117  : 		_SCL_SECURE_VALIDATE_RANGE(_Myptr < ((_Myvec *)(this->_Getmycont()))->_Mylast);

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getmycont@_Iterator_base_aux@std@@QEBAPEBV_Container_base_aux@2@XZ ; std::_Iterator_base_aux::_Getmycont
	mov	rcx, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+32]
	cmp	QWORD PTR [rcx+8], rax
	jb	SHORT $LN1@operator@9
	call	QWORD PTR __imp__invalid_parameter_noinfo
$LN1@operator@9:

; 118  : 
; 119  :  #if _HAS_ITERATOR_DEBUGGING
; 120  : 		if (this->_Mycont == 0
; 121  : 			|| ((_Myvec *)this->_Mycont)->_Mylast <= _Myptr)
; 122  : 			_DEBUG_ERROR("vector iterator not incrementable");
; 123  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 124  : 
; 125  : 		++_Myptr;

	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+8]
	add	rcx, 40					; 00000028H
	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+8], rcx

; 126  : 		return (*this);

	mov	rax, QWORD PTR this$[rsp]

; 127  : 		}

	add	rsp, 40					; 00000028H
	ret	0
??E?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAAEAV01@XZ ENDP ; std::_Vector_const_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator++
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??D?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBAAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@XZ DD imagerel $LN5
	DD	imagerel $LN5+77
	DD	imagerel $unwind$??D?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBAAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@XZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??D?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBAAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@XZ DD 010901H
	DD	04209H
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT ??D?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBAAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@XZ
_TEXT	SEGMENT
this$ = 48
??D?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBAAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@XZ PROC ; std::_Vector_const_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator*, COMDAT

; 91   : 		{	// return designated object

$LN5:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 92   : 
; 93   :  #if _HAS_ITERATOR_DEBUGGING
; 94   : 		if (this->_Mycont == 0
; 95   : 			|| _Myptr < ((_Myvec *)this->_Mycont)->_Myfirst
; 96   : 			|| ((_Myvec *)this->_Mycont)->_Mylast <= _Myptr)
; 97   : 			{
; 98   : 			_DEBUG_ERROR("vector iterator not dereferencable");
; 99   : 			_SCL_SECURE_OUT_OF_RANGE;
; 100  : 			}
; 101  :  #else
; 102  :  		_SCL_SECURE_VALIDATE(this->_Has_container());

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Has_container@_Iterator_base_aux@std@@QEBA_NXZ ; std::_Iterator_base_aux::_Has_container
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN2@operator@10
	call	QWORD PTR __imp__invalid_parameter_noinfo
$LN2@operator@10:

; 103  : 		_SCL_SECURE_VALIDATE_RANGE(_Myptr < ((_Myvec *)(this->_Getmycont()))->_Mylast);

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getmycont@_Iterator_base_aux@std@@QEBAPEBV_Container_base_aux@2@XZ ; std::_Iterator_base_aux::_Getmycont
	mov	rcx, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+32]
	cmp	QWORD PTR [rcx+8], rax
	jb	SHORT $LN1@operator@10
	call	QWORD PTR __imp__invalid_parameter_noinfo
$LN1@operator@10:

; 104  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 105  : 
; 106  : 		return (*_Myptr);

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+8]

; 107  : 		}

	add	rsp, 40					; 00000028H
	ret	0
??D?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBAAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@XZ ENDP ; std::_Vector_const_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator*
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??9?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBA_NAEBV01@@Z DD imagerel $LN5
	DD	imagerel $LN5+63
	DD	imagerel $unwind$??9?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBA_NAEBV01@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??9?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBA_NAEBV01@@Z DD 010e01H
	DD	0620eH
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT ??9?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBA_NAEBV01@@Z
_TEXT	SEGMENT
tv69 = 32
this$ = 64
_Right$ = 72
??9?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBA_NAEBV01@@Z PROC ; std::_Vector_const_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator!=, COMDAT

; 215  : 		{	// test for iterator inequality

$LN5:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H

; 216  : 		return (!(*this == _Right));

	mov	rdx, QWORD PTR _Right$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	??8?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBA_NAEBV01@@Z ; std::_Vector_const_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator==
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN3@operator@11
	mov	DWORD PTR tv69[rsp], 1
	jmp	SHORT $LN4@operator@11
$LN3@operator@11:
	mov	DWORD PTR tv69[rsp], 0
$LN4@operator@11:
	mov	al, BYTE PTR tv69[rsp]

; 217  : 		}

	add	rsp, 56					; 00000038H
	ret	0
??9?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBA_NAEBV01@@Z ENDP ; std::_Vector_const_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator!=
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??E?$_Vector_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAAEAV01@XZ DD imagerel $LN3
	DD	imagerel $LN3+29
	DD	imagerel $unwind$??E?$_Vector_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAAEAV01@XZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??E?$_Vector_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAAEAV01@XZ DD 010901H
	DD	04209H
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT ??E?$_Vector_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAAEAV01@XZ
_TEXT	SEGMENT
this$ = 48
??E?$_Vector_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAAEAV01@XZ PROC ; std::_Vector_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator++, COMDAT

; 348  : 		{	// preincrement

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 349  : 		++(*(_Mybase *)this);

	mov	rcx, QWORD PTR this$[rsp]
	call	??E?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAAEAV01@XZ ; std::_Vector_const_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator++

; 350  : 		return (*this);

	mov	rax, QWORD PTR this$[rsp]

; 351  : 		}

	add	rsp, 40					; 00000028H
	ret	0
??E?$_Vector_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAAEAV01@XZ ENDP ; std::_Vector_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator++
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??D?$_Vector_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBAAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@XZ DD imagerel $LN3
	DD	imagerel $LN3+24
	DD	imagerel $unwind$??D?$_Vector_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBAAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@XZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??D?$_Vector_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBAAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@XZ DD 010901H
	DD	04209H
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT ??D?$_Vector_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBAAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@XZ
_TEXT	SEGMENT
this$ = 48
??D?$_Vector_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBAAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@XZ PROC ; std::_Vector_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator*, COMDAT

; 338  : 		{	// return designated object

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 339  : 		return ((reference)**(_Mybase *)this);

	mov	rcx, QWORD PTR this$[rsp]
	call	??D?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBAAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@XZ ; std::_Vector_const_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator*

; 340  : 		}

	add	rsp, 40					; 00000028H
	ret	0
??D?$_Vector_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBAAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@XZ ENDP ; std::_Vector_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator*
_TEXT	ENDS
PUBLIC	?writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z ; Json::StyledWriter::writeCommentAfterValueOnSameLine
;	COMDAT pdata
; File d:\adaptivecloth\jsoncpp\src\lib_json\json_writer.cpp
pdata	SEGMENT
$pdata$?writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z DD imagerel $LN10
	DD	imagerel $LN10+499
	DD	imagerel $unwind$?writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA DD imagerel ?dtor$0@?0??writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA
	DD	imagerel ?dtor$0@?0??writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA+25
	DD	imagerel $unwind$?dtor$0@?0??writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0??writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA DD imagerel ?dtor$1@?0??writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA
	DD	imagerel ?dtor$1@?0??writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA+25
	DD	imagerel $unwind$?dtor$1@?0??writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$2@?0??writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA DD imagerel ?dtor$2@?0??writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA
	DD	imagerel ?dtor$2@?0??writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA+25
	DD	imagerel $unwind$?dtor$2@?0??writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$3@?0??writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA DD imagerel ?dtor$3@?0??writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA
	DD	imagerel ?dtor$3@?0??writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA+28
	DD	imagerel $unwind$?dtor$3@?0??writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$4@?0??writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA DD imagerel ?dtor$4@?0??writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA
	DD	imagerel ?dtor$4@?0??writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA+28
	DD	imagerel $unwind$?dtor$4@?0??writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z DD imagerel ?writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z
	DD	0ffffffffH
	DD	imagerel ?writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z+106
	DD	00H
	DD	imagerel ?writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z+148
	DD	01H
	DD	imagerel ?writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z+198
	DD	02H
	DD	imagerel ?writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z+225
	DD	01H
	DD	imagerel ?writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z+237
	DD	00H
	DD	imagerel ?writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z+249
	DD	0ffffffffH
	DD	imagerel ?writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z+365
	DD	03H
	DD	imagerel ?writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z+410
	DD	04H
	DD	imagerel ?writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z+437
	DD	03H
	DD	imagerel ?writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z+452
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$4@?0??writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$3@?0??writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$2@?0??writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0??writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z DD 021d11H
	DD	0290111H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z DD 019930522H
	DD	05H
	DD	imagerel $stateUnwindMap$?writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z
	DD	00H
	DD	00H
	DD	0bH
	DD	imagerel $ip2state$?writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z
	DD	0e8H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA
	DD	00H
	DD	imagerel ?dtor$1@?0??writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA
	DD	01H
	DD	imagerel ?dtor$2@?0??writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$3@?0??writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA
	DD	03H
	DD	imagerel ?dtor$4@?0??writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT ?writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z
_TEXT	SEGMENT
$T68521 = 32
$T68522 = 72
$T68523 = 112
$T68524 = 152
$T68525 = 192
$T68539 = 232
tv156 = 240
tv147 = 248
tv157 = 256
tv149 = 264
tv158 = 272
tv151 = 280
tv159 = 288
tv153 = 296
tv160 = 304
tv155 = 312
this$ = 336
root$ = 344
?writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z PROC ; Json::StyledWriter::writeCommentAfterValueOnSameLine, COMDAT

; 495  : {

$LN10:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 328				; 00000148H
	mov	QWORD PTR $T68539[rsp], -2

; 496  :    if ( root.hasComment( commentAfterOnSameLine ) )

	mov	edx, 1
	mov	rcx, QWORD PTR root$[rsp]
	call	?hasComment@Value@Json@@QEBA_NW4CommentPlacement@2@@Z ; Json::Value::hasComment
	movzx	eax, al
	test	eax, eax
	je	$LN2@writeComme

; 497  :       document_ += " " + normalizeEOL( root.getComment( commentAfterOnSameLine ) );

	mov	r8d, 1
	lea	rdx, QWORD PTR $T68521[rsp]
	mov	rcx, QWORD PTR root$[rsp]
	call	?getComment@Value@Json@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4CommentPlacement@2@@Z ; Json::Value::getComment
	mov	QWORD PTR tv156[rsp], rax
	mov	rax, QWORD PTR tv156[rsp]
	mov	QWORD PTR tv147[rsp], rax
	mov	rdx, QWORD PTR tv147[rsp]
	lea	rcx, QWORD PTR $T68522[rsp]
	call	?normalizeEOL@StyledWriter@Json@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV34@@Z ; Json::StyledWriter::normalizeEOL
	mov	QWORD PTR tv157[rsp], rax
	mov	rax, QWORD PTR tv157[rsp]
	mov	QWORD PTR tv149[rsp], rax
	mov	r8, QWORD PTR tv149[rsp]
	lea	rdx, OFFSET FLAT:??_C@_01CLKCMJKC@?5?$AA@
	lea	rcx, QWORD PTR $T68523[rsp]
	call	QWORD PTR __imp_??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PEBDAEBV10@@Z
	mov	QWORD PTR tv158[rsp], rax
	mov	rax, QWORD PTR tv158[rsp]
	mov	QWORD PTR tv151[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 56					; 00000038H
	mov	rdx, QWORD PTR tv151[rsp]
	call	QWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z
	npad	1
	lea	rcx, QWORD PTR $T68523[rsp]
	call	QWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	npad	1
	lea	rcx, QWORD PTR $T68522[rsp]
	call	QWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	npad	1
	lea	rcx, QWORD PTR $T68521[rsp]
	call	QWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
$LN2@writeComme:

; 498  : 
; 499  :    if ( root.hasComment( commentAfter ) )

	mov	edx, 2
	mov	rcx, QWORD PTR root$[rsp]
	call	?hasComment@Value@Json@@QEBA_NW4CommentPlacement@2@@Z ; Json::Value::hasComment
	movzx	eax, al
	test	eax, eax
	je	$LN1@writeComme

; 500  :    {
; 501  :       document_ += "\n";

	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 56					; 00000038H
	lea	rdx, OFFSET FLAT:??_C@_01EEMJAFIK@?6?$AA@
	call	QWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@PEBD@Z

; 502  :       document_ += normalizeEOL( root.getComment( commentAfter ) );

	mov	r8d, 2
	lea	rdx, QWORD PTR $T68524[rsp]
	mov	rcx, QWORD PTR root$[rsp]
	call	?getComment@Value@Json@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4CommentPlacement@2@@Z ; Json::Value::getComment
	mov	QWORD PTR tv159[rsp], rax
	mov	rax, QWORD PTR tv159[rsp]
	mov	QWORD PTR tv153[rsp], rax
	mov	rdx, QWORD PTR tv153[rsp]
	lea	rcx, QWORD PTR $T68525[rsp]
	call	?normalizeEOL@StyledWriter@Json@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV34@@Z ; Json::StyledWriter::normalizeEOL
	mov	QWORD PTR tv160[rsp], rax
	mov	rax, QWORD PTR tv160[rsp]
	mov	QWORD PTR tv155[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 56					; 00000038H
	mov	rdx, QWORD PTR tv155[rsp]
	call	QWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z
	npad	1
	lea	rcx, QWORD PTR $T68525[rsp]
	call	QWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	npad	1
	lea	rcx, QWORD PTR $T68524[rsp]
	call	QWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ

; 503  :       document_ += "\n";

	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 56					; 00000038H
	lea	rdx, OFFSET FLAT:??_C@_01EEMJAFIK@?6?$AA@
	call	QWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@PEBD@Z
$LN1@writeComme:

; 504  :    }
; 505  : }

	add	rsp, 328				; 00000148H
	ret	0
?writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z ENDP ; Json::StyledWriter::writeCommentAfterValueOnSameLine
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T68521 = 32
$T68522 = 72
$T68523 = 112
$T68524 = 152
$T68525 = 192
$T68539 = 232
tv156 = 240
tv147 = 248
tv157 = 256
tv149 = 264
tv158 = 272
tv151 = 280
tv159 = 288
tv153 = 296
tv160 = 304
tv155 = 312
this$ = 336
root$ = 344
?dtor$0@?0??writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA PROC ; `Json::StyledWriter::writeCommentAfterValueOnSameLine'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	lea	rcx, QWORD PTR $T68521[rbp]
	call	QWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0??writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA ENDP ; `Json::StyledWriter::writeCommentAfterValueOnSameLine'::`1'::dtor$0
; Function compile flags: /Odtp
$T68521 = 32
$T68522 = 72
$T68523 = 112
$T68524 = 152
$T68525 = 192
$T68539 = 232
tv156 = 240
tv147 = 248
tv157 = 256
tv149 = 264
tv158 = 272
tv151 = 280
tv159 = 288
tv153 = 296
tv160 = 304
tv155 = 312
this$ = 336
root$ = 344
?dtor$1@?0??writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA PROC ; `Json::StyledWriter::writeCommentAfterValueOnSameLine'::`1'::dtor$1
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	lea	rcx, QWORD PTR $T68522[rbp]
	call	QWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$1@?0??writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA ENDP ; `Json::StyledWriter::writeCommentAfterValueOnSameLine'::`1'::dtor$1
; Function compile flags: /Odtp
$T68521 = 32
$T68522 = 72
$T68523 = 112
$T68524 = 152
$T68525 = 192
$T68539 = 232
tv156 = 240
tv147 = 248
tv157 = 256
tv149 = 264
tv158 = 272
tv151 = 280
tv159 = 288
tv153 = 296
tv160 = 304
tv155 = 312
this$ = 336
root$ = 344
?dtor$2@?0??writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA PROC ; `Json::StyledWriter::writeCommentAfterValueOnSameLine'::`1'::dtor$2
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	lea	rcx, QWORD PTR $T68523[rbp]
	call	QWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$2@?0??writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA ENDP ; `Json::StyledWriter::writeCommentAfterValueOnSameLine'::`1'::dtor$2
; Function compile flags: /Odtp
$T68521 = 32
$T68522 = 72
$T68523 = 112
$T68524 = 152
$T68525 = 192
$T68539 = 232
tv156 = 240
tv147 = 248
tv157 = 256
tv149 = 264
tv158 = 272
tv151 = 280
tv159 = 288
tv153 = 296
tv160 = 304
tv155 = 312
this$ = 336
root$ = 344
?dtor$3@?0??writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA PROC ; `Json::StyledWriter::writeCommentAfterValueOnSameLine'::`1'::dtor$3
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	lea	rcx, QWORD PTR $T68524[rbp]
	call	QWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$3@?0??writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA ENDP ; `Json::StyledWriter::writeCommentAfterValueOnSameLine'::`1'::dtor$3
; Function compile flags: /Odtp
$T68521 = 32
$T68522 = 72
$T68523 = 112
$T68524 = 152
$T68525 = 192
$T68539 = 232
tv156 = 240
tv147 = 248
tv157 = 256
tv149 = 264
tv158 = 272
tv151 = 280
tv159 = 288
tv153 = 296
tv160 = 304
tv155 = 312
this$ = 336
root$ = 344
?dtor$4@?0??writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA PROC ; `Json::StyledWriter::writeCommentAfterValueOnSameLine'::`1'::dtor$4
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	lea	rcx, QWORD PTR $T68525[rbp]
	call	QWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$4@?0??writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA ENDP ; `Json::StyledWriter::writeCommentAfterValueOnSameLine'::`1'::dtor$4
text$x	ENDS
PUBLIC	?writeCommentBeforeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z ; Json::StyledWriter::writeCommentBeforeValue
;	COMDAT pdata
pdata	SEGMENT
$pdata$?writeCommentBeforeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z DD imagerel $LN6
	DD	imagerel $LN6+217
	DD	imagerel $unwind$?writeCommentBeforeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??writeCommentBeforeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA DD imagerel ?dtor$0@?0??writeCommentBeforeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA
	DD	imagerel ?dtor$0@?0??writeCommentBeforeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA+25
	DD	imagerel $unwind$?dtor$0@?0??writeCommentBeforeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0??writeCommentBeforeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA DD imagerel ?dtor$1@?0??writeCommentBeforeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA
	DD	imagerel ?dtor$1@?0??writeCommentBeforeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA+25
	DD	imagerel $unwind$?dtor$1@?0??writeCommentBeforeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?writeCommentBeforeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z DD imagerel ?writeCommentBeforeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z
	DD	0ffffffffH
	DD	imagerel ?writeCommentBeforeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z+92
	DD	00H
	DD	imagerel ?writeCommentBeforeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z+134
	DD	01H
	DD	imagerel ?writeCommentBeforeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z+161
	DD	00H
	DD	imagerel ?writeCommentBeforeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z+173
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0??writeCommentBeforeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??writeCommentBeforeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?writeCommentBeforeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z DD 021a11H
	DD	0150111H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?writeCommentBeforeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?writeCommentBeforeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z DD 019930522H
	DD	02H
	DD	imagerel $stateUnwindMap$?writeCommentBeforeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z
	DD	00H
	DD	00H
	DD	05H
	DD	imagerel $ip2state$?writeCommentBeforeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z
	DD	070H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?writeCommentBeforeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??writeCommentBeforeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA
	DD	00H
	DD	imagerel ?dtor$1@?0??writeCommentBeforeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT ?writeCommentBeforeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z
_TEXT	SEGMENT
$T68573 = 32
$T68574 = 72
$T68582 = 112
tv90 = 120
tv87 = 128
tv91 = 136
tv89 = 144
this$ = 176
root$ = 184
?writeCommentBeforeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z PROC ; Json::StyledWriter::writeCommentBeforeValue, COMDAT

; 485  : {

$LN6:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 168				; 000000a8H
	mov	QWORD PTR $T68582[rsp], -2

; 486  :    if ( !root.hasComment( commentBefore ) )

	xor	edx, edx
	mov	rcx, QWORD PTR root$[rsp]
	call	?hasComment@Value@Json@@QEBA_NW4CommentPlacement@2@@Z ; Json::Value::hasComment
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN1@writeComme@2

; 487  :       return;

	jmp	$LN2@writeComme@2
$LN1@writeComme@2:

; 488  :    document_ += normalizeEOL( root.getComment( commentBefore ) );

	xor	r8d, r8d
	lea	rdx, QWORD PTR $T68573[rsp]
	mov	rcx, QWORD PTR root$[rsp]
	call	?getComment@Value@Json@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4CommentPlacement@2@@Z ; Json::Value::getComment
	mov	QWORD PTR tv90[rsp], rax
	mov	rax, QWORD PTR tv90[rsp]
	mov	QWORD PTR tv87[rsp], rax
	mov	rdx, QWORD PTR tv87[rsp]
	lea	rcx, QWORD PTR $T68574[rsp]
	call	?normalizeEOL@StyledWriter@Json@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV34@@Z ; Json::StyledWriter::normalizeEOL
	mov	QWORD PTR tv91[rsp], rax
	mov	rax, QWORD PTR tv91[rsp]
	mov	QWORD PTR tv89[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 56					; 00000038H
	mov	rdx, QWORD PTR tv89[rsp]
	call	QWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z
	npad	1
	lea	rcx, QWORD PTR $T68574[rsp]
	call	QWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	npad	1
	lea	rcx, QWORD PTR $T68573[rsp]
	call	QWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ

; 489  :    document_ += "\n";

	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 56					; 00000038H
	lea	rdx, OFFSET FLAT:??_C@_01EEMJAFIK@?6?$AA@
	call	QWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@PEBD@Z
$LN2@writeComme@2:

; 490  : }

	add	rsp, 168				; 000000a8H
	ret	0
?writeCommentBeforeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z ENDP ; Json::StyledWriter::writeCommentBeforeValue
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T68573 = 32
$T68574 = 72
$T68582 = 112
tv90 = 120
tv87 = 128
tv91 = 136
tv89 = 144
this$ = 176
root$ = 184
?dtor$0@?0??writeCommentBeforeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA PROC ; `Json::StyledWriter::writeCommentBeforeValue'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	lea	rcx, QWORD PTR $T68573[rbp]
	call	QWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0??writeCommentBeforeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA ENDP ; `Json::StyledWriter::writeCommentBeforeValue'::`1'::dtor$0
; Function compile flags: /Odtp
$T68573 = 32
$T68574 = 72
$T68582 = 112
tv90 = 120
tv87 = 128
tv91 = 136
tv89 = 144
this$ = 176
root$ = 184
?dtor$1@?0??writeCommentBeforeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA PROC ; `Json::StyledWriter::writeCommentBeforeValue'::`1'::dtor$1
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	lea	rcx, QWORD PTR $T68574[rbp]
	call	QWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$1@?0??writeCommentBeforeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA ENDP ; `Json::StyledWriter::writeCommentBeforeValue'::`1'::dtor$1
text$x	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z ; Json::valueToQuotedString
;	COMDAT pdata
pdata	SEGMENT
$pdata$?valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z DD imagerel $LN28
	DD	imagerel $LN28+1181
	DD	imagerel $unwind$?valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA DD imagerel ?dtor$0@?0??valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA
	DD	imagerel ?dtor$0@?0??valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA+28
	DD	imagerel $unwind$?dtor$0@?0??valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0??valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA DD imagerel ?dtor$1@?0??valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA
	DD	imagerel ?dtor$1@?0??valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA+28
	DD	imagerel $unwind$?dtor$1@?0??valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$2@?0??valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA DD imagerel ?dtor$2@?0??valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA
	DD	imagerel ?dtor$2@?0??valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA+48
	DD	imagerel $unwind$?dtor$2@?0??valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$3@?0??valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA DD imagerel ?dtor$3@?0??valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA
	DD	imagerel ?dtor$3@?0??valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA+25
	DD	imagerel $unwind$?dtor$3@?0??valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$4@?0??valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA DD imagerel ?dtor$4@?0??valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA
	DD	imagerel ?dtor$4@?0??valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA+25
	DD	imagerel $unwind$?dtor$4@?0??valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$5@?0??valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA DD imagerel ?dtor$5@?0??valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA
	DD	imagerel ?dtor$5@?0??valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA+28
	DD	imagerel $unwind$?dtor$5@?0??valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z DD imagerel ?valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z
	DD	0ffffffffH
	DD	imagerel ?valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z+160
	DD	01H
	DD	imagerel ?valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z+214
	DD	02H
	DD	imagerel ?valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z+260
	DD	01H
	DD	imagerel ?valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z+275
	DD	00H
	DD	imagerel ?valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z+302
	DD	0ffffffffH
	DD	imagerel ?valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z+349
	DD	03H
	DD	imagerel ?valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z+506
	DD	00H
	DD	imagerel ?valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z+508
	DD	03H
	DD	imagerel ?valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z+716
	DD	04H
	DD	imagerel ?valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z+889
	DD	05H
	DD	imagerel ?valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z+909
	DD	04H
	DD	imagerel ?valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z+924
	DD	03H
	DD	imagerel ?valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z+1015
	DD	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$5@?0??valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$4@?0??valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$3@?0??valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$2@?0??valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0??valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z DD 053219H
	DD	0460114H
	DD	0600c700dH
	DD	0300bH
	DD	imagerel __GSHandlerCheck_EH
	DD	imagerel $cppxdata$?valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z
	DD	022aH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z DD 019930522H
	DD	06H
	DD	imagerel $stateUnwindMap$?valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z
	DD	00H
	DD	00H
	DD	0eH
	DD	imagerel $ip2state$?valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z
	DD	01e8H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z DD 0ffffffffH
	DD	imagerel ?dtor$2@?0??valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA
	DD	00H
	DD	imagerel ?dtor$0@?0??valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA
	DD	01H
	DD	imagerel ?dtor$1@?0??valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA
	DD	00H
	DD	imagerel ?dtor$3@?0??valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA
	DD	03H
	DD	imagerel ?dtor$4@?0??valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA
	DD	04H
	DD	imagerel ?dtor$5@?0??valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT ?valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z
_TEXT	SEGMENT
maxsize$ = 32
result$ = 48
c$50168 = 88
oss$50192 = 96
$T68605 = 336
$T68606 = 376
$T68607 = 416
$T68608 = 432
$T68609 = 440
$T68618 = 480
$T68629 = 488
tv220 = 496
tv207 = 504
tv221 = 512
tv209 = 520
tv137 = 528
tv157 = 536
tv217 = 544
__$ArrayPad$ = 552
__$ReturnUdt$ = 592
value$ = 600
?valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z PROC ; Json::valueToQuotedString, COMDAT

; 112  : {

$LN28:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbx
	push	rsi
	push	rdi
	sub	rsp, 560				; 00000230H
	mov	QWORD PTR $T68629[rsp], -2
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
	mov	DWORD PTR $T68618[rsp], 0

; 113  :    // Not sure how to handle unicode...
; 114  :    if (strpbrk(value, "\"\\\b\f\n\r\t") == NULL && !containsControlCharacter( value ))

	lea	rdx, OFFSET FLAT:??_C@_07FKPPGBGM@?$CC?2?$AI?$AM?6?$AN?7?$AA@
	mov	rcx, QWORD PTR value$[rsp]
	call	QWORD PTR __imp_strpbrk
	test	rax, rax
	jne	$LN16@valueToQuo
	mov	rcx, QWORD PTR value$[rsp]
	call	?containsControlCharacter@Json@@YA_NPEBD@Z ; Json::containsControlCharacter
	movzx	eax, al
	test	eax, eax
	jne	$LN16@valueToQuo

; 115  :       return std::string("\"") + value + "\"";

	lea	rdx, OFFSET FLAT:??_C@_01BJJEKLCA@?$CC?$AA@
	lea	rcx, QWORD PTR $T68605[rsp]
	call	QWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@PEBD@Z
	mov	QWORD PTR tv220[rsp], rax
	mov	rax, QWORD PTR tv220[rsp]
	mov	QWORD PTR tv207[rsp], rax
	mov	r8, QWORD PTR value$[rsp]
	mov	rdx, QWORD PTR tv207[rsp]
	lea	rcx, QWORD PTR $T68606[rsp]
	call	QWORD PTR __imp_??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@PEBD@Z
	mov	QWORD PTR tv221[rsp], rax
	mov	rax, QWORD PTR tv221[rsp]
	mov	QWORD PTR tv209[rsp], rax
	lea	r8, OFFSET FLAT:??_C@_01BJJEKLCA@?$CC?$AA@
	mov	rdx, QWORD PTR tv209[rsp]
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	QWORD PTR __imp_??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@PEBD@Z
	mov	eax, DWORD PTR $T68618[rsp]
	or	eax, 1
	mov	DWORD PTR $T68618[rsp], eax
	lea	rcx, QWORD PTR $T68606[rsp]
	call	QWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	npad	1
	lea	rcx, QWORD PTR $T68605[rsp]
	call	QWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	jmp	$LN17@valueToQuo
$LN16@valueToQuo:

; 116  :    // We have to walk value and escape any special characters.
; 117  :    // Appending to std::string is not efficient, but this should be rare.
; 118  :    // (Note: forward slashes are *not* rare, but I am not escaping them.)
; 119  :    unsigned maxsize = strlen(value)*2 + 3; // allescaped+quotes+NULL

	xor	eax, eax
	mov	rcx, -1
	mov	rdi, QWORD PTR value$[rsp]
	repne scasb
	not	rcx
	sub	rcx, 1
	lea	rax, QWORD PTR [rcx+rcx+3]
	mov	DWORD PTR maxsize$[rsp], eax

; 120  :    std::string result;

	lea	rcx, QWORD PTR result$[rsp]
	call	QWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	npad	1

; 121  :    result.reserve(maxsize); // to avoid lots of mallocs

	mov	edx, DWORD PTR maxsize$[rsp]
	lea	rcx, QWORD PTR result$[rsp]
	call	QWORD PTR __imp_?reserve@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K@Z

; 122  :    result += "\"";

	lea	rdx, OFFSET FLAT:??_C@_01BJJEKLCA@?$CC?$AA@
	lea	rcx, QWORD PTR result$[rsp]
	call	QWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@PEBD@Z

; 123  :    for (const char* c=value; *c != 0; ++c)

	mov	rax, QWORD PTR value$[rsp]
	mov	QWORD PTR c$50168[rsp], rax
	jmp	SHORT $LN15@valueToQuo
$LN14@valueToQuo:
	mov	rax, QWORD PTR c$50168[rsp]
	add	rax, 1
	mov	QWORD PTR c$50168[rsp], rax
$LN15@valueToQuo:
	mov	rax, QWORD PTR c$50168[rsp]
	movsx	eax, BYTE PTR [rax]
	test	eax, eax
	je	$LN13@valueToQuo

; 124  :    {
; 125  :       switch(*c)

	mov	rax, QWORD PTR c$50168[rsp]
	movsx	eax, BYTE PTR [rax]
	mov	DWORD PTR tv137[rsp], eax
	mov	eax, DWORD PTR tv137[rsp]
	sub	eax, 8
	mov	DWORD PTR tv137[rsp], eax
	cmp	DWORD PTR tv137[rsp], 84		; 00000054H
	ja	$LN3@valueToQuo
	movsxd	rax, DWORD PTR tv137[rsp]
	lea	rcx, OFFSET FLAT:__ImageBase
	movzx	eax, BYTE PTR $LN26@valueToQuo[rcx+rax]
	mov	eax, DWORD PTR $LN27@valueToQuo[rcx+rax*4]
	add	rax, rcx
	jmp	rax
$LN10@valueToQuo:

; 126  :       {
; 127  :          case '\"':
; 128  :             result += "\\\"";

	lea	rdx, OFFSET FLAT:??_C@_02MCKKLHBJ@?2?$CC?$AA@
	lea	rcx, QWORD PTR result$[rsp]
	call	QWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@PEBD@Z

; 129  :             break;

	jmp	$LN11@valueToQuo
$LN9@valueToQuo:

; 130  :          case '\\':
; 131  :             result += "\\\\";

	lea	rdx, OFFSET FLAT:??_C@_02HDBGODGB@?2?2?$AA@
	lea	rcx, QWORD PTR result$[rsp]
	call	QWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@PEBD@Z

; 132  :             break;

	jmp	$LN11@valueToQuo
$LN8@valueToQuo:

; 133  :          case '\b':
; 134  :             result += "\\b";

	lea	rdx, OFFSET FLAT:??_C@_02DCNDPIBM@?2b?$AA@
	lea	rcx, QWORD PTR result$[rsp]
	call	QWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@PEBD@Z

; 135  :             break;

	jmp	$LN11@valueToQuo
$LN7@valueToQuo:

; 136  :          case '\f':
; 137  :             result += "\\f";

	lea	rdx, OFFSET FLAT:??_C@_02FGLPDNBI@?2f?$AA@
	lea	rcx, QWORD PTR result$[rsp]
	call	QWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@PEBD@Z

; 138  :             break;

	jmp	$LN11@valueToQuo
$LN6@valueToQuo:

; 139  :          case '\n':
; 140  :             result += "\\n";

	lea	rdx, OFFSET FLAT:??_C@_02JOGGLHBA@?2n?$AA@
	lea	rcx, QWORD PTR result$[rsp]
	call	QWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@PEBD@Z

; 141  :             break;

	jmp	$LN11@valueToQuo
$LN5@valueToQuo:

; 142  :          case '\r':
; 143  :             result += "\\r";

	lea	rdx, OFFSET FLAT:??_C@_02HIBBOKEN@?2r?$AA@
	lea	rcx, QWORD PTR result$[rsp]
	call	QWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@PEBD@Z

; 144  :             break;

	jmp	$LN11@valueToQuo
$LN4@valueToQuo:

; 145  :          case '\t':
; 146  :             result += "\\t";

	lea	rdx, OFFSET FLAT:??_C@_02COELENML@?2t?$AA@
	lea	rcx, QWORD PTR result$[rsp]
	call	QWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@PEBD@Z

; 147  :             break;

	jmp	$LN11@valueToQuo
$LN3@valueToQuo:

; 148  :          //case '/':
; 149  :             // Even though \/ is considered a legal escape in JSON, a bare
; 150  :             // slash is also legal, so I see no reason to escape it.
; 151  :             // (I hope I am not misunderstanding something.
; 152  :             // blep notes: actually escaping \/ may be useful in javascript to avoid </ 
; 153  :             // sequence.
; 154  :             // Should add a flag to allow this compatibility mode and prevent this 
; 155  :             // sequence from occurring.
; 156  :          default:
; 157  :             if ( isControlCharacter( *c ) )

	mov	rax, QWORD PTR c$50168[rsp]
	movzx	ecx, BYTE PTR [rax]
	call	?isControlCharacter@Json@@YA_ND@Z	; Json::isControlCharacter
	movzx	eax, al
	test	eax, eax
	je	$LN2@valueToQuo

; 158  :             {
; 159  :                std::ostringstream oss;

	mov	r8d, 1
	mov	edx, 2
	lea	rcx, QWORD PTR oss$50192[rsp]
	call	QWORD PTR __imp_??0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z
	npad	1

; 160  :                oss << "\\u" << std::hex << std::uppercase << std::setfill('0') << std::setw(4) << static_cast<int>(*c);

	mov	rax, QWORD PTR c$50168[rsp]
	movsx	esi, BYTE PTR [rax]
	mov	edx, 4
	lea	rcx, QWORD PTR $T68607[rsp]
	call	QWORD PTR __imp_?setw@std@@YA?AU?$_Smanip@_J@1@_J@Z
	mov	rbx, rax
	mov	dl, 48					; 00000030H
	lea	rcx, QWORD PTR $T68608[rsp]
	call	??$setfill@D@std@@YA?AU?$_Fillobj@D@0@D@Z ; std::setfill<char>
	mov	rdi, rax
	lea	rdx, OFFSET FLAT:??_C@_02DHFAHMIK@?2u?$AA@
	lea	rcx, QWORD PTR oss$50192[rsp]
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	lea	rdx, OFFSET FLAT:?hex@std@@YAAEAVios_base@1@AEAV21@@Z ; std::hex
	mov	rcx, rax
	call	QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAVios_base@1@AEAV21@@Z@Z
	lea	rdx, OFFSET FLAT:?uppercase@std@@YAAEAVios_base@1@AEAV21@@Z ; std::uppercase
	mov	rcx, rax
	call	QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAVios_base@1@AEAV21@@Z@Z
	mov	rdx, rdi
	mov	rcx, rax
	call	??$?6DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBU?$_Fillobj@D@0@@Z ; std::operator<<<char,std::char_traits<char> >
	mov	rdx, rbx
	mov	rcx, rax
	call	??$?6DU?$char_traits@D@std@@_J@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBU?$_Smanip@_J@0@@Z ; std::operator<<<char,std::char_traits<char>,__int64>
	mov	edx, esi
	mov	rcx, rax
	call	QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@H@Z

; 161  :                result += oss.str();

	lea	rdx, QWORD PTR $T68609[rsp]
	lea	rcx, QWORD PTR oss$50192[rsp]
	call	QWORD PTR __imp_?str@?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
	mov	QWORD PTR tv157[rsp], rax
	mov	rax, QWORD PTR tv157[rsp]
	mov	QWORD PTR tv217[rsp], rax
	mov	rdx, QWORD PTR tv217[rsp]
	lea	rcx, QWORD PTR result$[rsp]
	call	QWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z
	npad	1
	lea	rcx, QWORD PTR $T68609[rsp]
	call	QWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	npad	1

; 162  :             }

	lea	rcx, QWORD PTR oss$50192[rsp]
	call	QWORD PTR __imp_??_D?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ

; 163  :             else

	jmp	SHORT $LN11@valueToQuo
$LN2@valueToQuo:

; 164  :             {
; 165  :                result += *c;

	mov	rax, QWORD PTR c$50168[rsp]
	movzx	edx, BYTE PTR [rax]
	lea	rcx, QWORD PTR result$[rsp]
	call	QWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@D@Z
$LN11@valueToQuo:

; 166  :             }
; 167  :             break;
; 168  :       }
; 169  :    }

	jmp	$LN14@valueToQuo
$LN13@valueToQuo:

; 170  :    result += "\"";

	lea	rdx, OFFSET FLAT:??_C@_01BJJEKLCA@?$CC?$AA@
	lea	rcx, QWORD PTR result$[rsp]
	call	QWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@PEBD@Z

; 171  :    return result;

	lea	rdx, QWORD PTR result$[rsp]
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	QWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z
	mov	eax, DWORD PTR $T68618[rsp]
	or	eax, 1
	mov	DWORD PTR $T68618[rsp], eax
	lea	rcx, QWORD PTR result$[rsp]
	call	QWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
$LN17@valueToQuo:

; 172  : }

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 560				; 00000230H
	pop	rdi
	pop	rsi
	pop	rbx
	ret	0
	int	3
	npad	2
$LN27@valueToQuo:
	DD	$LN8@valueToQuo
	DD	$LN4@valueToQuo
	DD	$LN6@valueToQuo
	DD	$LN7@valueToQuo
	DD	$LN5@valueToQuo
	DD	$LN10@valueToQuo
	DD	$LN9@valueToQuo
	DD	$LN3@valueToQuo
$LN26@valueToQuo:
	DB	0
	DB	1
	DB	2
	DB	7
	DB	3
	DB	4
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	5
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	6
?valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z ENDP ; Json::valueToQuotedString
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
maxsize$ = 32
result$ = 48
c$50168 = 88
oss$50192 = 96
$T68605 = 336
$T68606 = 376
$T68607 = 416
$T68608 = 432
$T68609 = 440
$T68618 = 480
$T68629 = 488
tv220 = 496
tv207 = 504
tv221 = 512
tv209 = 520
tv137 = 528
tv157 = 536
tv217 = 544
__$ArrayPad$ = 552
__$ReturnUdt$ = 592
value$ = 600
?dtor$0@?0??valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA PROC ; `Json::valueToQuotedString'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	lea	rcx, QWORD PTR $T68605[rbp]
	call	QWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0??valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA ENDP ; `Json::valueToQuotedString'::`1'::dtor$0
; Function compile flags: /Odtp
maxsize$ = 32
result$ = 48
c$50168 = 88
oss$50192 = 96
$T68605 = 336
$T68606 = 376
$T68607 = 416
$T68608 = 432
$T68609 = 440
$T68618 = 480
$T68629 = 488
tv220 = 496
tv207 = 504
tv221 = 512
tv209 = 520
tv137 = 528
tv157 = 536
tv217 = 544
__$ArrayPad$ = 552
__$ReturnUdt$ = 592
value$ = 600
?dtor$1@?0??valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA PROC ; `Json::valueToQuotedString'::`1'::dtor$1
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	lea	rcx, QWORD PTR $T68606[rbp]
	call	QWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$1@?0??valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA ENDP ; `Json::valueToQuotedString'::`1'::dtor$1
; Function compile flags: /Odtp
maxsize$ = 32
result$ = 48
c$50168 = 88
oss$50192 = 96
$T68605 = 336
$T68606 = 376
$T68607 = 416
$T68608 = 432
$T68609 = 440
$T68618 = 480
$T68629 = 488
tv220 = 496
tv207 = 504
tv221 = 512
tv209 = 520
tv137 = 528
tv157 = 536
tv217 = 544
__$ArrayPad$ = 552
__$ReturnUdt$ = 592
value$ = 600
?dtor$2@?0??valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA PROC ; `Json::valueToQuotedString'::`1'::dtor$2
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	eax, DWORD PTR $T68618[rbp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN22@dtor$2
	and	DWORD PTR $T68618[rbp], -2
	mov	rcx, QWORD PTR __$ReturnUdt$[rbp]
	call	QWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
$LN22@dtor$2:
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$2@?0??valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA ENDP ; `Json::valueToQuotedString'::`1'::dtor$2
; Function compile flags: /Odtp
maxsize$ = 32
result$ = 48
c$50168 = 88
oss$50192 = 96
$T68605 = 336
$T68606 = 376
$T68607 = 416
$T68608 = 432
$T68609 = 440
$T68618 = 480
$T68629 = 488
tv220 = 496
tv207 = 504
tv221 = 512
tv209 = 520
tv137 = 528
tv157 = 536
tv217 = 544
__$ArrayPad$ = 552
__$ReturnUdt$ = 592
value$ = 600
?dtor$3@?0??valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA PROC ; `Json::valueToQuotedString'::`1'::dtor$3
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	lea	rcx, QWORD PTR result$[rbp]
	call	QWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$3@?0??valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA ENDP ; `Json::valueToQuotedString'::`1'::dtor$3
; Function compile flags: /Odtp
maxsize$ = 32
result$ = 48
c$50168 = 88
oss$50192 = 96
$T68605 = 336
$T68606 = 376
$T68607 = 416
$T68608 = 432
$T68609 = 440
$T68618 = 480
$T68629 = 488
tv220 = 496
tv207 = 504
tv221 = 512
tv209 = 520
tv137 = 528
tv157 = 536
tv217 = 544
__$ArrayPad$ = 552
__$ReturnUdt$ = 592
value$ = 600
?dtor$4@?0??valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA PROC ; `Json::valueToQuotedString'::`1'::dtor$4
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	lea	rcx, QWORD PTR oss$50192[rbp]
	call	QWORD PTR __imp_??_D?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$4@?0??valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA ENDP ; `Json::valueToQuotedString'::`1'::dtor$4
; Function compile flags: /Odtp
maxsize$ = 32
result$ = 48
c$50168 = 88
oss$50192 = 96
$T68605 = 336
$T68606 = 376
$T68607 = 416
$T68608 = 432
$T68609 = 440
$T68618 = 480
$T68629 = 488
tv220 = 496
tv207 = 504
tv221 = 512
tv209 = 520
tv137 = 528
tv157 = 536
tv217 = 544
__$ArrayPad$ = 552
__$ReturnUdt$ = 592
value$ = 600
?dtor$5@?0??valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA PROC ; `Json::valueToQuotedString'::`1'::dtor$5
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	lea	rcx, QWORD PTR $T68609[rbp]
	call	QWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$5@?0??valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z@4HA ENDP ; `Json::valueToQuotedString'::`1'::dtor$5
;	COMDAT pdata
; File d:\program files (x86)\microsoft visual studio 9.0\vc\include\vector
pdata	SEGMENT
$pdata$?_Make_iter@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBA?AV?$_Vector_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@Z DD imagerel $LN3
	DD	imagerel $LN3+53
	DD	imagerel $unwind$?_Make_iter@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBA?AV?$_Vector_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Make_iter@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBA?AV?$_Vector_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@Z DD 011301H
	DD	04213H
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT ?_Make_iter@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBA?AV?$_Vector_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@Z
_TEXT	SEGMENT
this$ = 48
__$ReturnUdt$ = 56
_Where$ = 64
?_Make_iter@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBA?AV?$_Vector_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@Z PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Make_iter, COMDAT

; 660  : 		{	// make iterator from const_iterator

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 661  : 		return (iterator(_Where._Myptr, this));

	mov	r8, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR _Where$[rsp]
	mov	rdx, QWORD PTR [rdx+8]
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	??0?$_Vector_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PEBV_Container_base_aux@1@@Z ; std::_Vector_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Vector_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 662  : 		}

	add	rsp, 40					; 00000028H
	ret	0
?_Make_iter@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBA?AV?$_Vector_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@Z ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Make_iter
_TEXT	ENDS
PUBLIC	$T69293
PUBLIC	$T69292
;	COMDAT pdata
pdata	SEGMENT
$pdata$?erase@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA?AV?$_Vector_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@0@Z DD imagerel $LN4
	DD	imagerel $LN4+248
	DD	imagerel $unwind$?erase@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA?AV?$_Vector_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@0@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?erase@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA?AV?$_Vector_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@0@Z DD 031a01H
	DD	07016e21aH
	DD	06015H
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT ?erase@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA?AV?$_Vector_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@0@Z
_TEXT	SEGMENT
_First$ = 32
_Last$ = 48
_Ptr$53651 = 64
$T69292 = 80
$T69293 = 96
this$ = 144
__$ReturnUdt$ = 152
_First_arg$ = 160
_Last_arg$ = 168
?erase@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA?AV?$_Vector_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@0@Z PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::erase, COMDAT

; 1033 : 		{	// erase [_First, _Last)

$LN4:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 120				; 00000078H

; 1034 : 		iterator _First = _Make_iter(_First_arg);

	lea	rdi, QWORD PTR $T69292[rsp]
	mov	rsi, QWORD PTR _First_arg$[rsp]
	mov	ecx, 16
	rep movsb
	lea	r8, QWORD PTR $T69292[rsp]
	lea	rdx, QWORD PTR _First$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Make_iter@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBA?AV?$_Vector_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Make_iter

; 1035 : 		iterator _Last = _Make_iter(_Last_arg);

	lea	rdi, QWORD PTR $T69293[rsp]
	mov	rsi, QWORD PTR _Last_arg$[rsp]
	mov	ecx, 16
	rep movsb
	lea	r8, QWORD PTR $T69293[rsp]
	lea	rdx, QWORD PTR _Last$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Make_iter@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBA?AV?$_Vector_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Make_iter

; 1036 : 
; 1037 : 		if (_First != _Last)

	lea	rdx, QWORD PTR _Last$[rsp]
	lea	rcx, QWORD PTR _First$[rsp]
	call	??9?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBA_NAEBV01@@Z ; std::_Vector_const_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator!=
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN1@erase@2

; 1038 : 			{	// worth doing, copy down over hole
; 1039 : 
; 1040 :  #if _HAS_ITERATOR_DEBUGGING
; 1041 : 			if (_Last < _First || _First._Mycont != this
; 1042 : 				|| _First._Myptr < _Myfirst || _Mylast < _Last._Myptr)
; 1043 : 				_DEBUG_ERROR("vector erase iterator outside range");
; 1044 : 			pointer _Ptr = _STDEXT unchecked_copy(_VEC_ITER_BASE(_Last), _Mylast,
; 1045 : 				_VEC_ITER_BASE(_First));
; 1046 : 			_Orphan_range(_First._Myptr, _Mylast);
; 1047 : 
; 1048 :  #else /* _HAS_ITERATOR_DEBUGGING */
; 1049 : 			pointer _Ptr = _STDEXT unchecked_copy(_VEC_ITER_BASE(_Last), _Mylast,
; 1050 : 				_VEC_ITER_BASE(_First));

	mov	r8, QWORD PTR _First$[rsp+8]
	mov	rdx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rdx+32]
	mov	rcx, QWORD PTR _Last$[rsp+8]
	call	??$unchecked_copy@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAV12@@stdext@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAV12@00@Z ; stdext::unchecked_copy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > * __ptr64,std::basic_string<char,std::char_traits<char>,std::allocator<char> > * __ptr64>
	mov	QWORD PTR _Ptr$53651[rsp], rax

; 1051 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1052 : 
; 1053 : 			_Destroy(_Ptr, _Mylast);

	mov	r8, QWORD PTR this$[rsp]
	mov	r8, QWORD PTR [r8+32]
	mov	rdx, QWORD PTR _Ptr$53651[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Destroy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@IEAAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Destroy

; 1054 : 			_Mylast = _Ptr;

	mov	rdx, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR _Ptr$53651[rsp]
	mov	QWORD PTR [rdx+32], rax
$LN1@erase@2:

; 1055 : 			}
; 1056 : #if _HAS_ITERATOR_DEBUGGING
; 1057 :         return (iterator(_First._Myptr, this));
; 1058 : #else
; 1059 : 		return (_First);

	lea	rsi, QWORD PTR _First$[rsp]
	mov	rdi, QWORD PTR __$ReturnUdt$[rsp]
	mov	ecx, 16
	rep movsb
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 1060 : #endif
; 1061 : 		}

	add	rsp, 120				; 00000078H
	pop	rdi
	pop	rsi
	ret	0
?erase@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA?AV?$_Vector_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@0@Z ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::erase
_TEXT	ENDS
PUBLIC	$T69306
PUBLIC	$T69307
PUBLIC	$T69308
PUBLIC	$T69309
;	COMDAT pdata
pdata	SEGMENT
$pdata$?clear@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+204
	DD	imagerel $unwind$?clear@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAXXZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?clear@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAXXZ DD 040e01H
	DD	017010eH
	DD	060067007H
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT ?clear@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAXXZ
_TEXT	SEGMENT
$T69301 = 32
$T69302 = 48
$T69303 = 64
$T69304 = 80
$T69305 = 96
$T69306 = 112
$T69307 = 128
$T69308 = 144
$T69309 = 160
this$ = 208
?clear@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAXXZ PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::clear, COMDAT

; 1064 : 		{	// erase all

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 184				; 000000b8H

; 1065 : 		erase(begin(), end());

	lea	rdx, QWORD PTR $T69302[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?end@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA?AV?$_Vector_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::end
	lea	rdi, QWORD PTR $T69309[rsp]
	mov	rsi, rax
	mov	ecx, 16
	rep movsb
	lea	rdi, QWORD PTR $T69301[rsp]
	lea	rsi, QWORD PTR $T69309[rsp]
	mov	ecx, 16
	rep movsb
	lea	rdx, QWORD PTR $T69304[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?begin@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA?AV?$_Vector_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::begin
	lea	rdi, QWORD PTR $T69308[rsp]
	mov	rsi, rax
	mov	ecx, 16
	rep movsb
	lea	rdi, QWORD PTR $T69303[rsp]
	lea	rsi, QWORD PTR $T69308[rsp]
	mov	ecx, 16
	rep movsb
	lea	rdi, QWORD PTR $T69307[rsp]
	lea	rsi, QWORD PTR $T69301[rsp]
	mov	ecx, 16
	rep movsb
	lea	rdi, QWORD PTR $T69306[rsp]
	lea	rsi, QWORD PTR $T69303[rsp]
	mov	ecx, 16
	rep movsb
	lea	r9, QWORD PTR $T69307[rsp]
	lea	r8, QWORD PTR $T69306[rsp]
	lea	rdx, QWORD PTR $T69305[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?erase@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA?AV?$_Vector_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@V?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@0@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::erase

; 1066 : 		}

	add	rsp, 184				; 000000b8H
	pop	rdi
	pop	rsi
	ret	0
?clear@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAXXZ ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::clear
PUBLIC	?pushValue@StyledWriter@Json@@AEAAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; Json::StyledWriter::pushValue
;	COMDAT pdata
; File d:\adaptivecloth\jsoncpp\src\lib_json\json_writer.cpp
pdata	SEGMENT
$pdata$?pushValue@StyledWriter@Json@@AEAAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD imagerel $LN5
	DD	imagerel $LN5+76
	DD	imagerel $unwind$?pushValue@StyledWriter@Json@@AEAAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?pushValue@StyledWriter@Json@@AEAAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 010e01H
	DD	0420eH
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT ?pushValue@StyledWriter@Json@@AEAAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
this$ = 48
value$ = 56
?pushValue@StyledWriter@Json@@AEAAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; Json::StyledWriter::pushValue, COMDAT

; 437  : {

$LN5:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 438  :    if ( addChildValues_ )

	mov	rax, QWORD PTR this$[rsp]
	movzx	eax, BYTE PTR [rax+144]
	test	eax, eax
	je	SHORT $LN2@pushValue

; 439  :       childValues_.push_back( value );

	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 8
	mov	rdx, QWORD PTR value$[rsp]
	call	?push_back@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::push_back

; 440  :    else

	jmp	SHORT $LN1@pushValue
$LN2@pushValue:

; 441  :       document_ += value;

	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 56					; 00000038H
	mov	rdx, QWORD PTR value$[rsp]
	call	QWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z
$LN1@pushValue:

; 442  : }

	add	rsp, 40					; 00000028H
	ret	0
?pushValue@StyledWriter@Json@@AEAAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; Json::StyledWriter::pushValue
PUBLIC	?writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z ; Json::StyledWriter::writeValue
PUBLIC	?isMultineArray@StyledWriter@Json@@AEAA_NAEBVValue@2@@Z ; Json::StyledWriter::isMultineArray
PUBLIC	?writeArrayValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z ; Json::StyledWriter::writeArrayValue
;	COMDAT pdata
pdata	SEGMENT
$pdata$?writeArrayValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z DD imagerel $LN21
	DD	imagerel $LN21+735
	DD	imagerel $unwind$?writeArrayValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??writeArrayValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA DD imagerel ?dtor$0@?0??writeArrayValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA
	DD	imagerel ?dtor$0@?0??writeArrayValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA+25
	DD	imagerel $unwind$?dtor$0@?0??writeArrayValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0??writeArrayValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA DD imagerel ?dtor$1@?0??writeArrayValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA
	DD	imagerel ?dtor$1@?0??writeArrayValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA+25
	DD	imagerel $unwind$?dtor$1@?0??writeArrayValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$2@?0??writeArrayValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA DD imagerel ?dtor$2@?0??writeArrayValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA
	DD	imagerel ?dtor$2@?0??writeArrayValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA+28
	DD	imagerel $unwind$?dtor$2@?0??writeArrayValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?writeArrayValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z DD imagerel ?writeArrayValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z
	DD	0ffffffffH
	DD	imagerel ?writeArrayValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z+72
	DD	00H
	DD	imagerel ?writeArrayValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z+91
	DD	0ffffffffH
	DD	imagerel ?writeArrayValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z+164
	DD	01H
	DD	imagerel ?writeArrayValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z+183
	DD	0ffffffffH
	DD	imagerel ?writeArrayValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z+529
	DD	02H
	DD	imagerel ?writeArrayValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z+551
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$2@?0??writeArrayValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0??writeArrayValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??writeArrayValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?writeArrayValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z DD 021d11H
	DD	01b0111H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?writeArrayValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?writeArrayValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z DD 019930522H
	DD	03H
	DD	imagerel $stateUnwindMap$?writeArrayValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z
	DD	00H
	DD	00H
	DD	07H
	DD	imagerel $ip2state$?writeArrayValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z
	DD	0b8H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?writeArrayValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??writeArrayValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$1@?0??writeArrayValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$2@?0??writeArrayValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT ?writeArrayValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z
_TEXT	SEGMENT
size$ = 32
isArrayMultiLine$50626 = 36
hasChildValue$50629 = 37
index$50630 = 40
childValue$50634 = 48
index$50642 = 56
$T69750 = 64
$T69751 = 104
$T69754 = 144
$T69764 = 184
tv90 = 192
this$ = 224
value$ = 232
?writeArrayValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z PROC ; Json::StyledWriter::writeArrayValue, COMDAT

; 353  : {

$LN21:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 216				; 000000d8H
	mov	QWORD PTR $T69764[rsp], -2

; 354  :    unsigned size = value.size();

	mov	rcx, QWORD PTR value$[rsp]
	call	?size@Value@Json@@QEBAIXZ		; Json::Value::size
	mov	DWORD PTR size$[rsp], eax

; 355  :    if ( size == 0 )

	cmp	DWORD PTR size$[rsp], 0
	jne	SHORT $LN13@writeArray

; 356  :       pushValue( "[]" );

	lea	rdx, OFFSET FLAT:??_C@_02GPECMEKF@?$FL?$FN?$AA@
	lea	rcx, QWORD PTR $T69750[rsp]
	call	QWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@PEBD@Z
	npad	1
	lea	rdx, QWORD PTR $T69750[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?pushValue@StyledWriter@Json@@AEAAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; Json::StyledWriter::pushValue
	npad	1
	lea	rcx, QWORD PTR $T69750[rsp]
	call	QWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ

; 357  :    else

	jmp	$LN12@writeArray
$LN13@writeArray:

; 358  :    {
; 359  :       bool isArrayMultiLine = isMultineArray( value );

	mov	rdx, QWORD PTR value$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?isMultineArray@StyledWriter@Json@@AEAA_NAEBVValue@2@@Z ; Json::StyledWriter::isMultineArray
	mov	BYTE PTR isArrayMultiLine$50626[rsp], al

; 360  :       if ( isArrayMultiLine )

	movzx	eax, BYTE PTR isArrayMultiLine$50626[rsp]
	test	eax, eax
	je	$LN11@writeArray

; 361  :       {
; 362  :          writeWithIndent( "[" );

	lea	rdx, OFFSET FLAT:??_C@_01OHGJGJJP@?$FL?$AA@
	lea	rcx, QWORD PTR $T69751[rsp]
	call	QWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@PEBD@Z
	npad	1
	lea	rdx, QWORD PTR $T69751[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?writeWithIndent@StyledWriter@Json@@AEAAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; Json::StyledWriter::writeWithIndent
	npad	1
	lea	rcx, QWORD PTR $T69751[rsp]
	call	QWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ

; 363  :          indent();

	mov	rcx, QWORD PTR this$[rsp]
	call	?indent@StyledWriter@Json@@AEAAXXZ	; Json::StyledWriter::indent

; 364  :          bool hasChildValue = !childValues_.empty();

	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 8
	call	?empty@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBA_NXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::empty
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN16@writeArray
	mov	DWORD PTR tv90[rsp], 1
	jmp	SHORT $LN17@writeArray
$LN16@writeArray:
	mov	DWORD PTR tv90[rsp], 0
$LN17@writeArray:
	movzx	eax, BYTE PTR tv90[rsp]
	mov	BYTE PTR hasChildValue$50629[rsp], al

; 365  :          unsigned index =0;

	mov	DWORD PTR index$50630[rsp], 0
$LN10@writeArray:

; 366  :          while ( true )

	xor	eax, eax
	cmp	eax, 1
	je	$LN9@writeArray

; 367  :          {
; 368  :             const Value &childValue = value[index];

	mov	edx, DWORD PTR index$50630[rsp]
	mov	rcx, QWORD PTR value$[rsp]
	call	??AValue@Json@@QEBAAEBV01@I@Z		; Json::Value::operator[]
	mov	QWORD PTR childValue$50634[rsp], rax

; 369  :             writeCommentBeforeValue( childValue );

	mov	rdx, QWORD PTR childValue$50634[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?writeCommentBeforeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z ; Json::StyledWriter::writeCommentBeforeValue

; 370  :             if ( hasChildValue )

	movzx	eax, BYTE PTR hasChildValue$50629[rsp]
	test	eax, eax
	je	SHORT $LN8@writeArray

; 371  :                writeWithIndent( childValues_[index] );

	mov	edx, DWORD PTR index$50630[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 8
	call	??A?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@_K@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator[]
	mov	rdx, rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?writeWithIndent@StyledWriter@Json@@AEAAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; Json::StyledWriter::writeWithIndent

; 372  :             else

	jmp	SHORT $LN7@writeArray
$LN8@writeArray:

; 373  :             {
; 374  :                writeIndent();

	mov	rcx, QWORD PTR this$[rsp]
	call	?writeIndent@StyledWriter@Json@@AEAAXXZ	; Json::StyledWriter::writeIndent

; 375  :                writeValue( childValue );

	mov	rdx, QWORD PTR childValue$50634[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z ; Json::StyledWriter::writeValue
$LN7@writeArray:

; 376  :             }
; 377  :             if ( ++index == size )

	mov	eax, DWORD PTR index$50630[rsp]
	add	eax, 1
	mov	DWORD PTR index$50630[rsp], eax
	mov	eax, DWORD PTR size$[rsp]
	cmp	DWORD PTR index$50630[rsp], eax
	jne	SHORT $LN6@writeArray

; 378  :             {
; 379  :                writeCommentAfterValueOnSameLine( childValue );

	mov	rdx, QWORD PTR childValue$50634[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z ; Json::StyledWriter::writeCommentAfterValueOnSameLine

; 380  :                break;

	jmp	SHORT $LN9@writeArray
$LN6@writeArray:

; 381  :             }
; 382  :             document_ += ",";

	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 56					; 00000038H
	lea	rdx, OFFSET FLAT:??_C@_01IHBHIGKO@?0?$AA@
	call	QWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@PEBD@Z

; 383  :             writeCommentAfterValueOnSameLine( childValue );

	mov	rdx, QWORD PTR childValue$50634[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z ; Json::StyledWriter::writeCommentAfterValueOnSameLine

; 384  :          }

	jmp	$LN10@writeArray
$LN9@writeArray:

; 385  :          unindent();

	mov	rcx, QWORD PTR this$[rsp]
	call	?unindent@StyledWriter@Json@@AEAAXXZ	; Json::StyledWriter::unindent

; 386  :          writeWithIndent( "]" );

	lea	rdx, OFFSET FLAT:??_C@_01LBDDMOBJ@?$FN?$AA@
	lea	rcx, QWORD PTR $T69754[rsp]
	call	QWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@PEBD@Z
	npad	1
	lea	rdx, QWORD PTR $T69754[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?writeWithIndent@StyledWriter@Json@@AEAAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; Json::StyledWriter::writeWithIndent
	npad	1
	lea	rcx, QWORD PTR $T69754[rsp]
	call	QWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ

; 387  :       }
; 388  :       else // output on a single line

	jmp	$LN12@writeArray
$LN11@writeArray:

; 389  :       {
; 390  :          assert( childValues_.size() == size );
; 391  :          document_ += "[ ";

	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 56					; 00000038H
	lea	rdx, OFFSET FLAT:??_C@_02PFNDMDBO@?$FL?5?$AA@
	call	QWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@PEBD@Z

; 392  :          for ( unsigned index =0; index < size; ++index )

	mov	DWORD PTR index$50642[rsp], 0
	jmp	SHORT $LN4@writeArray
$LN3@writeArray:
	mov	eax, DWORD PTR index$50642[rsp]
	add	eax, 1
	mov	DWORD PTR index$50642[rsp], eax
$LN4@writeArray:
	mov	eax, DWORD PTR size$[rsp]
	cmp	DWORD PTR index$50642[rsp], eax
	jae	SHORT $LN2@writeArray

; 393  :          {
; 394  :             if ( index > 0 )

	cmp	DWORD PTR index$50642[rsp], 0
	jbe	SHORT $LN1@writeArray

; 395  :                document_ += ", ";

	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 56					; 00000038H
	lea	rdx, OFFSET FLAT:??_C@_02KEGNLNML@?0?5?$AA@
	call	QWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@PEBD@Z
$LN1@writeArray:

; 396  :             document_ += childValues_[index];

	mov	edx, DWORD PTR index$50642[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 8
	call	??A?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@_K@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator[]
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 56					; 00000038H
	mov	rdx, rax
	call	QWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z

; 397  :          }

	jmp	SHORT $LN3@writeArray
$LN2@writeArray:

; 398  :          document_ += " ]";

	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 56					; 00000038H
	lea	rdx, OFFSET FLAT:??_C@_02DHOGEDBE@?5?$FN?$AA@
	call	QWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@PEBD@Z
$LN12@writeArray:

; 399  :       }
; 400  :    }
; 401  : }

	add	rsp, 216				; 000000d8H
	ret	0
?writeArrayValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z ENDP ; Json::StyledWriter::writeArrayValue
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
size$ = 32
isArrayMultiLine$50626 = 36
hasChildValue$50629 = 37
index$50630 = 40
childValue$50634 = 48
index$50642 = 56
$T69750 = 64
$T69751 = 104
$T69754 = 144
$T69764 = 184
tv90 = 192
this$ = 224
value$ = 232
?dtor$0@?0??writeArrayValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA PROC ; `Json::StyledWriter::writeArrayValue'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	lea	rcx, QWORD PTR $T69750[rbp]
	call	QWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0??writeArrayValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA ENDP ; `Json::StyledWriter::writeArrayValue'::`1'::dtor$0
; Function compile flags: /Odtp
size$ = 32
isArrayMultiLine$50626 = 36
hasChildValue$50629 = 37
index$50630 = 40
childValue$50634 = 48
index$50642 = 56
$T69750 = 64
$T69751 = 104
$T69754 = 144
$T69764 = 184
tv90 = 192
this$ = 224
value$ = 232
?dtor$1@?0??writeArrayValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA PROC ; `Json::StyledWriter::writeArrayValue'::`1'::dtor$1
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	lea	rcx, QWORD PTR $T69751[rbp]
	call	QWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$1@?0??writeArrayValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA ENDP ; `Json::StyledWriter::writeArrayValue'::`1'::dtor$1
; Function compile flags: /Odtp
size$ = 32
isArrayMultiLine$50626 = 36
hasChildValue$50629 = 37
index$50630 = 40
childValue$50634 = 48
index$50642 = 56
$T69750 = 64
$T69751 = 104
$T69754 = 144
$T69764 = 184
tv90 = 192
this$ = 224
value$ = 232
?dtor$2@?0??writeArrayValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA PROC ; `Json::StyledWriter::writeArrayValue'::`1'::dtor$2
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	lea	rcx, QWORD PTR $T69754[rbp]
	call	QWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$2@?0??writeArrayValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA ENDP ; `Json::StyledWriter::writeArrayValue'::`1'::dtor$2
;	COMDAT pdata
pdata	SEGMENT
$pdata$?writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z DD imagerel $LN30
	DD	imagerel $LN30+1264
	DD	imagerel $unwind$?writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA DD imagerel ?dtor$0@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA
	DD	imagerel ?dtor$0@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA+25
	DD	imagerel $unwind$?dtor$0@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA DD imagerel ?dtor$1@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA
	DD	imagerel ?dtor$1@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA+28
	DD	imagerel $unwind$?dtor$1@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$2@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA DD imagerel ?dtor$2@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA
	DD	imagerel ?dtor$2@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA+28
	DD	imagerel $unwind$?dtor$2@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$3@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA DD imagerel ?dtor$3@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA
	DD	imagerel ?dtor$3@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA+28
	DD	imagerel $unwind$?dtor$3@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$4@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA DD imagerel ?dtor$4@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA
	DD	imagerel ?dtor$4@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA+28
	DD	imagerel $unwind$?dtor$4@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$5@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA DD imagerel ?dtor$5@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA
	DD	imagerel ?dtor$5@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA+28
	DD	imagerel $unwind$?dtor$5@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$6@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA DD imagerel ?dtor$6@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA
	DD	imagerel ?dtor$6@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA+24
	DD	imagerel $unwind$?dtor$6@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$7@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA DD imagerel ?dtor$7@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA
	DD	imagerel ?dtor$7@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA+28
	DD	imagerel $unwind$?dtor$7@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$8@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA DD imagerel ?dtor$8@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA
	DD	imagerel ?dtor$8@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA+28
	DD	imagerel $unwind$?dtor$8@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$9@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA DD imagerel ?dtor$9@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA
	DD	imagerel ?dtor$9@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA+28
	DD	imagerel $unwind$?dtor$9@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$10@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA DD imagerel ?dtor$10@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA
	DD	imagerel ?dtor$10@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA+28
	DD	imagerel $unwind$?dtor$10@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z DD imagerel ?writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z
	DD	0ffffffffH
	DD	imagerel ?writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z+89
	DD	00H
	DD	imagerel ?writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z+91
	DD	0ffffffffH
	DD	imagerel ?writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z+110
	DD	00H
	DD	imagerel ?writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z+129
	DD	0ffffffffH
	DD	imagerel ?writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z+197
	DD	01H
	DD	imagerel ?writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z+219
	DD	0ffffffffH
	DD	imagerel ?writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z+290
	DD	02H
	DD	imagerel ?writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z+312
	DD	0ffffffffH
	DD	imagerel ?writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z+385
	DD	03H
	DD	imagerel ?writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z+407
	DD	0ffffffffH
	DD	imagerel ?writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z+479
	DD	04H
	DD	imagerel ?writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z+501
	DD	0ffffffffH
	DD	imagerel ?writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z+573
	DD	05H
	DD	imagerel ?writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z+595
	DD	0ffffffffH
	DD	imagerel ?writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z+659
	DD	06H
	DD	imagerel ?writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z+698
	DD	07H
	DD	imagerel ?writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z+720
	DD	06H
	DD	imagerel ?writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z+761
	DD	08H
	DD	imagerel ?writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z+783
	DD	06H
	DD	imagerel ?writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z+943
	DD	09H
	DD	imagerel ?writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z+965
	DD	06H
	DD	imagerel ?writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z+1174
	DD	0aH
	DD	imagerel ?writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z+1196
	DD	06H
	DD	imagerel ?writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z+1211
	DD	0ffffffffH
	DD	imagerel ?writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z+1232
	DD	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$10@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$9@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$8@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$7@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$6@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$5@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$4@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$3@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$2@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z DD 031e11H
	DD	0500112H
	DD	0300bH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z DD 019930522H
	DD	0bH
	DD	imagerel $stateUnwindMap$?writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z
	DD	00H
	DD	00H
	DD	01aH
	DD	imagerel $ip2state$?writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z
	DD	0210H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$1@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$2@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$3@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$4@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$5@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$6@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA
	DD	06H
	DD	imagerel ?dtor$7@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA
	DD	06H
	DD	imagerel ?dtor$8@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA
	DD	06H
	DD	imagerel ?dtor$9@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA
	DD	06H
	DD	imagerel ?dtor$10@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT ?writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z
_TEXT	SEGMENT
members$50599 = 32
it$50605 = 80
childValue$50611 = 96
name$50610 = 104
$T69812 = 112
$T69813 = 152
$T69814 = 192
$T69815 = 232
$T69816 = 272
$T69817 = 312
$T69818 = 352
$T69819 = 392
$T69820 = 432
$T69821 = 472
$T69822 = 488
$T69849 = 528
tv66 = 536
tv69 = 544
tv232 = 552
tv247 = 560
tv234 = 568
tv248 = 576
tv236 = 584
tv249 = 592
tv238 = 600
tv250 = 608
tv240 = 616
tv168 = 624
tv245 = 632
this$ = 656
value$ = 664
?writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z PROC	; Json::StyledWriter::writeValue, COMDAT

; 292  : {

$LN30:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbx
	sub	rsp, 640				; 00000280H
	mov	QWORD PTR $T69849[rsp], -2

; 293  :    switch ( value.type() )

	mov	rcx, QWORD PTR value$[rsp]
	call	?type@Value@Json@@QEBA?AW4ValueType@2@XZ ; Json::Value::type
	mov	DWORD PTR tv66[rsp], eax
	cmp	DWORD PTR tv66[rsp], 7
	ja	$LN14@writeValue
	movsxd	rax, DWORD PTR tv66[rsp]
	lea	rcx, OFFSET FLAT:__ImageBase
	mov	eax, DWORD PTR $LN29@writeValue[rcx+rax*4]
	add	rax, rcx
	jmp	rax
$LN13@writeValue:

; 294  :    {
; 295  :    case nullValue:
; 296  :       pushValue( "null" );

	lea	rdx, OFFSET FLAT:??_C@_04MLLLIHIP@null?$AA@
	lea	rcx, QWORD PTR $T69812[rsp]
	call	QWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@PEBD@Z
	npad	1
	lea	rdx, QWORD PTR $T69812[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?pushValue@StyledWriter@Json@@AEAAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; Json::StyledWriter::pushValue
	npad	1
	lea	rcx, QWORD PTR $T69812[rsp]
	call	QWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ

; 297  :       break;

	jmp	$LN14@writeValue
$LN12@writeValue:

; 298  :    case intValue:
; 299  :       pushValue( valueToString( value.asInt() ) );

	mov	rcx, QWORD PTR value$[rsp]
	call	?asInt@Value@Json@@QEBAHXZ		; Json::Value::asInt
	mov	edx, eax
	lea	rcx, QWORD PTR $T69813[rsp]
	call	?valueToString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z ; Json::valueToString
	mov	QWORD PTR tv69[rsp], rax
	mov	rax, QWORD PTR tv69[rsp]
	mov	QWORD PTR tv232[rsp], rax
	mov	rdx, QWORD PTR tv232[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?pushValue@StyledWriter@Json@@AEAAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; Json::StyledWriter::pushValue
	npad	1
	lea	rcx, QWORD PTR $T69813[rsp]
	call	QWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ

; 300  :       break;

	jmp	$LN14@writeValue
$LN11@writeValue:

; 301  :    case uintValue:
; 302  :       pushValue( valueToString( value.asUInt() ) );

	mov	rcx, QWORD PTR value$[rsp]
	call	?asUInt@Value@Json@@QEBAIXZ		; Json::Value::asUInt
	mov	edx, eax
	lea	rcx, QWORD PTR $T69814[rsp]
	call	?valueToString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z ; Json::valueToString
	mov	QWORD PTR tv247[rsp], rax
	mov	rax, QWORD PTR tv247[rsp]
	mov	QWORD PTR tv234[rsp], rax
	mov	rdx, QWORD PTR tv234[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?pushValue@StyledWriter@Json@@AEAAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; Json::StyledWriter::pushValue
	npad	1
	lea	rcx, QWORD PTR $T69814[rsp]
	call	QWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ

; 303  :       break;

	jmp	$LN14@writeValue
$LN10@writeValue:

; 304  :    case realValue:
; 305  :       pushValue( valueToString( value.asDouble() ) );

	mov	rcx, QWORD PTR value$[rsp]
	call	?asDouble@Value@Json@@QEBANXZ		; Json::Value::asDouble
	movapd	xmm1, xmm0
	lea	rcx, QWORD PTR $T69815[rsp]
	call	?valueToString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@N@Z ; Json::valueToString
	mov	QWORD PTR tv248[rsp], rax
	mov	rax, QWORD PTR tv248[rsp]
	mov	QWORD PTR tv236[rsp], rax
	mov	rdx, QWORD PTR tv236[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?pushValue@StyledWriter@Json@@AEAAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; Json::StyledWriter::pushValue
	npad	1
	lea	rcx, QWORD PTR $T69815[rsp]
	call	QWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ

; 306  :       break;

	jmp	$LN14@writeValue
$LN9@writeValue:

; 307  :    case stringValue:
; 308  :       pushValue( valueToQuotedString( value.asCString() ) );

	mov	rcx, QWORD PTR value$[rsp]
	call	?asCString@Value@Json@@QEBAPEBDXZ	; Json::Value::asCString
	mov	rdx, rax
	lea	rcx, QWORD PTR $T69816[rsp]
	call	?valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z ; Json::valueToQuotedString
	mov	QWORD PTR tv249[rsp], rax
	mov	rax, QWORD PTR tv249[rsp]
	mov	QWORD PTR tv238[rsp], rax
	mov	rdx, QWORD PTR tv238[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?pushValue@StyledWriter@Json@@AEAAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; Json::StyledWriter::pushValue
	npad	1
	lea	rcx, QWORD PTR $T69816[rsp]
	call	QWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ

; 309  :       break;

	jmp	$LN14@writeValue
$LN8@writeValue:

; 310  :    case booleanValue:
; 311  :       pushValue( valueToString( value.asBool() ) );

	mov	rcx, QWORD PTR value$[rsp]
	call	?asBool@Value@Json@@QEBA_NXZ		; Json::Value::asBool
	movzx	edx, al
	lea	rcx, QWORD PTR $T69817[rsp]
	call	?valueToString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z ; Json::valueToString
	mov	QWORD PTR tv250[rsp], rax
	mov	rax, QWORD PTR tv250[rsp]
	mov	QWORD PTR tv240[rsp], rax
	mov	rdx, QWORD PTR tv240[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?pushValue@StyledWriter@Json@@AEAAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; Json::StyledWriter::pushValue
	npad	1
	lea	rcx, QWORD PTR $T69817[rsp]
	call	QWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ

; 312  :       break;

	jmp	$LN14@writeValue
$LN7@writeValue:

; 313  :    case arrayValue:
; 314  :       writeArrayValue( value);

	mov	rdx, QWORD PTR value$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?writeArrayValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z ; Json::StyledWriter::writeArrayValue

; 315  :       break;

	jmp	$LN14@writeValue
$LN6@writeValue:

; 316  :    case objectValue:
; 317  :       {
; 318  :          Value::Members members( value.getMemberNames() );

	lea	rdx, QWORD PTR members$50599[rsp]
	mov	rcx, QWORD PTR value$[rsp]
	call	?getMemberNames@Value@Json@@QEBA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@XZ ; Json::Value::getMemberNames
	npad	1

; 319  :          if ( members.empty() )

	lea	rcx, QWORD PTR members$50599[rsp]
	call	?empty@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBA_NXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::empty
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN5@writeValue

; 320  :             pushValue( "{}" );

	lea	rdx, OFFSET FLAT:??_C@_02MCILKGOH@?$HL?$HN?$AA@
	lea	rcx, QWORD PTR $T69818[rsp]
	call	QWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@PEBD@Z
	npad	1
	lea	rdx, QWORD PTR $T69818[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?pushValue@StyledWriter@Json@@AEAAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; Json::StyledWriter::pushValue
	npad	1
	lea	rcx, QWORD PTR $T69818[rsp]
	call	QWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ

; 321  :          else

	jmp	$LN4@writeValue
$LN5@writeValue:

; 322  :          {
; 323  :             writeWithIndent( "{" );

	lea	rdx, OFFSET FLAT:??_C@_01HCONENDN@?$HL?$AA@
	lea	rcx, QWORD PTR $T69819[rsp]
	call	QWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@PEBD@Z
	npad	1
	lea	rdx, QWORD PTR $T69819[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?writeWithIndent@StyledWriter@Json@@AEAAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; Json::StyledWriter::writeWithIndent
	npad	1
	lea	rcx, QWORD PTR $T69819[rsp]
	call	QWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ

; 324  :             indent();

	mov	rcx, QWORD PTR this$[rsp]
	call	?indent@StyledWriter@Json@@AEAAXXZ	; Json::StyledWriter::indent

; 325  :             Value::Members::iterator it = members.begin();

	lea	rdx, QWORD PTR it$50605[rsp]
	lea	rcx, QWORD PTR members$50599[rsp]
	call	?begin@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA?AV?$_Vector_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::begin
$LN3@writeValue:

; 326  :             while ( true )

	xor	eax, eax
	cmp	eax, 1
	je	$LN2@writeValue

; 327  :             {
; 328  :                const std::string &name = *it;

	lea	rcx, QWORD PTR it$50605[rsp]
	call	??D?$_Vector_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBAAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@XZ ; std::_Vector_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator*
	mov	QWORD PTR name$50610[rsp], rax

; 329  :                const Value &childValue = value[name];

	mov	rdx, QWORD PTR name$50610[rsp]
	mov	rcx, QWORD PTR value$[rsp]
	call	??AValue@Json@@QEBAAEBV01@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; Json::Value::operator[]
	mov	QWORD PTR childValue$50611[rsp], rax

; 330  :                writeCommentBeforeValue( childValue );

	mov	rdx, QWORD PTR childValue$50611[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?writeCommentBeforeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z ; Json::StyledWriter::writeCommentBeforeValue

; 331  :                writeWithIndent( valueToQuotedString( name.c_str() ) );

	mov	rcx, QWORD PTR name$50610[rsp]
	call	QWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ
	mov	rdx, rax
	lea	rcx, QWORD PTR $T69820[rsp]
	call	?valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z ; Json::valueToQuotedString
	mov	QWORD PTR tv168[rsp], rax
	mov	rax, QWORD PTR tv168[rsp]
	mov	QWORD PTR tv245[rsp], rax
	mov	rdx, QWORD PTR tv245[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?writeWithIndent@StyledWriter@Json@@AEAAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; Json::StyledWriter::writeWithIndent
	npad	1
	lea	rcx, QWORD PTR $T69820[rsp]
	call	QWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ

; 332  :                document_ += " : ";

	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 56					; 00000038H
	lea	rdx, OFFSET FLAT:??_C@_03MCPBMLDJ@?5?3?5?$AA@
	call	QWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@PEBD@Z

; 333  :                writeValue( childValue );

	mov	rdx, QWORD PTR childValue$50611[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z ; Json::StyledWriter::writeValue

; 334  :                if ( ++it == members.end() )

	lea	rdx, QWORD PTR $T69821[rsp]
	lea	rcx, QWORD PTR members$50599[rsp]
	call	?end@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA?AV?$_Vector_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::end
	mov	rbx, rax
	lea	rcx, QWORD PTR it$50605[rsp]
	call	??E?$_Vector_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAAEAV01@XZ ; std::_Vector_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator++
	mov	rdx, rbx
	mov	rcx, rax
	call	??8?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBA_NAEBV01@@Z ; std::_Vector_const_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN1@writeValue

; 335  :                {
; 336  :                   writeCommentAfterValueOnSameLine( childValue );

	mov	rdx, QWORD PTR childValue$50611[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z ; Json::StyledWriter::writeCommentAfterValueOnSameLine

; 337  :                   break;

	jmp	SHORT $LN2@writeValue
$LN1@writeValue:

; 338  :                }
; 339  :                document_ += ",";

	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 56					; 00000038H
	lea	rdx, OFFSET FLAT:??_C@_01IHBHIGKO@?0?$AA@
	call	QWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@PEBD@Z

; 340  :                writeCommentAfterValueOnSameLine( childValue );

	mov	rdx, QWORD PTR childValue$50611[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z ; Json::StyledWriter::writeCommentAfterValueOnSameLine

; 341  :             }

	jmp	$LN3@writeValue
$LN2@writeValue:

; 342  :             unindent();

	mov	rcx, QWORD PTR this$[rsp]
	call	?unindent@StyledWriter@Json@@AEAAXXZ	; Json::StyledWriter::unindent

; 343  :             writeWithIndent( "}" );

	lea	rdx, OFFSET FLAT:??_C@_01CELHOKLL@?$HN?$AA@
	lea	rcx, QWORD PTR $T69822[rsp]
	call	QWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@PEBD@Z
	npad	1
	lea	rdx, QWORD PTR $T69822[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?writeWithIndent@StyledWriter@Json@@AEAAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; Json::StyledWriter::writeWithIndent
	npad	1
	lea	rcx, QWORD PTR $T69822[rsp]
	call	QWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	npad	1
$LN4@writeValue:

; 344  :          }
; 345  :       }

	lea	rcx, QWORD PTR members$50599[rsp]
	call	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
$LN14@writeValue:

; 346  :       break;
; 347  :    }
; 348  : }

	add	rsp, 640				; 00000280H
	pop	rbx
	ret	0
	npad	2
$LN29@writeValue:
	DD	$LN13@writeValue
	DD	$LN12@writeValue
	DD	$LN11@writeValue
	DD	$LN10@writeValue
	DD	$LN9@writeValue
	DD	$LN8@writeValue
	DD	$LN7@writeValue
	DD	$LN6@writeValue
?writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z ENDP	; Json::StyledWriter::writeValue
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
members$50599 = 32
it$50605 = 80
childValue$50611 = 96
name$50610 = 104
$T69812 = 112
$T69813 = 152
$T69814 = 192
$T69815 = 232
$T69816 = 272
$T69817 = 312
$T69818 = 352
$T69819 = 392
$T69820 = 432
$T69821 = 472
$T69822 = 488
$T69849 = 528
tv66 = 536
tv69 = 544
tv232 = 552
tv247 = 560
tv234 = 568
tv248 = 576
tv236 = 584
tv249 = 592
tv238 = 600
tv250 = 608
tv240 = 616
tv168 = 624
tv245 = 632
this$ = 656
value$ = 664
?dtor$0@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA PROC ; `Json::StyledWriter::writeValue'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	lea	rcx, QWORD PTR $T69812[rbp]
	call	QWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA ENDP ; `Json::StyledWriter::writeValue'::`1'::dtor$0
; Function compile flags: /Odtp
members$50599 = 32
it$50605 = 80
childValue$50611 = 96
name$50610 = 104
$T69812 = 112
$T69813 = 152
$T69814 = 192
$T69815 = 232
$T69816 = 272
$T69817 = 312
$T69818 = 352
$T69819 = 392
$T69820 = 432
$T69821 = 472
$T69822 = 488
$T69849 = 528
tv66 = 536
tv69 = 544
tv232 = 552
tv247 = 560
tv234 = 568
tv248 = 576
tv236 = 584
tv249 = 592
tv238 = 600
tv250 = 608
tv240 = 616
tv168 = 624
tv245 = 632
this$ = 656
value$ = 664
?dtor$1@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA PROC ; `Json::StyledWriter::writeValue'::`1'::dtor$1
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	lea	rcx, QWORD PTR $T69813[rbp]
	call	QWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$1@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA ENDP ; `Json::StyledWriter::writeValue'::`1'::dtor$1
; Function compile flags: /Odtp
members$50599 = 32
it$50605 = 80
childValue$50611 = 96
name$50610 = 104
$T69812 = 112
$T69813 = 152
$T69814 = 192
$T69815 = 232
$T69816 = 272
$T69817 = 312
$T69818 = 352
$T69819 = 392
$T69820 = 432
$T69821 = 472
$T69822 = 488
$T69849 = 528
tv66 = 536
tv69 = 544
tv232 = 552
tv247 = 560
tv234 = 568
tv248 = 576
tv236 = 584
tv249 = 592
tv238 = 600
tv250 = 608
tv240 = 616
tv168 = 624
tv245 = 632
this$ = 656
value$ = 664
?dtor$2@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA PROC ; `Json::StyledWriter::writeValue'::`1'::dtor$2
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	lea	rcx, QWORD PTR $T69814[rbp]
	call	QWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$2@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA ENDP ; `Json::StyledWriter::writeValue'::`1'::dtor$2
; Function compile flags: /Odtp
members$50599 = 32
it$50605 = 80
childValue$50611 = 96
name$50610 = 104
$T69812 = 112
$T69813 = 152
$T69814 = 192
$T69815 = 232
$T69816 = 272
$T69817 = 312
$T69818 = 352
$T69819 = 392
$T69820 = 432
$T69821 = 472
$T69822 = 488
$T69849 = 528
tv66 = 536
tv69 = 544
tv232 = 552
tv247 = 560
tv234 = 568
tv248 = 576
tv236 = 584
tv249 = 592
tv238 = 600
tv250 = 608
tv240 = 616
tv168 = 624
tv245 = 632
this$ = 656
value$ = 664
?dtor$3@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA PROC ; `Json::StyledWriter::writeValue'::`1'::dtor$3
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	lea	rcx, QWORD PTR $T69815[rbp]
	call	QWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$3@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA ENDP ; `Json::StyledWriter::writeValue'::`1'::dtor$3
; Function compile flags: /Odtp
members$50599 = 32
it$50605 = 80
childValue$50611 = 96
name$50610 = 104
$T69812 = 112
$T69813 = 152
$T69814 = 192
$T69815 = 232
$T69816 = 272
$T69817 = 312
$T69818 = 352
$T69819 = 392
$T69820 = 432
$T69821 = 472
$T69822 = 488
$T69849 = 528
tv66 = 536
tv69 = 544
tv232 = 552
tv247 = 560
tv234 = 568
tv248 = 576
tv236 = 584
tv249 = 592
tv238 = 600
tv250 = 608
tv240 = 616
tv168 = 624
tv245 = 632
this$ = 656
value$ = 664
?dtor$4@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA PROC ; `Json::StyledWriter::writeValue'::`1'::dtor$4
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	lea	rcx, QWORD PTR $T69816[rbp]
	call	QWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$4@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA ENDP ; `Json::StyledWriter::writeValue'::`1'::dtor$4
; Function compile flags: /Odtp
members$50599 = 32
it$50605 = 80
childValue$50611 = 96
name$50610 = 104
$T69812 = 112
$T69813 = 152
$T69814 = 192
$T69815 = 232
$T69816 = 272
$T69817 = 312
$T69818 = 352
$T69819 = 392
$T69820 = 432
$T69821 = 472
$T69822 = 488
$T69849 = 528
tv66 = 536
tv69 = 544
tv232 = 552
tv247 = 560
tv234 = 568
tv248 = 576
tv236 = 584
tv249 = 592
tv238 = 600
tv250 = 608
tv240 = 616
tv168 = 624
tv245 = 632
this$ = 656
value$ = 664
?dtor$5@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA PROC ; `Json::StyledWriter::writeValue'::`1'::dtor$5
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	lea	rcx, QWORD PTR $T69817[rbp]
	call	QWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$5@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA ENDP ; `Json::StyledWriter::writeValue'::`1'::dtor$5
; Function compile flags: /Odtp
members$50599 = 32
it$50605 = 80
childValue$50611 = 96
name$50610 = 104
$T69812 = 112
$T69813 = 152
$T69814 = 192
$T69815 = 232
$T69816 = 272
$T69817 = 312
$T69818 = 352
$T69819 = 392
$T69820 = 432
$T69821 = 472
$T69822 = 488
$T69849 = 528
tv66 = 536
tv69 = 544
tv232 = 552
tv247 = 560
tv234 = 568
tv248 = 576
tv236 = 584
tv249 = 592
tv238 = 600
tv250 = 608
tv240 = 616
tv168 = 624
tv245 = 632
this$ = 656
value$ = 664
?dtor$6@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA PROC ; `Json::StyledWriter::writeValue'::`1'::dtor$6
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	lea	rcx, QWORD PTR members$50599[rbp]
	call	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$6@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA ENDP ; `Json::StyledWriter::writeValue'::`1'::dtor$6
; Function compile flags: /Odtp
members$50599 = 32
it$50605 = 80
childValue$50611 = 96
name$50610 = 104
$T69812 = 112
$T69813 = 152
$T69814 = 192
$T69815 = 232
$T69816 = 272
$T69817 = 312
$T69818 = 352
$T69819 = 392
$T69820 = 432
$T69821 = 472
$T69822 = 488
$T69849 = 528
tv66 = 536
tv69 = 544
tv232 = 552
tv247 = 560
tv234 = 568
tv248 = 576
tv236 = 584
tv249 = 592
tv238 = 600
tv250 = 608
tv240 = 616
tv168 = 624
tv245 = 632
this$ = 656
value$ = 664
?dtor$7@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA PROC ; `Json::StyledWriter::writeValue'::`1'::dtor$7
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	lea	rcx, QWORD PTR $T69818[rbp]
	call	QWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$7@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA ENDP ; `Json::StyledWriter::writeValue'::`1'::dtor$7
; Function compile flags: /Odtp
members$50599 = 32
it$50605 = 80
childValue$50611 = 96
name$50610 = 104
$T69812 = 112
$T69813 = 152
$T69814 = 192
$T69815 = 232
$T69816 = 272
$T69817 = 312
$T69818 = 352
$T69819 = 392
$T69820 = 432
$T69821 = 472
$T69822 = 488
$T69849 = 528
tv66 = 536
tv69 = 544
tv232 = 552
tv247 = 560
tv234 = 568
tv248 = 576
tv236 = 584
tv249 = 592
tv238 = 600
tv250 = 608
tv240 = 616
tv168 = 624
tv245 = 632
this$ = 656
value$ = 664
?dtor$8@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA PROC ; `Json::StyledWriter::writeValue'::`1'::dtor$8
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	lea	rcx, QWORD PTR $T69819[rbp]
	call	QWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$8@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA ENDP ; `Json::StyledWriter::writeValue'::`1'::dtor$8
; Function compile flags: /Odtp
members$50599 = 32
it$50605 = 80
childValue$50611 = 96
name$50610 = 104
$T69812 = 112
$T69813 = 152
$T69814 = 192
$T69815 = 232
$T69816 = 272
$T69817 = 312
$T69818 = 352
$T69819 = 392
$T69820 = 432
$T69821 = 472
$T69822 = 488
$T69849 = 528
tv66 = 536
tv69 = 544
tv232 = 552
tv247 = 560
tv234 = 568
tv248 = 576
tv236 = 584
tv249 = 592
tv238 = 600
tv250 = 608
tv240 = 616
tv168 = 624
tv245 = 632
this$ = 656
value$ = 664
?dtor$9@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA PROC ; `Json::StyledWriter::writeValue'::`1'::dtor$9
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	lea	rcx, QWORD PTR $T69820[rbp]
	call	QWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$9@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA ENDP ; `Json::StyledWriter::writeValue'::`1'::dtor$9
; Function compile flags: /Odtp
members$50599 = 32
it$50605 = 80
childValue$50611 = 96
name$50610 = 104
$T69812 = 112
$T69813 = 152
$T69814 = 192
$T69815 = 232
$T69816 = 272
$T69817 = 312
$T69818 = 352
$T69819 = 392
$T69820 = 432
$T69821 = 472
$T69822 = 488
$T69849 = 528
tv66 = 536
tv69 = 544
tv232 = 552
tv247 = 560
tv234 = 568
tv248 = 576
tv236 = 584
tv249 = 592
tv238 = 600
tv250 = 608
tv240 = 616
tv168 = 624
tv245 = 632
this$ = 656
value$ = 664
?dtor$10@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA PROC ; `Json::StyledWriter::writeValue'::`1'::dtor$10
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	lea	rcx, QWORD PTR $T69822[rbp]
	call	QWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$10@?0??writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z@4HA ENDP ; `Json::StyledWriter::writeValue'::`1'::dtor$10
text$x	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?write@StyledWriter@Json@@UEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBVValue@2@@Z DD imagerel $LN5
	DD	imagerel $LN5+192
	DD	imagerel $unwind$?write@StyledWriter@Json@@UEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBVValue@2@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?write@StyledWriter@Json@@UEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBVValue@2@@Z DD 011301H
	DD	06213H
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT ?write@StyledWriter@Json@@UEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBVValue@2@@Z
_TEXT	SEGMENT
$T69911 = 32
this$ = 64
__$ReturnUdt$ = 72
root$ = 80
?write@StyledWriter@Json@@UEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBVValue@2@@Z PROC ; Json::StyledWriter::write, COMDAT

; 278  : {

$LN5:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
	mov	DWORD PTR $T69911[rsp], 0

; 279  :    document_ = "";

	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 56					; 00000038H
	lea	rdx, OFFSET FLAT:??_C@_00CNPNBAHC@?$AA@
	call	QWORD PTR __imp_??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@PEBD@Z

; 280  :    addChildValues_ = false;

	mov	r11, QWORD PTR this$[rsp]
	mov	BYTE PTR [r11+144], 0

; 281  :    indentString_ = "";

	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 96					; 00000060H
	lea	rdx, OFFSET FLAT:??_C@_00CNPNBAHC@?$AA@
	call	QWORD PTR __imp_??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@PEBD@Z

; 282  :    writeCommentBeforeValue( root );

	mov	rdx, QWORD PTR root$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?writeCommentBeforeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z ; Json::StyledWriter::writeCommentBeforeValue

; 283  :    writeValue( root );

	mov	rdx, QWORD PTR root$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z ; Json::StyledWriter::writeValue

; 284  :    writeCommentAfterValueOnSameLine( root );

	mov	rdx, QWORD PTR root$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?writeCommentAfterValueOnSameLine@StyledWriter@Json@@AEAAXAEBVValue@2@@Z ; Json::StyledWriter::writeCommentAfterValueOnSameLine

; 285  :    document_ += "\n";

	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 56					; 00000038H
	lea	rdx, OFFSET FLAT:??_C@_01EEMJAFIK@?6?$AA@
	call	QWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@PEBD@Z

; 286  :    return document_;

	mov	rdx, QWORD PTR this$[rsp]
	add	rdx, 56					; 00000038H
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	QWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z
	mov	eax, DWORD PTR $T69911[rsp]
	or	eax, 1
	mov	DWORD PTR $T69911[rsp], eax
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 287  : }

	add	rsp, 56					; 00000038H
	ret	0
?write@StyledWriter@Json@@UEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBVValue@2@@Z ENDP ; Json::StyledWriter::write
_TEXT	ENDS
PUBLIC	?writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z ; Json::FastWriter::writeValue
;	COMDAT pdata
pdata	SEGMENT
$pdata$?writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z DD imagerel $LN31
	DD	imagerel $LN31+1252
	DD	imagerel $unwind$?writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z@4HA DD imagerel ?dtor$0@?0??writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z@4HA
	DD	imagerel ?dtor$0@?0??writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z@4HA+25
	DD	imagerel $unwind$?dtor$0@?0??writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0??writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z@4HA DD imagerel ?dtor$1@?0??writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z@4HA
	DD	imagerel ?dtor$1@?0??writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z@4HA+28
	DD	imagerel $unwind$?dtor$1@?0??writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$2@?0??writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z@4HA DD imagerel ?dtor$2@?0??writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z@4HA
	DD	imagerel ?dtor$2@?0??writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z@4HA+28
	DD	imagerel $unwind$?dtor$2@?0??writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$3@?0??writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z@4HA DD imagerel ?dtor$3@?0??writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z@4HA
	DD	imagerel ?dtor$3@?0??writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z@4HA+28
	DD	imagerel $unwind$?dtor$3@?0??writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$4@?0??writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z@4HA DD imagerel ?dtor$4@?0??writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z@4HA
	DD	imagerel ?dtor$4@?0??writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z@4HA+28
	DD	imagerel $unwind$?dtor$4@?0??writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$5@?0??writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z@4HA DD imagerel ?dtor$5@?0??writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z@4HA
	DD	imagerel ?dtor$5@?0??writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z@4HA+24
	DD	imagerel $unwind$?dtor$5@?0??writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$6@?0??writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z@4HA DD imagerel ?dtor$6@?0??writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z@4HA
	DD	imagerel ?dtor$6@?0??writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z@4HA+28
	DD	imagerel $unwind$?dtor$6@?0??writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z@4HA
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z DD imagerel ?writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z
	DD	0ffffffffH
	DD	imagerel ?writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z+88
	DD	00H
	DD	imagerel ?writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z+90
	DD	0ffffffffH
	DD	imagerel ?writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z+169
	DD	00H
	DD	imagerel ?writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z+196
	DD	0ffffffffH
	DD	imagerel ?writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z+264
	DD	01H
	DD	imagerel ?writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z+291
	DD	0ffffffffH
	DD	imagerel ?writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z+364
	DD	02H
	DD	imagerel ?writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z+391
	DD	0ffffffffH
	DD	imagerel ?writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z+463
	DD	03H
	DD	imagerel ?writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z+490
	DD	0ffffffffH
	DD	imagerel ?writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z+562
	DD	04H
	DD	imagerel ?writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z+589
	DD	0ffffffffH
	DD	imagerel ?writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z+797
	DD	05H
	DD	imagerel ?writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z+1020
	DD	06H
	DD	imagerel ?writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z+1047
	DD	05H
	DD	imagerel ?writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z+1201
	DD	0ffffffffH
	DD	imagerel ?writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z+1220
	DD	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$6@?0??writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$5@?0??writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$4@?0??writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$3@?0??writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$2@?0??writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0??writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z DD 021d11H
	DD	0410111H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z DD 019930522H
	DD	07H
	DD	imagerel $stateUnwindMap$?writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z
	DD	00H
	DD	00H
	DD	012H
	DD	imagerel $ip2state$?writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z
	DD	0180H
	DD	00H
	DD	01H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$1@?0??writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$2@?0??writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$3@?0??writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$4@?0??writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$5@?0??writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z@4HA
	DD	05H
	DD	imagerel ?dtor$6@?0??writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z@4HA
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT ?writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z
_TEXT	SEGMENT
size$50385 = 32
index$50386 = 36
members$50395 = 40
it$50555 = 88
name$50561 = 104
$T69920 = 112
$T69921 = 152
$T69922 = 192
$T69923 = 232
$T69924 = 272
$T69925 = 312
$T69926 = 328
$T69927 = 344
$T69948 = 384
tv66 = 392
tv257 = 400
tv245 = 408
tv258 = 416
tv247 = 424
tv259 = 432
tv249 = 440
tv260 = 448
tv251 = 456
tv261 = 464
tv253 = 472
tv172 = 480
tv256 = 488
tv234 = 496
this$ = 528
value$ = 536
?writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z PROC	; Json::FastWriter::writeValue, COMDAT

; 209  : {

$LN31:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 520				; 00000208H
	mov	QWORD PTR $T69948[rsp], -2

; 210  :    switch ( value.type() )

	mov	rcx, QWORD PTR value$[rsp]
	call	?type@Value@Json@@QEBA?AW4ValueType@2@XZ ; Json::Value::type
	mov	DWORD PTR tv66[rsp], eax
	cmp	DWORD PTR tv66[rsp], 7
	ja	$LN17@writeValue@2
	movsxd	rax, DWORD PTR tv66[rsp]
	lea	rcx, OFFSET FLAT:__ImageBase
	mov	eax, DWORD PTR $LN30@writeValue@2[rcx+rax*4]
	add	rax, rcx
	jmp	rax
$LN16@writeValue@2:

; 211  :    {
; 212  :    case nullValue:
; 213  :       document_ += "null";

	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 8
	lea	rdx, OFFSET FLAT:??_C@_04MLLLIHIP@null?$AA@
	call	QWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@PEBD@Z

; 214  :       break;

	jmp	$LN17@writeValue@2
$LN15@writeValue@2:

; 215  :    case intValue:
; 216  :       document_ += valueToString( value.asInt() );

	mov	rcx, QWORD PTR value$[rsp]
	call	?asInt@Value@Json@@QEBAHXZ		; Json::Value::asInt
	mov	edx, eax
	lea	rcx, QWORD PTR $T69920[rsp]
	call	?valueToString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z ; Json::valueToString
	mov	QWORD PTR tv257[rsp], rax
	mov	rax, QWORD PTR tv257[rsp]
	mov	QWORD PTR tv245[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 8
	mov	rdx, QWORD PTR tv245[rsp]
	call	QWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z
	npad	1
	lea	rcx, QWORD PTR $T69920[rsp]
	call	QWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ

; 217  :       break;

	jmp	$LN17@writeValue@2
$LN14@writeValue@2:

; 218  :    case uintValue:
; 219  :       document_ += valueToString( value.asUInt() );

	mov	rcx, QWORD PTR value$[rsp]
	call	?asUInt@Value@Json@@QEBAIXZ		; Json::Value::asUInt
	mov	edx, eax
	lea	rcx, QWORD PTR $T69921[rsp]
	call	?valueToString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@I@Z ; Json::valueToString
	mov	QWORD PTR tv258[rsp], rax
	mov	rax, QWORD PTR tv258[rsp]
	mov	QWORD PTR tv247[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 8
	mov	rdx, QWORD PTR tv247[rsp]
	call	QWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z
	npad	1
	lea	rcx, QWORD PTR $T69921[rsp]
	call	QWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ

; 220  :       break;

	jmp	$LN17@writeValue@2
$LN13@writeValue@2:

; 221  :    case realValue:
; 222  :       document_ += valueToString( value.asDouble() );

	mov	rcx, QWORD PTR value$[rsp]
	call	?asDouble@Value@Json@@QEBANXZ		; Json::Value::asDouble
	movapd	xmm1, xmm0
	lea	rcx, QWORD PTR $T69922[rsp]
	call	?valueToString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@N@Z ; Json::valueToString
	mov	QWORD PTR tv259[rsp], rax
	mov	rax, QWORD PTR tv259[rsp]
	mov	QWORD PTR tv249[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 8
	mov	rdx, QWORD PTR tv249[rsp]
	call	QWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z
	npad	1
	lea	rcx, QWORD PTR $T69922[rsp]
	call	QWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ

; 223  :       break;

	jmp	$LN17@writeValue@2
$LN12@writeValue@2:

; 224  :    case stringValue:
; 225  :       document_ += valueToQuotedString( value.asCString() );

	mov	rcx, QWORD PTR value$[rsp]
	call	?asCString@Value@Json@@QEBAPEBDXZ	; Json::Value::asCString
	mov	rdx, rax
	lea	rcx, QWORD PTR $T69923[rsp]
	call	?valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z ; Json::valueToQuotedString
	mov	QWORD PTR tv260[rsp], rax
	mov	rax, QWORD PTR tv260[rsp]
	mov	QWORD PTR tv251[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 8
	mov	rdx, QWORD PTR tv251[rsp]
	call	QWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z
	npad	1
	lea	rcx, QWORD PTR $T69923[rsp]
	call	QWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ

; 226  :       break;

	jmp	$LN17@writeValue@2
$LN11@writeValue@2:

; 227  :    case booleanValue:
; 228  :       document_ += valueToString( value.asBool() );

	mov	rcx, QWORD PTR value$[rsp]
	call	?asBool@Value@Json@@QEBA_NXZ		; Json::Value::asBool
	movzx	edx, al
	lea	rcx, QWORD PTR $T69924[rsp]
	call	?valueToString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z ; Json::valueToString
	mov	QWORD PTR tv261[rsp], rax
	mov	rax, QWORD PTR tv261[rsp]
	mov	QWORD PTR tv253[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 8
	mov	rdx, QWORD PTR tv253[rsp]
	call	QWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z
	npad	1
	lea	rcx, QWORD PTR $T69924[rsp]
	call	QWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ

; 229  :       break;

	jmp	$LN17@writeValue@2
$LN10@writeValue@2:

; 230  :    case arrayValue:
; 231  :       {
; 232  :          document_ += "[";

	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 8
	lea	rdx, OFFSET FLAT:??_C@_01OHGJGJJP@?$FL?$AA@
	call	QWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@PEBD@Z

; 233  :          int size = value.size();

	mov	rcx, QWORD PTR value$[rsp]
	call	?size@Value@Json@@QEBAIXZ		; Json::Value::size
	mov	DWORD PTR size$50385[rsp], eax

; 234  :          for ( int index =0; index < size; ++index )

	mov	DWORD PTR index$50386[rsp], 0
	jmp	SHORT $LN9@writeValue@2
$LN8@writeValue@2:
	mov	eax, DWORD PTR index$50386[rsp]
	add	eax, 1
	mov	DWORD PTR index$50386[rsp], eax
$LN9@writeValue@2:
	mov	eax, DWORD PTR size$50385[rsp]
	cmp	DWORD PTR index$50386[rsp], eax
	jge	SHORT $LN7@writeValue@2

; 235  :          {
; 236  :             if ( index > 0 )

	cmp	DWORD PTR index$50386[rsp], 0
	jle	SHORT $LN6@writeValue@2

; 237  :                document_ += ",";

	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 8
	lea	rdx, OFFSET FLAT:??_C@_01IHBHIGKO@?0?$AA@
	call	QWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@PEBD@Z
$LN6@writeValue@2:

; 238  :             writeValue( value[index] );

	mov	edx, DWORD PTR index$50386[rsp]
	mov	rcx, QWORD PTR value$[rsp]
	call	??AValue@Json@@QEBAAEBV01@I@Z		; Json::Value::operator[]
	mov	rdx, rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z ; Json::FastWriter::writeValue

; 239  :          }

	jmp	SHORT $LN8@writeValue@2
$LN7@writeValue@2:

; 240  :          document_ += "]";

	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 8
	lea	rdx, OFFSET FLAT:??_C@_01LBDDMOBJ@?$FN?$AA@
	call	QWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@PEBD@Z

; 241  :       }
; 242  :       break;

	jmp	$LN17@writeValue@2
$LN5@writeValue@2:

; 243  :    case objectValue:
; 244  :       {
; 245  :          Value::Members members( value.getMemberNames() );

	lea	rdx, QWORD PTR members$50395[rsp]
	mov	rcx, QWORD PTR value$[rsp]
	call	?getMemberNames@Value@Json@@QEBA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@XZ ; Json::Value::getMemberNames
	npad	1

; 246  :          document_ += "{";

	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 8
	lea	rdx, OFFSET FLAT:??_C@_01HCONENDN@?$HL?$AA@
	call	QWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@PEBD@Z

; 247  :          for ( Value::Members::iterator it = members.begin(); 

	lea	rdx, QWORD PTR it$50555[rsp]
	lea	rcx, QWORD PTR members$50395[rsp]
	call	?begin@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA?AV?$_Vector_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::begin

; 248  :                it != members.end(); 
; 249  :                ++it )

	jmp	SHORT $LN4@writeValue@2
$LN3@writeValue@2:
	lea	rcx, QWORD PTR it$50555[rsp]
	call	??E?$_Vector_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAAEAV01@XZ ; std::_Vector_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator++
$LN4@writeValue@2:
	lea	rdx, QWORD PTR $T69925[rsp]
	lea	rcx, QWORD PTR members$50395[rsp]
	call	?end@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA?AV?$_Vector_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::end
	mov	rdx, rax
	lea	rcx, QWORD PTR it$50555[rsp]
	call	??9?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBA_NAEBV01@@Z ; std::_Vector_const_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator!=
	movzx	eax, al
	test	eax, eax
	je	$LN2@writeValue@2

; 250  :          {
; 251  :             const std::string &name = *it;

	lea	rcx, QWORD PTR it$50555[rsp]
	call	??D?$_Vector_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBAAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@XZ ; std::_Vector_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator*
	mov	QWORD PTR name$50561[rsp], rax

; 252  :             if ( it != members.begin() )

	lea	rdx, QWORD PTR $T69926[rsp]
	lea	rcx, QWORD PTR members$50395[rsp]
	call	?begin@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA?AV?$_Vector_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@2@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::begin
	mov	rdx, rax
	lea	rcx, QWORD PTR it$50555[rsp]
	call	??9?$_Vector_const_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEBA_NAEBV01@@Z ; std::_Vector_const_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator!=
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN1@writeValue@2

; 253  :                document_ += ",";

	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 8
	lea	rdx, OFFSET FLAT:??_C@_01IHBHIGKO@?0?$AA@
	call	QWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@PEBD@Z
$LN1@writeValue@2:

; 254  :             document_ += valueToQuotedString( name.c_str() );

	mov	rcx, QWORD PTR name$50561[rsp]
	call	QWORD PTR __imp_?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ
	mov	rdx, rax
	lea	rcx, QWORD PTR $T69927[rsp]
	call	?valueToQuotedString@Json@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z ; Json::valueToQuotedString
	mov	QWORD PTR tv172[rsp], rax
	mov	rax, QWORD PTR tv172[rsp]
	mov	QWORD PTR tv256[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 8
	mov	rdx, QWORD PTR tv256[rsp]
	call	QWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z
	npad	1
	lea	rcx, QWORD PTR $T69927[rsp]
	call	QWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ

; 255  :             document_ += yamlCompatiblityEnabled_ ? ": " 
; 256  :                                                   : ":";

	mov	r11, QWORD PTR this$[rsp]
	movzx	eax, BYTE PTR [r11+48]
	test	eax, eax
	je	SHORT $LN21@writeValue@2
	lea	rax, OFFSET FLAT:??_C@_02LMMGGCAJ@?3?5?$AA@
	mov	QWORD PTR tv234[rsp], rax
	jmp	SHORT $LN22@writeValue@2
$LN21@writeValue@2:
	lea	rax, OFFSET FLAT:??_C@_01JLIPDDHJ@?3?$AA@
	mov	QWORD PTR tv234[rsp], rax
$LN22@writeValue@2:
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 8
	mov	rdx, QWORD PTR tv234[rsp]
	call	QWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@PEBD@Z

; 257  :             writeValue( value[name] );

	mov	rdx, QWORD PTR name$50561[rsp]
	mov	rcx, QWORD PTR value$[rsp]
	call	??AValue@Json@@QEBAAEBV01@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; Json::Value::operator[]
	mov	rdx, rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z ; Json::FastWriter::writeValue

; 258  :          }

	jmp	$LN3@writeValue@2
$LN2@writeValue@2:

; 259  :          document_ += "}";

	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 8
	lea	rdx, OFFSET FLAT:??_C@_01CELHOKLL@?$HN?$AA@
	call	QWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@PEBD@Z
	npad	1

; 260  :       }

	lea	rcx, QWORD PTR members$50395[rsp]
	call	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
$LN17@writeValue@2:

; 261  :       break;
; 262  :    }
; 263  : }

	add	rsp, 520				; 00000208H
	ret	0
	npad	1
$LN30@writeValue@2:
	DD	$LN16@writeValue@2
	DD	$LN15@writeValue@2
	DD	$LN14@writeValue@2
	DD	$LN13@writeValue@2
	DD	$LN12@writeValue@2
	DD	$LN11@writeValue@2
	DD	$LN10@writeValue@2
	DD	$LN5@writeValue@2
?writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z ENDP	; Json::FastWriter::writeValue
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
size$50385 = 32
index$50386 = 36
members$50395 = 40
it$50555 = 88
name$50561 = 104
$T69920 = 112
$T69921 = 152
$T69922 = 192
$T69923 = 232
$T69924 = 272
$T69925 = 312
$T69926 = 328
$T69927 = 344
$T69948 = 384
tv66 = 392
tv257 = 400
tv245 = 408
tv258 = 416
tv247 = 424
tv259 = 432
tv249 = 440
tv260 = 448
tv251 = 456
tv261 = 464
tv253 = 472
tv172 = 480
tv256 = 488
tv234 = 496
this$ = 528
value$ = 536
?dtor$0@?0??writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z@4HA PROC ; `Json::FastWriter::writeValue'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	lea	rcx, QWORD PTR $T69920[rbp]
	call	QWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0??writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z@4HA ENDP ; `Json::FastWriter::writeValue'::`1'::dtor$0
; Function compile flags: /Odtp
size$50385 = 32
index$50386 = 36
members$50395 = 40
it$50555 = 88
name$50561 = 104
$T69920 = 112
$T69921 = 152
$T69922 = 192
$T69923 = 232
$T69924 = 272
$T69925 = 312
$T69926 = 328
$T69927 = 344
$T69948 = 384
tv66 = 392
tv257 = 400
tv245 = 408
tv258 = 416
tv247 = 424
tv259 = 432
tv249 = 440
tv260 = 448
tv251 = 456
tv261 = 464
tv253 = 472
tv172 = 480
tv256 = 488
tv234 = 496
this$ = 528
value$ = 536
?dtor$1@?0??writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z@4HA PROC ; `Json::FastWriter::writeValue'::`1'::dtor$1
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	lea	rcx, QWORD PTR $T69921[rbp]
	call	QWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$1@?0??writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z@4HA ENDP ; `Json::FastWriter::writeValue'::`1'::dtor$1
; Function compile flags: /Odtp
size$50385 = 32
index$50386 = 36
members$50395 = 40
it$50555 = 88
name$50561 = 104
$T69920 = 112
$T69921 = 152
$T69922 = 192
$T69923 = 232
$T69924 = 272
$T69925 = 312
$T69926 = 328
$T69927 = 344
$T69948 = 384
tv66 = 392
tv257 = 400
tv245 = 408
tv258 = 416
tv247 = 424
tv259 = 432
tv249 = 440
tv260 = 448
tv251 = 456
tv261 = 464
tv253 = 472
tv172 = 480
tv256 = 488
tv234 = 496
this$ = 528
value$ = 536
?dtor$2@?0??writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z@4HA PROC ; `Json::FastWriter::writeValue'::`1'::dtor$2
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	lea	rcx, QWORD PTR $T69922[rbp]
	call	QWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$2@?0??writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z@4HA ENDP ; `Json::FastWriter::writeValue'::`1'::dtor$2
; Function compile flags: /Odtp
size$50385 = 32
index$50386 = 36
members$50395 = 40
it$50555 = 88
name$50561 = 104
$T69920 = 112
$T69921 = 152
$T69922 = 192
$T69923 = 232
$T69924 = 272
$T69925 = 312
$T69926 = 328
$T69927 = 344
$T69948 = 384
tv66 = 392
tv257 = 400
tv245 = 408
tv258 = 416
tv247 = 424
tv259 = 432
tv249 = 440
tv260 = 448
tv251 = 456
tv261 = 464
tv253 = 472
tv172 = 480
tv256 = 488
tv234 = 496
this$ = 528
value$ = 536
?dtor$3@?0??writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z@4HA PROC ; `Json::FastWriter::writeValue'::`1'::dtor$3
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	lea	rcx, QWORD PTR $T69923[rbp]
	call	QWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$3@?0??writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z@4HA ENDP ; `Json::FastWriter::writeValue'::`1'::dtor$3
; Function compile flags: /Odtp
size$50385 = 32
index$50386 = 36
members$50395 = 40
it$50555 = 88
name$50561 = 104
$T69920 = 112
$T69921 = 152
$T69922 = 192
$T69923 = 232
$T69924 = 272
$T69925 = 312
$T69926 = 328
$T69927 = 344
$T69948 = 384
tv66 = 392
tv257 = 400
tv245 = 408
tv258 = 416
tv247 = 424
tv259 = 432
tv249 = 440
tv260 = 448
tv251 = 456
tv261 = 464
tv253 = 472
tv172 = 480
tv256 = 488
tv234 = 496
this$ = 528
value$ = 536
?dtor$4@?0??writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z@4HA PROC ; `Json::FastWriter::writeValue'::`1'::dtor$4
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	lea	rcx, QWORD PTR $T69924[rbp]
	call	QWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$4@?0??writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z@4HA ENDP ; `Json::FastWriter::writeValue'::`1'::dtor$4
; Function compile flags: /Odtp
size$50385 = 32
index$50386 = 36
members$50395 = 40
it$50555 = 88
name$50561 = 104
$T69920 = 112
$T69921 = 152
$T69922 = 192
$T69923 = 232
$T69924 = 272
$T69925 = 312
$T69926 = 328
$T69927 = 344
$T69948 = 384
tv66 = 392
tv257 = 400
tv245 = 408
tv258 = 416
tv247 = 424
tv259 = 432
tv249 = 440
tv260 = 448
tv251 = 456
tv261 = 464
tv253 = 472
tv172 = 480
tv256 = 488
tv234 = 496
this$ = 528
value$ = 536
?dtor$5@?0??writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z@4HA PROC ; `Json::FastWriter::writeValue'::`1'::dtor$5
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	lea	rcx, QWORD PTR members$50395[rbp]
	call	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$5@?0??writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z@4HA ENDP ; `Json::FastWriter::writeValue'::`1'::dtor$5
; Function compile flags: /Odtp
size$50385 = 32
index$50386 = 36
members$50395 = 40
it$50555 = 88
name$50561 = 104
$T69920 = 112
$T69921 = 152
$T69922 = 192
$T69923 = 232
$T69924 = 272
$T69925 = 312
$T69926 = 328
$T69927 = 344
$T69948 = 384
tv66 = 392
tv257 = 400
tv245 = 408
tv258 = 416
tv247 = 424
tv259 = 432
tv249 = 440
tv260 = 448
tv251 = 456
tv261 = 464
tv253 = 472
tv172 = 480
tv256 = 488
tv234 = 496
this$ = 528
value$ = 536
?dtor$6@?0??writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z@4HA PROC ; `Json::FastWriter::writeValue'::`1'::dtor$6
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	lea	rcx, QWORD PTR $T69927[rbp]
	call	QWORD PTR __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$6@?0??writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z@4HA ENDP ; `Json::FastWriter::writeValue'::`1'::dtor$6
text$x	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?write@FastWriter@Json@@UEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBVValue@2@@Z DD imagerel $LN5
	DD	imagerel $LN5+127
	DD	imagerel $unwind$?write@FastWriter@Json@@UEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBVValue@2@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?write@FastWriter@Json@@UEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBVValue@2@@Z DD 011301H
	DD	06213H
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT ?write@FastWriter@Json@@UEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBVValue@2@@Z
_TEXT	SEGMENT
$T69994 = 32
this$ = 64
__$ReturnUdt$ = 72
root$ = 80
?write@FastWriter@Json@@UEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBVValue@2@@Z PROC ; Json::FastWriter::write, COMDAT

; 199  : {

$LN5:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
	mov	DWORD PTR $T69994[rsp], 0

; 200  :    document_ = "";

	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 8
	lea	rdx, OFFSET FLAT:??_C@_00CNPNBAHC@?$AA@
	call	QWORD PTR __imp_??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@PEBD@Z

; 201  :    writeValue( root );

	mov	rdx, QWORD PTR root$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?writeValue@FastWriter@Json@@AEAAXAEBVValue@2@@Z ; Json::FastWriter::writeValue

; 202  :    document_ += "\n";

	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 8
	lea	rdx, OFFSET FLAT:??_C@_01EEMJAFIK@?6?$AA@
	call	QWORD PTR __imp_??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@PEBD@Z

; 203  :    return document_;

	mov	rdx, QWORD PTR this$[rsp]
	add	rdx, 8
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	QWORD PTR __imp_??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z
	mov	eax, DWORD PTR $T69994[rsp]
	or	eax, 1
	mov	DWORD PTR $T69994[rsp], eax
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 204  : }

	add	rsp, 56					; 00000038H
	ret	0
?write@FastWriter@Json@@UEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBVValue@2@@Z ENDP ; Json::FastWriter::write
;	COMDAT pdata
pdata	SEGMENT
$pdata$?isMultineArray@StyledWriter@Json@@AEAA_NAEBVValue@2@@Z DD imagerel $LN20
	DD	imagerel $LN20+560
	DD	imagerel $unwind$?isMultineArray@StyledWriter@Json@@AEAA_NAEBVValue@2@@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?isMultineArray@StyledWriter@Json@@AEAA_NAEBVValue@2@@Z DD 010e01H
	DD	0a20eH
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT ?isMultineArray@StyledWriter@Json@@AEAA_NAEBVValue@2@@Z
_TEXT	SEGMENT
isMultiLine$ = 32
size$ = 36
index$50655 = 40
childValue$50659 = 48
lineLength$50661 = 56
index$50662 = 60
tv69 = 64
tv93 = 68
tv165 = 72
tv172 = 76
this$ = 96
value$ = 104
?isMultineArray@StyledWriter@Json@@AEAA_NAEBVValue@2@@Z PROC ; Json::StyledWriter::isMultineArray, COMDAT

; 406  : {

$LN20:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 88					; 00000058H

; 407  :    int size = value.size();

	mov	rcx, QWORD PTR value$[rsp]
	call	?size@Value@Json@@QEBAIXZ		; Json::Value::size
	mov	DWORD PTR size$[rsp], eax

; 408  :    bool isMultiLine = size*3 >= rightMargin_ ;

	mov	ecx, DWORD PTR size$[rsp]
	imul	ecx, 3
	mov	rax, QWORD PTR this$[rsp]
	cmp	ecx, DWORD PTR [rax+136]
	jl	SHORT $LN10@isMultineA
	mov	DWORD PTR tv69[rsp], 1
	jmp	SHORT $LN11@isMultineA
$LN10@isMultineA:
	mov	DWORD PTR tv69[rsp], 0
$LN11@isMultineA:
	movzx	eax, BYTE PTR tv69[rsp]
	mov	BYTE PTR isMultiLine$[rsp], al

; 409  :    childValues_.clear();

	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 8
	call	?clear@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::clear

; 410  :    for ( int index =0; index < size  &&  !isMultiLine; ++index )

	mov	DWORD PTR index$50655[rsp], 0
	jmp	SHORT $LN7@isMultineA
$LN6@isMultineA:
	mov	eax, DWORD PTR index$50655[rsp]
	add	eax, 1
	mov	DWORD PTR index$50655[rsp], eax
$LN7@isMultineA:
	mov	eax, DWORD PTR size$[rsp]
	cmp	DWORD PTR index$50655[rsp], eax
	jge	SHORT $LN5@isMultineA
	movzx	eax, BYTE PTR isMultiLine$[rsp]
	test	eax, eax
	jne	SHORT $LN5@isMultineA

; 411  :    {
; 412  :       const Value &childValue = value[index];

	mov	edx, DWORD PTR index$50655[rsp]
	mov	rcx, QWORD PTR value$[rsp]
	call	??AValue@Json@@QEBAAEBV01@I@Z		; Json::Value::operator[]
	mov	QWORD PTR childValue$50659[rsp], rax

; 413  :       isMultiLine = isMultiLine  ||
; 414  :                      ( (childValue.isArray()  ||  childValue.isObject())  &&  
; 415  :                         childValue.size() > 0 );

	movzx	eax, BYTE PTR isMultiLine$[rsp]
	test	eax, eax
	jne	SHORT $LN14@isMultineA
	mov	rcx, QWORD PTR childValue$50659[rsp]
	call	?isArray@Value@Json@@QEBA_NXZ		; Json::Value::isArray
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN12@isMultineA
	mov	rcx, QWORD PTR childValue$50659[rsp]
	call	?isObject@Value@Json@@QEBA_NXZ		; Json::Value::isObject
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN13@isMultineA
$LN12@isMultineA:
	mov	rcx, QWORD PTR childValue$50659[rsp]
	call	?size@Value@Json@@QEBAIXZ		; Json::Value::size
	test	eax, eax
	ja	SHORT $LN14@isMultineA
$LN13@isMultineA:
	mov	DWORD PTR tv93[rsp], 0
	jmp	SHORT $LN15@isMultineA
$LN14@isMultineA:
	mov	DWORD PTR tv93[rsp], 1
$LN15@isMultineA:
	movzx	eax, BYTE PTR tv93[rsp]
	mov	BYTE PTR isMultiLine$[rsp], al

; 416  :    }

	jmp	$LN6@isMultineA
$LN5@isMultineA:

; 417  :    if ( !isMultiLine ) // check if line length > max line length

	movzx	eax, BYTE PTR isMultiLine$[rsp]
	test	eax, eax
	jne	$LN4@isMultineA

; 418  :    {
; 419  :       childValues_.reserve( size );

	movsxd	rdx, DWORD PTR size$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 8
	call	?reserve@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAX_K@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::reserve

; 420  :       addChildValues_ = true;

	mov	r11, QWORD PTR this$[rsp]
	mov	BYTE PTR [r11+144], 1

; 421  :       int lineLength = 4 + (size-1)*2; // '[ ' + ', '*n + ' ]'

	mov	eax, DWORD PTR size$[rsp]
	lea	eax, DWORD PTR [rax+rax+2]
	mov	DWORD PTR lineLength$50661[rsp], eax

; 422  :       for ( int index =0; index < size  &&  !isMultiLine; ++index )

	mov	DWORD PTR index$50662[rsp], 0
	jmp	SHORT $LN3@isMultineA
$LN2@isMultineA:
	mov	eax, DWORD PTR index$50662[rsp]
	add	eax, 1
	mov	DWORD PTR index$50662[rsp], eax
$LN3@isMultineA:
	mov	eax, DWORD PTR size$[rsp]
	cmp	DWORD PTR index$50662[rsp], eax
	jge	$LN1@isMultineA
	movzx	eax, BYTE PTR isMultiLine$[rsp]
	test	eax, eax
	jne	$LN1@isMultineA

; 423  :       {
; 424  :          writeValue( value[index] );

	mov	edx, DWORD PTR index$50662[rsp]
	mov	rcx, QWORD PTR value$[rsp]
	call	??AValue@Json@@QEBAAEBV01@I@Z		; Json::Value::operator[]
	mov	rdx, rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?writeValue@StyledWriter@Json@@AEAAXAEBVValue@2@@Z ; Json::StyledWriter::writeValue

; 425  :          lineLength += int( childValues_[index].length() );

	movsxd	rdx, DWORD PTR index$50662[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 8
	call	??A?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@_K@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::operator[]
	mov	rcx, rax
	call	QWORD PTR __imp_?length@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ
	mov	r11, rax
	mov	eax, DWORD PTR lineLength$50661[rsp]
	add	eax, r11d
	mov	DWORD PTR lineLength$50661[rsp], eax

; 426  :          isMultiLine = isMultiLine  &&  hasCommentForValue( value[index] );

	movzx	eax, BYTE PTR isMultiLine$[rsp]
	test	eax, eax
	je	SHORT $LN16@isMultineA
	mov	edx, DWORD PTR index$50662[rsp]
	mov	rcx, QWORD PTR value$[rsp]
	call	??AValue@Json@@QEBAAEBV01@I@Z		; Json::Value::operator[]
	mov	rdx, rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?hasCommentForValue@StyledWriter@Json@@AEAA_NAEBVValue@2@@Z ; Json::StyledWriter::hasCommentForValue
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN16@isMultineA
	mov	DWORD PTR tv165[rsp], 1
	jmp	SHORT $LN17@isMultineA
$LN16@isMultineA:
	mov	DWORD PTR tv165[rsp], 0
$LN17@isMultineA:
	movzx	eax, BYTE PTR tv165[rsp]
	mov	BYTE PTR isMultiLine$[rsp], al

; 427  :       }

	jmp	$LN2@isMultineA
$LN1@isMultineA:

; 428  :       addChildValues_ = false;

	mov	rax, QWORD PTR this$[rsp]
	mov	BYTE PTR [rax+144], 0

; 429  :       isMultiLine = isMultiLine  ||  lineLength >= rightMargin_;

	movzx	eax, BYTE PTR isMultiLine$[rsp]
	test	eax, eax
	jne	SHORT $LN18@isMultineA
	mov	rax, QWORD PTR this$[rsp]
	mov	eax, DWORD PTR [rax+136]
	cmp	DWORD PTR lineLength$50661[rsp], eax
	jge	SHORT $LN18@isMultineA
	mov	DWORD PTR tv172[rsp], 0
	jmp	SHORT $LN19@isMultineA
$LN18@isMultineA:
	mov	DWORD PTR tv172[rsp], 1
$LN19@isMultineA:
	movzx	eax, BYTE PTR tv172[rsp]
	mov	BYTE PTR isMultiLine$[rsp], al
$LN4@isMultineA:

; 430  :    }
; 431  :    return isMultiLine;

	mov	al, BYTE PTR isMultiLine$[rsp]

; 432  : }

	add	rsp, 88					; 00000058H
	ret	0
?isMultineArray@StyledWriter@Json@@AEAA_NAEBVValue@2@@Z ENDP ; Json::StyledWriter::isMultineArray
END
